
Sprint_9.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000154  00800100  0000262a  000026be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000262a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000021f  00800254  00800254  00002812  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002812  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002870  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  000028b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002e7b  00000000  00000000  000029c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009bf  00000000  00000000  00005843  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013c3  00000000  00000000  00006202  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004a0  00000000  00000000  000075c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000755  00000000  00000000  00007a68  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000114b  00000000  00000000  000081bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  00009308  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 24 01 	jmp	0x248	; 0x248 <__ctors_end>
       4:	0c 94 ea 08 	jmp	0x11d4	; 0x11d4 <__vector_1>
       8:	0c 94 97 09 	jmp	0x132e	; 0x132e <__vector_2>
       c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      10:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      14:	0c 94 53 02 	jmp	0x4a6	; 0x4a6 <__vector_5>
      18:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      1c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      20:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      24:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      28:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      2c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      30:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      34:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      38:	0c 94 2e 02 	jmp	0x45c	; 0x45c <__vector_14>
      3c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      40:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      44:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      48:	0c 94 43 01 	jmp	0x286	; 0x286 <__vector_18>
      4c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      50:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      54:	0c 94 ee 02 	jmp	0x5dc	; 0x5dc <__vector_21>
      58:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      5c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      60:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      64:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>

00000068 <CHARSET>:
      68:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      78:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      88:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      98:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      a8:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      b8:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
      c8:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
      d8:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
      e8:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
      f8:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     108:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     118:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     128:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     138:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     148:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     158:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     168:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     178:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     188:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     198:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1a8:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1b8:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     1c8:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     1d8:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     1e8:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     1f8:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     208:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     218:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     228:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     238:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

00000248 <__ctors_end>:
     248:	11 24       	eor	r1, r1
     24a:	1f be       	out	0x3f, r1	; 63
     24c:	cf ef       	ldi	r28, 0xFF	; 255
     24e:	d8 e0       	ldi	r29, 0x08	; 8
     250:	de bf       	out	0x3e, r29	; 62
     252:	cd bf       	out	0x3d, r28	; 61

00000254 <__do_copy_data>:
     254:	12 e0       	ldi	r17, 0x02	; 2
     256:	a0 e0       	ldi	r26, 0x00	; 0
     258:	b1 e0       	ldi	r27, 0x01	; 1
     25a:	ea e2       	ldi	r30, 0x2A	; 42
     25c:	f6 e2       	ldi	r31, 0x26	; 38
     25e:	02 c0       	rjmp	.+4      	; 0x264 <__do_copy_data+0x10>
     260:	05 90       	lpm	r0, Z+
     262:	0d 92       	st	X+, r0
     264:	a4 35       	cpi	r26, 0x54	; 84
     266:	b1 07       	cpc	r27, r17
     268:	d9 f7       	brne	.-10     	; 0x260 <__do_copy_data+0xc>

0000026a <__do_clear_bss>:
     26a:	24 e0       	ldi	r18, 0x04	; 4
     26c:	a4 e5       	ldi	r26, 0x54	; 84
     26e:	b2 e0       	ldi	r27, 0x02	; 2
     270:	01 c0       	rjmp	.+2      	; 0x274 <.do_clear_bss_start>

00000272 <.do_clear_bss_loop>:
     272:	1d 92       	st	X+, r1

00000274 <.do_clear_bss_start>:
     274:	a3 37       	cpi	r26, 0x73	; 115
     276:	b2 07       	cpc	r27, r18
     278:	e1 f7       	brne	.-8      	; 0x272 <.do_clear_bss_loop>
     27a:	0e 94 4d 0a 	call	0x149a	; 0x149a <main>
     27e:	0c 94 13 13 	jmp	0x2626	; 0x2626 <_exit>

00000282 <__bad_interrupt>:
     282:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000286 <__vector_18>:
uint8_t contpwm = 1,indpw = 1;
uint8_t pack_init= 0,erro_init=0,formatx=0,cpy_c_recpt=0;

// receber informação pela serial
ISR(USART_RX_vect)
{
     286:	1f 92       	push	r1
     288:	0f 92       	push	r0
     28a:	0f b6       	in	r0, 0x3f	; 63
     28c:	0f 92       	push	r0
     28e:	11 24       	eor	r1, r1
     290:	2f 93       	push	r18
     292:	3f 93       	push	r19
     294:	4f 93       	push	r20
     296:	5f 93       	push	r21
     298:	6f 93       	push	r22
     29a:	7f 93       	push	r23
     29c:	8f 93       	push	r24
     29e:	9f 93       	push	r25
     2a0:	af 93       	push	r26
     2a2:	bf 93       	push	r27
     2a4:	cf 93       	push	r28
     2a6:	ef 93       	push	r30
     2a8:	ff 93       	push	r31
	//;HHHxLLL:
	
	char recebido;
	recebido = UDR0;
     2aa:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	
	if(pack_init == 1)
     2ae:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <pack_init>
     2b2:	81 30       	cpi	r24, 0x01	; 1
     2b4:	09 f0       	breq	.+2      	; 0x2b8 <__vector_18+0x32>
     2b6:	9d c0       	rjmp	.+314    	; 0x3f2 <__vector_18+0x16c>
	{
		
		if( (recebido >= '0' && recebido <= '9') | (recebido == 'x'))
     2b8:	91 e0       	ldi	r25, 0x01	; 1
     2ba:	80 ed       	ldi	r24, 0xD0	; 208
     2bc:	8c 0f       	add	r24, r28
     2be:	8a 30       	cpi	r24, 0x0A	; 10
     2c0:	08 f0       	brcs	.+2      	; 0x2c4 <__vector_18+0x3e>
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	91 11       	cpse	r25, r1
     2c6:	06 c0       	rjmp	.+12     	; 0x2d4 <__vector_18+0x4e>
     2c8:	81 e0       	ldi	r24, 0x01	; 1
     2ca:	c8 37       	cpi	r28, 0x78	; 120
     2cc:	09 f0       	breq	.+2      	; 0x2d0 <__vector_18+0x4a>
     2ce:	80 e0       	ldi	r24, 0x00	; 0
     2d0:	88 23       	and	r24, r24
     2d2:	11 f1       	breq	.+68     	; 0x318 <__vector_18+0x92>
		{
			presstemp[cont_recp] = recebido;
     2d4:	80 91 59 02 	lds	r24, 0x0259	; 0x800259 <cont_recp>
     2d8:	e8 2f       	mov	r30, r24
     2da:	f0 e0       	ldi	r31, 0x00	; 0
     2dc:	e6 5f       	subi	r30, 0xF6	; 246
     2de:	fe 4f       	sbci	r31, 0xFE	; 254
     2e0:	c0 83       	st	Z, r28
			cont_recp++;
     2e2:	8f 5f       	subi	r24, 0xFF	; 255
     2e4:	80 93 59 02 	sts	0x0259, r24	; 0x800259 <cont_recp>
			cpy_c_recpt = cont_recp;
     2e8:	80 93 54 02 	sts	0x0254, r24	; 0x800254 <__data_end>
			
			if(cont_recp==8)
     2ec:	88 30       	cpi	r24, 0x08	; 8
     2ee:	89 f4       	brne	.+34     	; 0x312 <__vector_18+0x8c>
			{
				strcpy(press ,"ERRO!  ");
     2f0:	e2 e5       	ldi	r30, 0x52	; 82
     2f2:	f1 e0       	ldi	r31, 0x01	; 1
     2f4:	a2 e1       	ldi	r26, 0x12	; 18
     2f6:	b1 e0       	ldi	r27, 0x01	; 1
     2f8:	01 90       	ld	r0, Z+
     2fa:	0d 92       	st	X+, r0
     2fc:	8a 95       	dec	r24
     2fe:	e1 f7       	brne	.-8      	; 0x2f8 <__vector_18+0x72>
				strcpy(presstemp ,clear);
     300:	62 e0       	ldi	r22, 0x02	; 2
     302:	71 e0       	ldi	r23, 0x01	; 1
     304:	8a e0       	ldi	r24, 0x0A	; 10
     306:	91 e0       	ldi	r25, 0x01	; 1
     308:	0e 94 22 10 	call	0x2044	; 0x2044 <strcpy>
				pack_init = 0;
     30c:	10 92 57 02 	sts	0x0257, r1	; 0x800257 <pack_init>
			}
			
			
			cont_recp = (cont_recp == 8) ? 0:cont_recp;
     310:	80 e0       	ldi	r24, 0x00	; 0
     312:	80 93 59 02 	sts	0x0259, r24	; 0x800259 <cont_recp>
     316:	6d c0       	rjmp	.+218    	; 0x3f2 <__vector_18+0x16c>
		}
		else if(recebido == ':' && cpy_c_recpt>=4)
     318:	ca 33       	cpi	r28, 0x3A	; 58
     31a:	09 f0       	breq	.+2      	; 0x31e <__vector_18+0x98>
     31c:	52 c0       	rjmp	.+164    	; 0x3c2 <__vector_18+0x13c>
     31e:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <__data_end>
     322:	84 30       	cpi	r24, 0x04	; 4
     324:	08 f4       	brcc	.+2      	; 0x328 <__vector_18+0xa2>
     326:	4d c0       	rjmp	.+154    	; 0x3c2 <__vector_18+0x13c>
		{
			cpy_c_recpt =0;
     328:	10 92 54 02 	sts	0x0254, r1	; 0x800254 <__data_end>
			pack_init = 0;
     32c:	10 92 57 02 	sts	0x0257, r1	; 0x800257 <pack_init>
     330:	30 91 55 02 	lds	r19, 0x0255	; 0x800255 <formatx>
     334:	60 91 58 02 	lds	r22, 0x0258	; 0x800258 <ind_x>
     338:	ea e0       	ldi	r30, 0x0A	; 10
     33a:	f1 e0       	ldi	r31, 0x01	; 1
			for(uint8_t i = 0; i<7; i++)
     33c:	80 e0       	ldi	r24, 0x00	; 0
			{
				formatx += (presstemp[i] == 'x') ? 1:0;
     33e:	41 e0       	ldi	r20, 0x01	; 1
     340:	50 e0       	ldi	r21, 0x00	; 0
     342:	91 91       	ld	r25, Z+
     344:	24 2f       	mov	r18, r20
     346:	98 37       	cpi	r25, 0x78	; 120
     348:	09 f0       	breq	.+2      	; 0x34c <__vector_18+0xc6>
     34a:	25 2f       	mov	r18, r21
     34c:	32 0f       	add	r19, r18
				ind_x = (presstemp[i] == 'x')? i:ind_x;
     34e:	98 37       	cpi	r25, 0x78	; 120
     350:	09 f4       	brne	.+2      	; 0x354 <__vector_18+0xce>
     352:	68 2f       	mov	r22, r24
		}
		else if(recebido == ':' && cpy_c_recpt>=4)
		{
			cpy_c_recpt =0;
			pack_init = 0;
			for(uint8_t i = 0; i<7; i++)
     354:	8f 5f       	subi	r24, 0xFF	; 255
     356:	87 30       	cpi	r24, 0x07	; 7
     358:	a1 f7       	brne	.-24     	; 0x342 <__vector_18+0xbc>
     35a:	60 93 58 02 	sts	0x0258, r22	; 0x800258 <ind_x>
     35e:	30 93 55 02 	sts	0x0255, r19	; 0x800255 <formatx>
			{
				formatx += (presstemp[i] == 'x') ? 1:0;
				ind_x = (presstemp[i] == 'x')? i:ind_x;
			}
			
			if( ind_x > 3)
     362:	64 30       	cpi	r22, 0x04	; 4
     364:	38 f0       	brcs	.+14     	; 0x374 <__vector_18+0xee>
			{
				strcpy(press ,"ERRO!   ");
				strcpy(presstemp ,clear);
     366:	62 e0       	ldi	r22, 0x02	; 2
     368:	71 e0       	ldi	r23, 0x01	; 1
     36a:	8a e0       	ldi	r24, 0x0A	; 10
     36c:	91 e0       	ldi	r25, 0x01	; 1
     36e:	0e 94 22 10 	call	0x2044	; 0x2044 <strcpy>
     372:	02 c0       	rjmp	.+4      	; 0x378 <__vector_18+0xf2>
				formatx =0;
				cont_recp = 0;
			}
			
			
			if(formatx!= 1 )
     374:	31 30       	cpi	r19, 0x01	; 1
     376:	a1 f0       	breq	.+40     	; 0x3a0 <__vector_18+0x11a>
			{
				
				strcpy(press ,"ERRO!   ");
     378:	89 e0       	ldi	r24, 0x09	; 9
     37a:	e9 e4       	ldi	r30, 0x49	; 73
     37c:	f1 e0       	ldi	r31, 0x01	; 1
     37e:	a2 e1       	ldi	r26, 0x12	; 18
     380:	b1 e0       	ldi	r27, 0x01	; 1
     382:	01 90       	ld	r0, Z+
     384:	0d 92       	st	X+, r0
     386:	8a 95       	dec	r24
     388:	e1 f7       	brne	.-8      	; 0x382 <__vector_18+0xfc>
				strcpy(presstemp ,clear);
     38a:	62 e0       	ldi	r22, 0x02	; 2
     38c:	71 e0       	ldi	r23, 0x01	; 1
     38e:	8a e0       	ldi	r24, 0x0A	; 10
     390:	91 e0       	ldi	r25, 0x01	; 1
     392:	0e 94 22 10 	call	0x2044	; 0x2044 <strcpy>
				pack_init = 0;
				formatx =0;
     396:	10 92 55 02 	sts	0x0255, r1	; 0x800255 <formatx>
				cont_recp = 0;
     39a:	10 92 59 02 	sts	0x0259, r1	; 0x800259 <cont_recp>
     39e:	4a c0       	rjmp	.+148    	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
				
			}
			else
			{
				strcpy(press , presstemp);
     3a0:	6a e0       	ldi	r22, 0x0A	; 10
     3a2:	71 e0       	ldi	r23, 0x01	; 1
     3a4:	82 e1       	ldi	r24, 0x12	; 18
     3a6:	91 e0       	ldi	r25, 0x01	; 1
     3a8:	0e 94 22 10 	call	0x2044	; 0x2044 <strcpy>
				strcpy(presstemp ,clear);
     3ac:	62 e0       	ldi	r22, 0x02	; 2
     3ae:	71 e0       	ldi	r23, 0x01	; 1
     3b0:	8a e0       	ldi	r24, 0x0A	; 10
     3b2:	91 e0       	ldi	r25, 0x01	; 1
     3b4:	0e 94 22 10 	call	0x2044	; 0x2044 <strcpy>
				pack_init = 0;
				formatx =0;
     3b8:	10 92 55 02 	sts	0x0255, r1	; 0x800255 <formatx>
				cont_recp =0;
     3bc:	10 92 59 02 	sts	0x0259, r1	; 0x800259 <cont_recp>
     3c0:	39 c0       	rjmp	.+114    	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
			}
			
		}
		else
		{
			strcpy(press ,"ERRO!  ");
     3c2:	88 e0       	ldi	r24, 0x08	; 8
     3c4:	e2 e5       	ldi	r30, 0x52	; 82
     3c6:	f1 e0       	ldi	r31, 0x01	; 1
     3c8:	a2 e1       	ldi	r26, 0x12	; 18
     3ca:	b1 e0       	ldi	r27, 0x01	; 1
     3cc:	01 90       	ld	r0, Z+
     3ce:	0d 92       	st	X+, r0
     3d0:	8a 95       	dec	r24
     3d2:	e1 f7       	brne	.-8      	; 0x3cc <__vector_18+0x146>
			strcpy(presstemp ,clear);
     3d4:	62 e0       	ldi	r22, 0x02	; 2
     3d6:	71 e0       	ldi	r23, 0x01	; 1
     3d8:	8a e0       	ldi	r24, 0x0A	; 10
     3da:	91 e0       	ldi	r25, 0x01	; 1
     3dc:	0e 94 22 10 	call	0x2044	; 0x2044 <strcpy>
			pack_init = 0;
     3e0:	10 92 57 02 	sts	0x0257, r1	; 0x800257 <pack_init>
			formatx =0;
     3e4:	10 92 55 02 	sts	0x0255, r1	; 0x800255 <formatx>
			cont_recp = 0;
     3e8:	10 92 59 02 	sts	0x0259, r1	; 0x800259 <cont_recp>
		}
	}

	pack_init = (recebido == ';') ? 1:pack_init;
     3ec:	cb 33       	cpi	r28, 0x3B	; 59
     3ee:	39 f4       	brne	.+14     	; 0x3fe <__vector_18+0x178>
     3f0:	09 c0       	rjmp	.+18     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     3f2:	cb 33       	cpi	r28, 0x3B	; 59
     3f4:	39 f0       	breq	.+14     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
	erro_init = (pack_init == 0 && recebido !=';' && recebido !=':')? 1:0;
     3f6:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <pack_init>
     3fa:	81 11       	cpse	r24, r1
     3fc:	1b c0       	rjmp	.+54     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
     3fe:	ca 33       	cpi	r28, 0x3A	; 58
     400:	39 f4       	brne	.+14     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     402:	18 c0       	rjmp	.+48     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
			formatx =0;
			cont_recp = 0;
		}
	}

	pack_init = (recebido == ';') ? 1:pack_init;
     404:	81 e0       	ldi	r24, 0x01	; 1
     406:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <pack_init>
	erro_init = (pack_init == 0 && recebido !=';' && recebido !=':')? 1:0;
     40a:	10 92 56 02 	sts	0x0256, r1	; 0x800256 <erro_init>
     40e:	14 c0       	rjmp	.+40     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
	
	if(erro_init)
	{
		strcpy(press ,"ERRO!  ");
     410:	88 e0       	ldi	r24, 0x08	; 8
     412:	e2 e5       	ldi	r30, 0x52	; 82
     414:	f1 e0       	ldi	r31, 0x01	; 1
     416:	a2 e1       	ldi	r26, 0x12	; 18
     418:	b1 e0       	ldi	r27, 0x01	; 1
     41a:	01 90       	ld	r0, Z+
     41c:	0d 92       	st	X+, r0
     41e:	8a 95       	dec	r24
     420:	e1 f7       	brne	.-8      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
		strcpy(presstemp ,clear);
     422:	62 e0       	ldi	r22, 0x02	; 2
     424:	71 e0       	ldi	r23, 0x01	; 1
     426:	8a e0       	ldi	r24, 0x0A	; 10
     428:	91 e0       	ldi	r25, 0x01	; 1
     42a:	0e 94 22 10 	call	0x2044	; 0x2044 <strcpy>
		erro_init=0;
     42e:	10 92 56 02 	sts	0x0256, r1	; 0x800256 <erro_init>
     432:	02 c0       	rjmp	.+4      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
			cont_recp = 0;
		}
	}

	pack_init = (recebido == ';') ? 1:pack_init;
	erro_init = (pack_init == 0 && recebido !=';' && recebido !=':')? 1:0;
     434:	10 92 56 02 	sts	0x0256, r1	; 0x800256 <erro_init>
		strcpy(presstemp ,clear);
		erro_init=0;
	}
	
	
}
     438:	ff 91       	pop	r31
     43a:	ef 91       	pop	r30
     43c:	cf 91       	pop	r28
     43e:	bf 91       	pop	r27
     440:	af 91       	pop	r26
     442:	9f 91       	pop	r25
     444:	8f 91       	pop	r24
     446:	7f 91       	pop	r23
     448:	6f 91       	pop	r22
     44a:	5f 91       	pop	r21
     44c:	4f 91       	pop	r20
     44e:	3f 91       	pop	r19
     450:	2f 91       	pop	r18
     452:	0f 90       	pop	r0
     454:	0f be       	out	0x3f, r0	; 63
     456:	0f 90       	pop	r0
     458:	1f 90       	pop	r1
     45a:	18 95       	reti

0000045c <__vector_14>:

ISR(TIMER0_COMPA_vect)
{
     45c:	1f 92       	push	r1
     45e:	0f 92       	push	r0
     460:	0f b6       	in	r0, 0x3f	; 63
     462:	0f 92       	push	r0
     464:	11 24       	eor	r1, r1
     466:	8f 93       	push	r24
     468:	9f 93       	push	r25
     46a:	af 93       	push	r26
     46c:	bf 93       	push	r27

	tempo_ms++;
     46e:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <tempo_ms>
     472:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <tempo_ms+0x1>
     476:	a0 91 6a 02 	lds	r26, 0x026A	; 0x80026a <tempo_ms+0x2>
     47a:	b0 91 6b 02 	lds	r27, 0x026B	; 0x80026b <tempo_ms+0x3>
     47e:	01 96       	adiw	r24, 0x01	; 1
     480:	a1 1d       	adc	r26, r1
     482:	b1 1d       	adc	r27, r1
     484:	80 93 68 02 	sts	0x0268, r24	; 0x800268 <tempo_ms>
     488:	90 93 69 02 	sts	0x0269, r25	; 0x800269 <tempo_ms+0x1>
     48c:	a0 93 6a 02 	sts	0x026A, r26	; 0x80026a <tempo_ms+0x2>
     490:	b0 93 6b 02 	sts	0x026B, r27	; 0x80026b <tempo_ms+0x3>

}
     494:	bf 91       	pop	r27
     496:	af 91       	pop	r26
     498:	9f 91       	pop	r25
     49a:	8f 91       	pop	r24
     49c:	0f 90       	pop	r0
     49e:	0f be       	out	0x3f, r0	; 63
     4a0:	0f 90       	pop	r0
     4a2:	1f 90       	pop	r1
     4a4:	18 95       	reti

000004a6 <__vector_5>:
	
	
}

ISR(PCINT2_vect)
{
     4a6:	1f 92       	push	r1
     4a8:	0f 92       	push	r0
     4aa:	0f b6       	in	r0, 0x3f	; 63
     4ac:	0f 92       	push	r0
     4ae:	11 24       	eor	r1, r1
     4b0:	2f 93       	push	r18
     4b2:	3f 93       	push	r19
     4b4:	4f 93       	push	r20
     4b6:	5f 93       	push	r21
     4b8:	6f 93       	push	r22
     4ba:	7f 93       	push	r23
     4bc:	8f 93       	push	r24
     4be:	9f 93       	push	r25
     4c0:	af 93       	push	r26
     4c2:	bf 93       	push	r27
     4c4:	ef 93       	push	r30
     4c6:	ff 93       	push	r31

	if(PIND &(1<<4))
     4c8:	4c 9b       	sbis	0x09, 4	; 9
     4ca:	13 c0       	rjmp	.+38     	; 0x4f2 <__vector_5+0x4c>
	{
		
		tbat = tempo_ms - tbat_ant ;
     4cc:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <tempo_ms>
     4d0:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <tempo_ms+0x1>
     4d4:	20 91 6e 02 	lds	r18, 0x026E	; 0x80026e <tbat_ant>
     4d8:	30 91 6f 02 	lds	r19, 0x026F	; 0x80026f <tbat_ant+0x1>
     4dc:	ac 01       	movw	r20, r24
     4de:	42 1b       	sub	r20, r18
     4e0:	53 0b       	sbc	r21, r19
     4e2:	50 93 71 02 	sts	0x0271, r21	; 0x800271 <tbat+0x1>
     4e6:	40 93 70 02 	sts	0x0270, r20	; 0x800270 <tbat>
		tbat_ant = tempo_ms;
     4ea:	90 93 6f 02 	sts	0x026F, r25	; 0x80026f <tbat_ant+0x1>
     4ee:	80 93 6e 02 	sts	0x026E, r24	; 0x80026e <tbat_ant>
		
	}
	
	bpm =  (1./tbat)*60000;
     4f2:	60 91 70 02 	lds	r22, 0x0270	; 0x800270 <tbat>
     4f6:	70 91 71 02 	lds	r23, 0x0271	; 0x800271 <tbat+0x1>
     4fa:	80 e0       	ldi	r24, 0x00	; 0
     4fc:	90 e0       	ldi	r25, 0x00	; 0
     4fe:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <__floatunsisf>
     502:	9b 01       	movw	r18, r22
     504:	ac 01       	movw	r20, r24
     506:	60 e0       	ldi	r22, 0x00	; 0
     508:	70 e0       	ldi	r23, 0x00	; 0
     50a:	80 e8       	ldi	r24, 0x80	; 128
     50c:	9f e3       	ldi	r25, 0x3F	; 63
     50e:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divsf3>
     512:	20 e0       	ldi	r18, 0x00	; 0
     514:	30 e6       	ldi	r19, 0x60	; 96
     516:	4a e6       	ldi	r20, 0x6A	; 106
     518:	57 e4       	ldi	r21, 0x47	; 71
     51a:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__mulsf3>
     51e:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <__fixunssfsi>
     522:	60 93 76 02 	sts	0x0276, r22	; 0x800276 <bpm>
	
	//seletor de função
	if(!(PIND &(1<<5)))
     526:	4d 99       	sbic	0x09, 5	; 9
     528:	13 c0       	rjmp	.+38     	; 0x550 <__vector_5+0xaa>
	{
		sel+= 1;
     52a:	80 91 77 02 	lds	r24, 0x0277	; 0x800277 <sel>
     52e:	8f 5f       	subi	r24, 0xFF	; 255
     530:	80 93 77 02 	sts	0x0277, r24	; 0x800277 <sel>
		sel = (sel == 5) ? 0:sel;
     534:	85 30       	cpi	r24, 0x05	; 5
     536:	e1 f1       	breq	.+120    	; 0x5b0 <__vector_5+0x10a>
		cursor = (sel==0) ? 0:1;
     538:	91 e0       	ldi	r25, 0x01	; 1
     53a:	81 11       	cpse	r24, r1
     53c:	01 c0       	rjmp	.+2      	; 0x540 <__vector_5+0x9a>
     53e:	90 e0       	ldi	r25, 0x00	; 0
     540:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <cursor>
		if(sel==3){
     544:	83 30       	cpi	r24, 0x03	; 3
     546:	21 f4       	brne	.+8      	; 0x550 <__vector_5+0xaa>
		x_pass = 0;	
     548:	10 92 73 02 	sts	0x0273, r1	; 0x800273 <x_pass>
		nokia_lcd_clear();
     54c:	0e 94 b0 0c 	call	0x1960	; 0x1960 <nokia_lcd_clear>
		}

	}
	// navegação
	if(!(PIND &(1<<6)))
     550:	4e 99       	sbic	0x09, 6	; 9
     552:	09 c0       	rjmp	.+18     	; 0x566 <__vector_5+0xc0>
	{
	   cursor -= (cursor != 1) ? 1:0;
     554:	80 91 75 02 	lds	r24, 0x0275	; 0x800275 <cursor>
     558:	91 e0       	ldi	r25, 0x01	; 1
     55a:	81 30       	cpi	r24, 0x01	; 1
     55c:	09 f4       	brne	.+2      	; 0x560 <__vector_5+0xba>
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	89 1b       	sub	r24, r25
     562:	80 93 75 02 	sts	0x0275, r24	; 0x800275 <cursor>
	}
	
	if(!(PIND &(1<<7)))
     566:	4f 99       	sbic	0x09, 7	; 9
     568:	28 c0       	rjmp	.+80     	; 0x5ba <__vector_5+0x114>
	{
		if(sel == 1){
     56a:	80 91 77 02 	lds	r24, 0x0277	; 0x800277 <sel>
     56e:	81 30       	cpi	r24, 0x01	; 1
     570:	49 f4       	brne	.+18     	; 0x584 <__vector_5+0xde>
			cursor+= 1;
     572:	80 91 75 02 	lds	r24, 0x0275	; 0x800275 <cursor>
     576:	8f 5f       	subi	r24, 0xFF	; 255
			cursor = (cursor == 4) ? 3:cursor;
     578:	84 30       	cpi	r24, 0x04	; 4
     57a:	09 f4       	brne	.+2      	; 0x57e <__vector_5+0xd8>
     57c:	83 e0       	ldi	r24, 0x03	; 3
     57e:	80 93 75 02 	sts	0x0275, r24	; 0x800275 <cursor>
     582:	1b c0       	rjmp	.+54     	; 0x5ba <__vector_5+0x114>
		    }
		if(sel == 2){
     584:	82 30       	cpi	r24, 0x02	; 2
     586:	49 f4       	brne	.+18     	; 0x59a <__vector_5+0xf4>
			cursor+= 1;
     588:	80 91 75 02 	lds	r24, 0x0275	; 0x800275 <cursor>
     58c:	8f 5f       	subi	r24, 0xFF	; 255
			cursor = (cursor == 6) ? 5:cursor;
     58e:	86 30       	cpi	r24, 0x06	; 6
     590:	09 f4       	brne	.+2      	; 0x594 <__vector_5+0xee>
     592:	85 e0       	ldi	r24, 0x05	; 5
     594:	80 93 75 02 	sts	0x0275, r24	; 0x800275 <cursor>
     598:	10 c0       	rjmp	.+32     	; 0x5ba <__vector_5+0x114>
		}	
		
		if(sel == 4){
     59a:	84 30       	cpi	r24, 0x04	; 4
     59c:	71 f4       	brne	.+28     	; 0x5ba <__vector_5+0x114>
			cursor+= 1;
     59e:	90 91 75 02 	lds	r25, 0x0275	; 0x800275 <cursor>
     5a2:	9f 5f       	subi	r25, 0xFF	; 255
			cursor = (cursor == 5) ? 4:cursor;
     5a4:	95 30       	cpi	r25, 0x05	; 5
     5a6:	09 f4       	brne	.+2      	; 0x5aa <__vector_5+0x104>
     5a8:	98 2f       	mov	r25, r24
     5aa:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <cursor>
		}
		
	}

}
     5ae:	05 c0       	rjmp	.+10     	; 0x5ba <__vector_5+0x114>
	
	//seletor de função
	if(!(PIND &(1<<5)))
	{
		sel+= 1;
		sel = (sel == 5) ? 0:sel;
     5b0:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <sel>
		cursor = (sel==0) ? 0:1;
     5b4:	10 92 75 02 	sts	0x0275, r1	; 0x800275 <cursor>
     5b8:	cb cf       	rjmp	.-106    	; 0x550 <__vector_5+0xaa>
			cursor = (cursor == 5) ? 4:cursor;
		}
		
	}

}
     5ba:	ff 91       	pop	r31
     5bc:	ef 91       	pop	r30
     5be:	bf 91       	pop	r27
     5c0:	af 91       	pop	r26
     5c2:	9f 91       	pop	r25
     5c4:	8f 91       	pop	r24
     5c6:	7f 91       	pop	r23
     5c8:	6f 91       	pop	r22
     5ca:	5f 91       	pop	r21
     5cc:	4f 91       	pop	r20
     5ce:	3f 91       	pop	r19
     5d0:	2f 91       	pop	r18
     5d2:	0f 90       	pop	r0
     5d4:	0f be       	out	0x3f, r0	; 63
     5d6:	0f 90       	pop	r0
     5d8:	1f 90       	pop	r1
     5da:	18 95       	reti

000005dc <__vector_21>:

ISR(ADC_vect)
{
     5dc:	1f 92       	push	r1
     5de:	0f 92       	push	r0
     5e0:	0f b6       	in	r0, 0x3f	; 63
     5e2:	0f 92       	push	r0
     5e4:	11 24       	eor	r1, r1
     5e6:	8f 93       	push	r24
     5e8:	9f 93       	push	r25
	
	leitura_ADC = ADC;
     5ea:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
     5ee:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
     5f2:	90 93 6d 02 	sts	0x026D, r25	; 0x80026d <leitura_ADC+0x1>
     5f6:	80 93 6c 02 	sts	0x026C, r24	; 0x80026c <leitura_ADC>
}
     5fa:	9f 91       	pop	r25
     5fc:	8f 91       	pop	r24
     5fe:	0f 90       	pop	r0
     600:	0f be       	out	0x3f, r0	; 63
     602:	0f 90       	pop	r0
     604:	1f 90       	pop	r1
     606:	18 95       	reti

00000608 <freq_resp_pwm>:
	}
}


void freq_resp_pwm(uint8_t cont)
{
     608:	cf 93       	push	r28
     60a:	df 93       	push	r29
     60c:	cd b7       	in	r28, 0x3d	; 61
     60e:	de b7       	in	r29, 0x3e	; 62
     610:	62 97       	sbiw	r28, 0x12	; 18
     612:	0f b6       	in	r0, 0x3f	; 63
     614:	f8 94       	cli
     616:	de bf       	out	0x3e, r29	; 62
     618:	0f be       	out	0x3f, r0	; 63
     61a:	cd bf       	out	0x3d, r28	; 61
	uint16_t ocr_val [9] = {2000,2250,2500,2750,3000,3238,3500,3750,4000};
     61c:	92 e1       	ldi	r25, 0x12	; 18
     61e:	e1 e2       	ldi	r30, 0x21	; 33
     620:	f1 e0       	ldi	r31, 0x01	; 1
     622:	de 01       	movw	r26, r28
     624:	11 96       	adiw	r26, 0x01	; 1
     626:	01 90       	ld	r0, Z+
     628:	0d 92       	st	X+, r0
     62a:	9a 95       	dec	r25
     62c:	e1 f7       	brne	.-8      	; 0x626 <freq_resp_pwm+0x1e>
	
	OCR1A = ocr_val[cont];
     62e:	e8 2f       	mov	r30, r24
     630:	f0 e0       	ldi	r31, 0x00	; 0
     632:	ee 0f       	add	r30, r30
     634:	ff 1f       	adc	r31, r31
     636:	21 e0       	ldi	r18, 0x01	; 1
     638:	30 e0       	ldi	r19, 0x00	; 0
     63a:	2c 0f       	add	r18, r28
     63c:	3d 1f       	adc	r19, r29
     63e:	e2 0f       	add	r30, r18
     640:	f3 1f       	adc	r31, r19
     642:	20 81       	ld	r18, Z
     644:	31 81       	ldd	r19, Z+1	; 0x01
     646:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     64a:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
	//alerta
	if(cont == 0)
     64e:	81 11       	cpse	r24, r1
     650:	02 c0       	rjmp	.+4      	; 0x656 <freq_resp_pwm+0x4e>
	{
		  
		PORTB |= 0b00001000;
     652:	2b 9a       	sbi	0x05, 3	; 5
     654:	01 c0       	rjmp	.+2      	; 0x658 <freq_resp_pwm+0x50>
	}
	
	else
	{
		PORTB &= 0b11110111 ;
     656:	2b 98       	cbi	0x05, 3	; 5
	}
	
}
     658:	62 96       	adiw	r28, 0x12	; 18
     65a:	0f b6       	in	r0, 0x3f	; 63
     65c:	f8 94       	cli
     65e:	de bf       	out	0x3e, r29	; 62
     660:	0f be       	out	0x3f, r0	; 63
     662:	cd bf       	out	0x3d, r28	; 61
     664:	df 91       	pop	r29
     666:	cf 91       	pop	r28
     668:	08 95       	ret

0000066a <plot_sinaisVitais>:

void plot_sinaisVitais(uint8_t bpm, uint8_t temperatura, uint8_t spo2 ,char press[])
{
     66a:	9f 92       	push	r9
     66c:	af 92       	push	r10
     66e:	bf 92       	push	r11
     670:	cf 92       	push	r12
     672:	df 92       	push	r13
     674:	ef 92       	push	r14
     676:	ff 92       	push	r15
     678:	0f 93       	push	r16
     67a:	1f 93       	push	r17
     67c:	cf 93       	push	r28
     67e:	df 93       	push	r29
     680:	cd b7       	in	r28, 0x3d	; 61
     682:	de b7       	in	r29, 0x3e	; 62
     684:	2f 97       	sbiw	r28, 0x0f	; 15
     686:	0f b6       	in	r0, 0x3f	; 63
     688:	f8 94       	cli
     68a:	de bf       	out	0x3e, r29	; 62
     68c:	0f be       	out	0x3f, r0	; 63
     68e:	cd bf       	out	0x3d, r28	; 61
     690:	f6 2e       	mov	r15, r22
     692:	94 2e       	mov	r9, r20
     694:	59 01       	movw	r10, r18
	char bpm_s[5],temperatura_s[5],spo2_s[5];
	
	sprintf(bpm_s, "%d", bpm);
     696:	1f 92       	push	r1
     698:	8f 93       	push	r24
     69a:	0a e5       	ldi	r16, 0x5A	; 90
     69c:	11 e0       	ldi	r17, 0x01	; 1
     69e:	1f 93       	push	r17
     6a0:	0f 93       	push	r16
     6a2:	ce 01       	movw	r24, r28
     6a4:	01 96       	adiw	r24, 0x01	; 1
     6a6:	6c 01       	movw	r12, r24
     6a8:	9f 93       	push	r25
     6aa:	8f 93       	push	r24
     6ac:	0e 94 29 10 	call	0x2052	; 0x2052 <sprintf>
	sprintf(temperatura_s, "%d", temperatura);
     6b0:	1f 92       	push	r1
     6b2:	ff 92       	push	r15
     6b4:	1f 93       	push	r17
     6b6:	0f 93       	push	r16
     6b8:	7e 01       	movw	r14, r28
     6ba:	96 e0       	ldi	r25, 0x06	; 6
     6bc:	e9 0e       	add	r14, r25
     6be:	f1 1c       	adc	r15, r1
     6c0:	ff 92       	push	r15
     6c2:	ef 92       	push	r14
     6c4:	0e 94 29 10 	call	0x2052	; 0x2052 <sprintf>
	sprintf(spo2_s, "%d", spo2);
     6c8:	1f 92       	push	r1
     6ca:	9f 92       	push	r9
     6cc:	1f 93       	push	r17
     6ce:	0f 93       	push	r16
     6d0:	8e 01       	movw	r16, r28
     6d2:	05 5f       	subi	r16, 0xF5	; 245
     6d4:	1f 4f       	sbci	r17, 0xFF	; 255
     6d6:	1f 93       	push	r17
     6d8:	0f 93       	push	r16
     6da:	0e 94 29 10 	call	0x2052	; 0x2052 <sprintf>

	
	nokia_lcd_clear();
     6de:	0e 94 b0 0c 	call	0x1960	; 0x1960 <nokia_lcd_clear>
	
		
	nokia_lcd_set_cursor(0,0);
     6e2:	60 e0       	ldi	r22, 0x00	; 0
     6e4:	80 e0       	ldi	r24, 0x00	; 0
     6e6:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Sinais Vitais",1);
     6ea:	61 e0       	ldi	r22, 0x01	; 1
     6ec:	8d e5       	ldi	r24, 0x5D	; 93
     6ee:	91 e0       	ldi	r25, 0x01	; 1
     6f0:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		
	nokia_lcd_set_cursor(10,10);
     6f4:	6a e0       	ldi	r22, 0x0A	; 10
     6f6:	8a e0       	ldi	r24, 0x0A	; 10
     6f8:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string(bpm_s,1);
     6fc:	61 e0       	ldi	r22, 0x01	; 1
     6fe:	c6 01       	movw	r24, r12
     700:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(45,10);
     704:	6a e0       	ldi	r22, 0x0A	; 10
     706:	8d e2       	ldi	r24, 0x2D	; 45
     708:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string("bpm",1);
     70c:	61 e0       	ldi	r22, 0x01	; 1
     70e:	8b e6       	ldi	r24, 0x6B	; 107
     710:	91 e0       	ldi	r25, 0x01	; 1
     712:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		
	nokia_lcd_set_cursor(10,20);
     716:	64 e1       	ldi	r22, 0x14	; 20
     718:	8a e0       	ldi	r24, 0x0A	; 10
     71a:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string(spo2_s,1);
     71e:	61 e0       	ldi	r22, 0x01	; 1
     720:	c8 01       	movw	r24, r16
     722:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(45,20);
     726:	64 e1       	ldi	r22, 0x14	; 20
     728:	8d e2       	ldi	r24, 0x2D	; 45
     72a:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string("%SpO2",1);
     72e:	61 e0       	ldi	r22, 0x01	; 1
     730:	8f e6       	ldi	r24, 0x6F	; 111
     732:	91 e0       	ldi	r25, 0x01	; 1
     734:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		
	nokia_lcd_set_cursor(10,30);
     738:	6e e1       	ldi	r22, 0x1E	; 30
     73a:	8a e0       	ldi	r24, 0x0A	; 10
     73c:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string(temperatura_s,1);
     740:	61 e0       	ldi	r22, 0x01	; 1
     742:	c7 01       	movw	r24, r14
     744:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(45,30);
     748:	6e e1       	ldi	r22, 0x1E	; 30
     74a:	8d e2       	ldi	r24, 0x2D	; 45
     74c:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string("°C",1);
     750:	61 e0       	ldi	r22, 0x01	; 1
     752:	85 e7       	ldi	r24, 0x75	; 117
     754:	91 e0       	ldi	r25, 0x01	; 1
     756:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		
	nokia_lcd_set_cursor(10,40);
     75a:	68 e2       	ldi	r22, 0x28	; 40
     75c:	8a e0       	ldi	r24, 0x0A	; 10
     75e:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string(press,1);
     762:	61 e0       	ldi	r22, 0x01	; 1
     764:	c5 01       	movw	r24, r10
     766:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(52,40);
     76a:	68 e2       	ldi	r22, 0x28	; 40
     76c:	84 e3       	ldi	r24, 0x34	; 52
     76e:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string("mmHg",1);
     772:	61 e0       	ldi	r22, 0x01	; 1
     774:	88 e7       	ldi	r24, 0x78	; 120
     776:	91 e0       	ldi	r25, 0x01	; 1
     778:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	
	nokia_lcd_render();
     77c:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <nokia_lcd_render>
	
	
}
     780:	0f b6       	in	r0, 0x3f	; 63
     782:	f8 94       	cli
     784:	de bf       	out	0x3e, r29	; 62
     786:	0f be       	out	0x3f, r0	; 63
     788:	cd bf       	out	0x3d, r28	; 61
     78a:	2f 96       	adiw	r28, 0x0f	; 15
     78c:	0f b6       	in	r0, 0x3f	; 63
     78e:	f8 94       	cli
     790:	de bf       	out	0x3e, r29	; 62
     792:	0f be       	out	0x3f, r0	; 63
     794:	cd bf       	out	0x3d, r28	; 61
     796:	df 91       	pop	r29
     798:	cf 91       	pop	r28
     79a:	1f 91       	pop	r17
     79c:	0f 91       	pop	r16
     79e:	ff 90       	pop	r15
     7a0:	ef 90       	pop	r14
     7a2:	df 90       	pop	r13
     7a4:	cf 90       	pop	r12
     7a6:	bf 90       	pop	r11
     7a8:	af 90       	pop	r10
     7aa:	9f 90       	pop	r9
     7ac:	08 95       	ret

000007ae <plot_parametros>:
void plot_parametros(uint8_t FreqRespiracao,uint8_t nivelo2, uint8_t volume)
{
     7ae:	ef 92       	push	r14
     7b0:	ff 92       	push	r15
     7b2:	0f 93       	push	r16
     7b4:	1f 93       	push	r17
     7b6:	cf 93       	push	r28
     7b8:	df 93       	push	r29
     7ba:	cd b7       	in	r28, 0x3d	; 61
     7bc:	de b7       	in	r29, 0x3e	; 62
     7be:	2f 97       	sbiw	r28, 0x0f	; 15
     7c0:	0f b6       	in	r0, 0x3f	; 63
     7c2:	f8 94       	cli
     7c4:	de bf       	out	0x3e, r29	; 62
     7c6:	0f be       	out	0x3f, r0	; 63
     7c8:	cd bf       	out	0x3d, r28	; 61
     7ca:	f8 2e       	mov	r15, r24
     7cc:	e4 2e       	mov	r14, r20
	char freq_s[5],nivelo2_s[5],volume_s[5];
	
	sprintf(nivelo2_s, "%d", nivelo2);
     7ce:	1f 92       	push	r1
     7d0:	6f 93       	push	r22
     7d2:	0a e5       	ldi	r16, 0x5A	; 90
     7d4:	11 e0       	ldi	r17, 0x01	; 1
     7d6:	1f 93       	push	r17
     7d8:	0f 93       	push	r16
     7da:	ce 01       	movw	r24, r28
     7dc:	06 96       	adiw	r24, 0x06	; 6
     7de:	9f 93       	push	r25
     7e0:	8f 93       	push	r24
     7e2:	0e 94 29 10 	call	0x2052	; 0x2052 <sprintf>
	sprintf(volume_s, "%d", volume);
     7e6:	1f 92       	push	r1
     7e8:	ef 92       	push	r14
     7ea:	1f 93       	push	r17
     7ec:	0f 93       	push	r16
     7ee:	ce 01       	movw	r24, r28
     7f0:	0b 96       	adiw	r24, 0x0b	; 11
     7f2:	9f 93       	push	r25
     7f4:	8f 93       	push	r24
     7f6:	0e 94 29 10 	call	0x2052	; 0x2052 <sprintf>
	sprintf(freq_s, "%d", FreqRespiracao);
     7fa:	1f 92       	push	r1
     7fc:	ff 92       	push	r15
     7fe:	1f 93       	push	r17
     800:	0f 93       	push	r16
     802:	ce 01       	movw	r24, r28
     804:	01 96       	adiw	r24, 0x01	; 1
     806:	9f 93       	push	r25
     808:	8f 93       	push	r24
     80a:	0e 94 29 10 	call	0x2052	; 0x2052 <sprintf>
	
	nokia_lcd_clear();
     80e:	0e 94 b0 0c 	call	0x1960	; 0x1960 <nokia_lcd_clear>
	
	if (cursor == 1){
     812:	80 91 75 02 	lds	r24, 0x0275	; 0x800275 <cursor>
     816:	0f b6       	in	r0, 0x3f	; 63
     818:	f8 94       	cli
     81a:	de bf       	out	0x3e, r29	; 62
     81c:	0f be       	out	0x3f, r0	; 63
     81e:	cd bf       	out	0x3d, r28	; 61
     820:	81 30       	cpi	r24, 0x01	; 1
     822:	09 f0       	breq	.+2      	; 0x826 <plot_parametros+0x78>
     824:	52 c0       	rjmp	.+164    	; 0x8ca <plot_parametros+0x11c>
		
	nokia_lcd_set_cursor(0,0);
     826:	60 e0       	ldi	r22, 0x00	; 0
     828:	80 e0       	ldi	r24, 0x00	; 0
     82a:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Parametros",1);
     82e:	61 e0       	ldi	r22, 0x01	; 1
     830:	8d e7       	ldi	r24, 0x7D	; 125
     832:	91 e0       	ldi	r25, 0x01	; 1
     834:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	
	nokia_lcd_set_cursor(0,15);
     838:	6f e0       	ldi	r22, 0x0F	; 15
     83a:	80 e0       	ldi	r24, 0x00	; 0
     83c:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string("resp/min * ",1);
     840:	61 e0       	ldi	r22, 0x01	; 1
     842:	88 e8       	ldi	r24, 0x88	; 136
     844:	91 e0       	ldi	r25, 0x01	; 1
     846:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	//nokia_lcd_set_cursor(30,15);
	
	nokia_lcd_set_cursor(70,15);
     84a:	6f e0       	ldi	r22, 0x0F	; 15
     84c:	86 e4       	ldi	r24, 0x46	; 70
     84e:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string(freq_s,1);
     852:	61 e0       	ldi	r22, 0x01	; 1
     854:	ce 01       	movw	r24, r28
     856:	01 96       	adiw	r24, 0x01	; 1
     858:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

	nokia_lcd_set_cursor(0,25);
     85c:	69 e1       	ldi	r22, 0x19	; 25
     85e:	80 e0       	ldi	r24, 0x00	; 0
     860:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Nivel02",1);
     864:	61 e0       	ldi	r22, 0x01	; 1
     866:	84 e9       	ldi	r24, 0x94	; 148
     868:	91 e0       	ldi	r25, 0x01	; 1
     86a:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(55,25);
     86e:	69 e1       	ldi	r22, 0x19	; 25
     870:	87 e3       	ldi	r24, 0x37	; 55
     872:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string(nivelo2_s,1);
     876:	61 e0       	ldi	r22, 0x01	; 1
     878:	ce 01       	movw	r24, r28
     87a:	06 96       	adiw	r24, 0x06	; 6
     87c:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(75,25);
     880:	69 e1       	ldi	r22, 0x19	; 25
     882:	8b e4       	ldi	r24, 0x4B	; 75
     884:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string("%",1);
     888:	61 e0       	ldi	r22, 0x01	; 1
     88a:	8c e9       	ldi	r24, 0x9C	; 156
     88c:	91 e0       	ldi	r25, 0x01	; 1
     88e:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

	nokia_lcd_set_cursor(0,35);
     892:	63 e2       	ldi	r22, 0x23	; 35
     894:	80 e0       	ldi	r24, 0x00	; 0
     896:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Volume",1);
     89a:	61 e0       	ldi	r22, 0x01	; 1
     89c:	8e e9       	ldi	r24, 0x9E	; 158
     89e:	91 e0       	ldi	r25, 0x01	; 1
     8a0:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(70,35);
     8a4:	63 e2       	ldi	r22, 0x23	; 35
     8a6:	86 e4       	ldi	r24, 0x46	; 70
     8a8:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string(volume_s,1);
     8ac:	61 e0       	ldi	r22, 0x01	; 1
     8ae:	ce 01       	movw	r24, r28
     8b0:	0b 96       	adiw	r24, 0x0b	; 11
     8b2:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(75,35);
     8b6:	63 e2       	ldi	r22, 0x23	; 35
     8b8:	8b e4       	ldi	r24, 0x4B	; 75
     8ba:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string("V",1);
     8be:	61 e0       	ldi	r22, 0x01	; 1
     8c0:	85 ea       	ldi	r24, 0xA5	; 165
     8c2:	91 e0       	ldi	r25, 0x01	; 1
     8c4:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
     8c8:	a9 c0       	rjmp	.+338    	; 0xa1c <__stack+0x11d>
	}
	else if (cursor == 2){
     8ca:	82 30       	cpi	r24, 0x02	; 2
     8cc:	09 f0       	breq	.+2      	; 0x8d0 <plot_parametros+0x122>
     8ce:	52 c0       	rjmp	.+164    	; 0x974 <__stack+0x75>
		
		nokia_lcd_set_cursor(0,0);
     8d0:	60 e0       	ldi	r22, 0x00	; 0
     8d2:	80 e0       	ldi	r24, 0x00	; 0
     8d4:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Parametros",1);
     8d8:	61 e0       	ldi	r22, 0x01	; 1
     8da:	8d e7       	ldi	r24, 0x7D	; 125
     8dc:	91 e0       	ldi	r25, 0x01	; 1
     8de:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		
		nokia_lcd_set_cursor(0,15);
     8e2:	6f e0       	ldi	r22, 0x0F	; 15
     8e4:	80 e0       	ldi	r24, 0x00	; 0
     8e6:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("resp/min ",1);
     8ea:	61 e0       	ldi	r22, 0x01	; 1
     8ec:	87 ea       	ldi	r24, 0xA7	; 167
     8ee:	91 e0       	ldi	r25, 0x01	; 1
     8f0:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	
		
		nokia_lcd_set_cursor(70,15);
     8f4:	6f e0       	ldi	r22, 0x0F	; 15
     8f6:	86 e4       	ldi	r24, 0x46	; 70
     8f8:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string(freq_s,1);
     8fc:	61 e0       	ldi	r22, 0x01	; 1
     8fe:	ce 01       	movw	r24, r28
     900:	01 96       	adiw	r24, 0x01	; 1
     902:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

		nokia_lcd_set_cursor(0,25);
     906:	69 e1       	ldi	r22, 0x19	; 25
     908:	80 e0       	ldi	r24, 0x00	; 0
     90a:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Nivel02 *",1);
     90e:	61 e0       	ldi	r22, 0x01	; 1
     910:	81 eb       	ldi	r24, 0xB1	; 177
     912:	91 e0       	ldi	r25, 0x01	; 1
     914:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(55,25);
     918:	69 e1       	ldi	r22, 0x19	; 25
     91a:	87 e3       	ldi	r24, 0x37	; 55
     91c:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string(nivelo2_s,1);
     920:	61 e0       	ldi	r22, 0x01	; 1
     922:	ce 01       	movw	r24, r28
     924:	06 96       	adiw	r24, 0x06	; 6
     926:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(75,25);
     92a:	69 e1       	ldi	r22, 0x19	; 25
     92c:	8b e4       	ldi	r24, 0x4B	; 75
     92e:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("%",1);
     932:	61 e0       	ldi	r22, 0x01	; 1
     934:	8c e9       	ldi	r24, 0x9C	; 156
     936:	91 e0       	ldi	r25, 0x01	; 1
     938:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

		nokia_lcd_set_cursor(0,35);
     93c:	63 e2       	ldi	r22, 0x23	; 35
     93e:	80 e0       	ldi	r24, 0x00	; 0
     940:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Volume",1);
     944:	61 e0       	ldi	r22, 0x01	; 1
     946:	8e e9       	ldi	r24, 0x9E	; 158
     948:	91 e0       	ldi	r25, 0x01	; 1
     94a:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(70,35);
     94e:	63 e2       	ldi	r22, 0x23	; 35
     950:	86 e4       	ldi	r24, 0x46	; 70
     952:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string(volume_s,1);
     956:	61 e0       	ldi	r22, 0x01	; 1
     958:	ce 01       	movw	r24, r28
     95a:	0b 96       	adiw	r24, 0x0b	; 11
     95c:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(75,35);
     960:	63 e2       	ldi	r22, 0x23	; 35
     962:	8b e4       	ldi	r24, 0x4B	; 75
     964:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("V",1);
     968:	61 e0       	ldi	r22, 0x01	; 1
     96a:	85 ea       	ldi	r24, 0xA5	; 165
     96c:	91 e0       	ldi	r25, 0x01	; 1
     96e:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
     972:	54 c0       	rjmp	.+168    	; 0xa1c <__stack+0x11d>
	}
	else if (cursor == 3){
     974:	83 30       	cpi	r24, 0x03	; 3
     976:	09 f0       	breq	.+2      	; 0x97a <__stack+0x7b>
     978:	51 c0       	rjmp	.+162    	; 0xa1c <__stack+0x11d>
		
		nokia_lcd_set_cursor(0,0);
     97a:	60 e0       	ldi	r22, 0x00	; 0
     97c:	80 e0       	ldi	r24, 0x00	; 0
     97e:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Parametros",1);
     982:	61 e0       	ldi	r22, 0x01	; 1
     984:	8d e7       	ldi	r24, 0x7D	; 125
     986:	91 e0       	ldi	r25, 0x01	; 1
     988:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		
		nokia_lcd_set_cursor(0,15);
     98c:	6f e0       	ldi	r22, 0x0F	; 15
     98e:	80 e0       	ldi	r24, 0x00	; 0
     990:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("resp/min ",1);
     994:	61 e0       	ldi	r22, 0x01	; 1
     996:	87 ea       	ldi	r24, 0xA7	; 167
     998:	91 e0       	ldi	r25, 0x01	; 1
     99a:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		//nokia_lcd_set_cursor(30,15);
		
		nokia_lcd_set_cursor(70,15);
     99e:	6f e0       	ldi	r22, 0x0F	; 15
     9a0:	86 e4       	ldi	r24, 0x46	; 70
     9a2:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string(freq_s,1);
     9a6:	61 e0       	ldi	r22, 0x01	; 1
     9a8:	ce 01       	movw	r24, r28
     9aa:	01 96       	adiw	r24, 0x01	; 1
     9ac:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

		nokia_lcd_set_cursor(0,25);
     9b0:	69 e1       	ldi	r22, 0x19	; 25
     9b2:	80 e0       	ldi	r24, 0x00	; 0
     9b4:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Nivel02 ",1);
     9b8:	61 e0       	ldi	r22, 0x01	; 1
     9ba:	8b eb       	ldi	r24, 0xBB	; 187
     9bc:	91 e0       	ldi	r25, 0x01	; 1
     9be:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(55,25);
     9c2:	69 e1       	ldi	r22, 0x19	; 25
     9c4:	87 e3       	ldi	r24, 0x37	; 55
     9c6:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string(nivelo2_s,1);
     9ca:	61 e0       	ldi	r22, 0x01	; 1
     9cc:	ce 01       	movw	r24, r28
     9ce:	06 96       	adiw	r24, 0x06	; 6
     9d0:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(75,25);
     9d4:	69 e1       	ldi	r22, 0x19	; 25
     9d6:	8b e4       	ldi	r24, 0x4B	; 75
     9d8:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("%",1);
     9dc:	61 e0       	ldi	r22, 0x01	; 1
     9de:	8c e9       	ldi	r24, 0x9C	; 156
     9e0:	91 e0       	ldi	r25, 0x01	; 1
     9e2:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

		nokia_lcd_set_cursor(0,35);
     9e6:	63 e2       	ldi	r22, 0x23	; 35
     9e8:	80 e0       	ldi	r24, 0x00	; 0
     9ea:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Volume *",1);
     9ee:	61 e0       	ldi	r22, 0x01	; 1
     9f0:	84 ec       	ldi	r24, 0xC4	; 196
     9f2:	91 e0       	ldi	r25, 0x01	; 1
     9f4:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(70,35);
     9f8:	63 e2       	ldi	r22, 0x23	; 35
     9fa:	86 e4       	ldi	r24, 0x46	; 70
     9fc:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string(volume_s,1);
     a00:	61 e0       	ldi	r22, 0x01	; 1
     a02:	ce 01       	movw	r24, r28
     a04:	0b 96       	adiw	r24, 0x0b	; 11
     a06:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(75,35);
     a0a:	63 e2       	ldi	r22, 0x23	; 35
     a0c:	8b e4       	ldi	r24, 0x4B	; 75
     a0e:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("V",1);
     a12:	61 e0       	ldi	r22, 0x01	; 1
     a14:	85 ea       	ldi	r24, 0xA5	; 165
     a16:	91 e0       	ldi	r25, 0x01	; 1
     a18:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	}
	
	
	nokia_lcd_render();
     a1c:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <nokia_lcd_render>
	
}
     a20:	2f 96       	adiw	r28, 0x0f	; 15
     a22:	0f b6       	in	r0, 0x3f	; 63
     a24:	f8 94       	cli
     a26:	de bf       	out	0x3e, r29	; 62
     a28:	0f be       	out	0x3f, r0	; 63
     a2a:	cd bf       	out	0x3d, r28	; 61
     a2c:	df 91       	pop	r29
     a2e:	cf 91       	pop	r28
     a30:	1f 91       	pop	r17
     a32:	0f 91       	pop	r16
     a34:	ff 90       	pop	r15
     a36:	ef 90       	pop	r14
     a38:	08 95       	ret

00000a3a <plot_agendamento>:

void plot_agendamento(uint8_t FreqRespiracao,uint8_t nivelo2, uint8_t volume, uint8_t temp_ag)
{
     a3a:	df 92       	push	r13
     a3c:	ef 92       	push	r14
     a3e:	ff 92       	push	r15
     a40:	0f 93       	push	r16
     a42:	1f 93       	push	r17
     a44:	cf 93       	push	r28
     a46:	df 93       	push	r29
     a48:	cd b7       	in	r28, 0x3d	; 61
     a4a:	de b7       	in	r29, 0x3e	; 62
     a4c:	64 97       	sbiw	r28, 0x14	; 20
     a4e:	0f b6       	in	r0, 0x3f	; 63
     a50:	f8 94       	cli
     a52:	de bf       	out	0x3e, r29	; 62
     a54:	0f be       	out	0x3f, r0	; 63
     a56:	cd bf       	out	0x3d, r28	; 61
     a58:	e8 2e       	mov	r14, r24
     a5a:	d4 2e       	mov	r13, r20
     a5c:	f2 2e       	mov	r15, r18
	
	char freq_s[5],nivelo2_s[5],volume_s[5],temp_s[5];
	
	sprintf(nivelo2_s, "%d", nivelo2);
     a5e:	1f 92       	push	r1
     a60:	6f 93       	push	r22
     a62:	0a e5       	ldi	r16, 0x5A	; 90
     a64:	11 e0       	ldi	r17, 0x01	; 1
     a66:	1f 93       	push	r17
     a68:	0f 93       	push	r16
     a6a:	ce 01       	movw	r24, r28
     a6c:	06 96       	adiw	r24, 0x06	; 6
     a6e:	9f 93       	push	r25
     a70:	8f 93       	push	r24
     a72:	0e 94 29 10 	call	0x2052	; 0x2052 <sprintf>
	sprintf(volume_s, "%d", volume);
     a76:	1f 92       	push	r1
     a78:	df 92       	push	r13
     a7a:	1f 93       	push	r17
     a7c:	0f 93       	push	r16
     a7e:	ce 01       	movw	r24, r28
     a80:	0b 96       	adiw	r24, 0x0b	; 11
     a82:	9f 93       	push	r25
     a84:	8f 93       	push	r24
     a86:	0e 94 29 10 	call	0x2052	; 0x2052 <sprintf>
	sprintf(freq_s, "%d", FreqRespiracao);
     a8a:	1f 92       	push	r1
     a8c:	ef 92       	push	r14
     a8e:	1f 93       	push	r17
     a90:	0f 93       	push	r16
     a92:	ce 01       	movw	r24, r28
     a94:	01 96       	adiw	r24, 0x01	; 1
     a96:	9f 93       	push	r25
     a98:	8f 93       	push	r24
     a9a:	0e 94 29 10 	call	0x2052	; 0x2052 <sprintf>
	sprintf(temp_s, "%d", temp_ag);
     a9e:	1f 92       	push	r1
     aa0:	ff 92       	push	r15
     aa2:	1f 93       	push	r17
     aa4:	0f 93       	push	r16
     aa6:	ce 01       	movw	r24, r28
     aa8:	40 96       	adiw	r24, 0x10	; 16
     aaa:	9f 93       	push	r25
     aac:	8f 93       	push	r24
     aae:	0e 94 29 10 	call	0x2052	; 0x2052 <sprintf>
	
	nokia_lcd_clear();
     ab2:	0e 94 b0 0c 	call	0x1960	; 0x1960 <nokia_lcd_clear>
		
	if (cursor == 1){
     ab6:	80 91 75 02 	lds	r24, 0x0275	; 0x800275 <cursor>
     aba:	0f b6       	in	r0, 0x3f	; 63
     abc:	f8 94       	cli
     abe:	de bf       	out	0x3e, r29	; 62
     ac0:	0f be       	out	0x3f, r0	; 63
     ac2:	cd bf       	out	0x3d, r28	; 61
     ac4:	81 30       	cpi	r24, 0x01	; 1
     ac6:	09 f0       	breq	.+2      	; 0xaca <plot_agendamento+0x90>
     ac8:	6d c0       	rjmp	.+218    	; 0xba4 <plot_agendamento+0x16a>
			
		nokia_lcd_set_cursor(0,0);
     aca:	60 e0       	ldi	r22, 0x00	; 0
     acc:	80 e0       	ldi	r24, 0x00	; 0
     ace:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Agendamento",1);
     ad2:	61 e0       	ldi	r22, 0x01	; 1
     ad4:	8d ec       	ldi	r24, 0xCD	; 205
     ad6:	91 e0       	ldi	r25, 0x01	; 1
     ad8:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
			
		nokia_lcd_set_cursor(0,10);
     adc:	6a e0       	ldi	r22, 0x0A	; 10
     ade:	80 e0       	ldi	r24, 0x00	; 0
     ae0:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("resp/min * ",1);
     ae4:	61 e0       	ldi	r22, 0x01	; 1
     ae6:	88 e8       	ldi	r24, 0x88	; 136
     ae8:	91 e0       	ldi	r25, 0x01	; 1
     aea:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
			
		nokia_lcd_set_cursor(70,10);
     aee:	6a e0       	ldi	r22, 0x0A	; 10
     af0:	86 e4       	ldi	r24, 0x46	; 70
     af2:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string(freq_s,1);
     af6:	61 e0       	ldi	r22, 0x01	; 1
     af8:	ce 01       	movw	r24, r28
     afa:	01 96       	adiw	r24, 0x01	; 1
     afc:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

		nokia_lcd_set_cursor(0,20);
     b00:	64 e1       	ldi	r22, 0x14	; 20
     b02:	80 e0       	ldi	r24, 0x00	; 0
     b04:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Nivel02",1);
     b08:	61 e0       	ldi	r22, 0x01	; 1
     b0a:	84 e9       	ldi	r24, 0x94	; 148
     b0c:	91 e0       	ldi	r25, 0x01	; 1
     b0e:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(55,20);
     b12:	64 e1       	ldi	r22, 0x14	; 20
     b14:	87 e3       	ldi	r24, 0x37	; 55
     b16:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string(nivelo2_s,1);
     b1a:	61 e0       	ldi	r22, 0x01	; 1
     b1c:	ce 01       	movw	r24, r28
     b1e:	06 96       	adiw	r24, 0x06	; 6
     b20:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(75,20);
     b24:	64 e1       	ldi	r22, 0x14	; 20
     b26:	8b e4       	ldi	r24, 0x4B	; 75
     b28:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("%",1);
     b2c:	61 e0       	ldi	r22, 0x01	; 1
     b2e:	8c e9       	ldi	r24, 0x9C	; 156
     b30:	91 e0       	ldi	r25, 0x01	; 1
     b32:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

		nokia_lcd_set_cursor(0,30);
     b36:	6e e1       	ldi	r22, 0x1E	; 30
     b38:	80 e0       	ldi	r24, 0x00	; 0
     b3a:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Volume",1);
     b3e:	61 e0       	ldi	r22, 0x01	; 1
     b40:	8e e9       	ldi	r24, 0x9E	; 158
     b42:	91 e0       	ldi	r25, 0x01	; 1
     b44:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(65,30);
     b48:	6e e1       	ldi	r22, 0x1E	; 30
     b4a:	81 e4       	ldi	r24, 0x41	; 65
     b4c:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string(volume_s,1);
     b50:	61 e0       	ldi	r22, 0x01	; 1
     b52:	ce 01       	movw	r24, r28
     b54:	0b 96       	adiw	r24, 0x0b	; 11
     b56:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

		nokia_lcd_set_cursor(75,30);
     b5a:	6e e1       	ldi	r22, 0x1E	; 30
     b5c:	8b e4       	ldi	r24, 0x4B	; 75
     b5e:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("V",1);
     b62:	61 e0       	ldi	r22, 0x01	; 1
     b64:	85 ea       	ldi	r24, 0xA5	; 165
     b66:	91 e0       	ldi	r25, 0x01	; 1
     b68:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		
		nokia_lcd_set_cursor(0,40);
     b6c:	68 e2       	ldi	r22, 0x28	; 40
     b6e:	80 e0       	ldi	r24, 0x00	; 0
     b70:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Tempo",1);
     b74:	61 e0       	ldi	r22, 0x01	; 1
     b76:	89 ed       	ldi	r24, 0xD9	; 217
     b78:	91 e0       	ldi	r25, 0x01	; 1
     b7a:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(45,40);
     b7e:	68 e2       	ldi	r22, 0x28	; 40
     b80:	8d e2       	ldi	r24, 0x2D	; 45
     b82:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string(temp_s,1);
     b86:	61 e0       	ldi	r22, 0x01	; 1
     b88:	ce 01       	movw	r24, r28
     b8a:	40 96       	adiw	r24, 0x10	; 16
     b8c:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

		nokia_lcd_set_cursor(65,40);
     b90:	68 e2       	ldi	r22, 0x28	; 40
     b92:	81 e4       	ldi	r24, 0x41	; 65
     b94:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("min",1);
     b98:	61 e0       	ldi	r22, 0x01	; 1
     b9a:	8f ed       	ldi	r24, 0xDF	; 223
     b9c:	91 e0       	ldi	r25, 0x01	; 1
     b9e:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
     ba2:	77 c1       	rjmp	.+750    	; 0xe92 <plot_agendamento+0x458>
		
		}
	else if (cursor == 2){
     ba4:	82 30       	cpi	r24, 0x02	; 2
     ba6:	09 f0       	breq	.+2      	; 0xbaa <plot_agendamento+0x170>
     ba8:	6d c0       	rjmp	.+218    	; 0xc84 <plot_agendamento+0x24a>
			
		nokia_lcd_set_cursor(0,0);
     baa:	60 e0       	ldi	r22, 0x00	; 0
     bac:	80 e0       	ldi	r24, 0x00	; 0
     bae:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Agendamento",1);
     bb2:	61 e0       	ldi	r22, 0x01	; 1
     bb4:	8d ec       	ldi	r24, 0xCD	; 205
     bb6:	91 e0       	ldi	r25, 0x01	; 1
     bb8:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
					
		nokia_lcd_set_cursor(0,10);
     bbc:	6a e0       	ldi	r22, 0x0A	; 10
     bbe:	80 e0       	ldi	r24, 0x00	; 0
     bc0:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("resp/min ",1);
     bc4:	61 e0       	ldi	r22, 0x01	; 1
     bc6:	87 ea       	ldi	r24, 0xA7	; 167
     bc8:	91 e0       	ldi	r25, 0x01	; 1
     bca:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(70,10);
     bce:	6a e0       	ldi	r22, 0x0A	; 10
     bd0:	86 e4       	ldi	r24, 0x46	; 70
     bd2:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string(freq_s,1);
     bd6:	61 e0       	ldi	r22, 0x01	; 1
     bd8:	ce 01       	movw	r24, r28
     bda:	01 96       	adiw	r24, 0x01	; 1
     bdc:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

		nokia_lcd_set_cursor(0,20);
     be0:	64 e1       	ldi	r22, 0x14	; 20
     be2:	80 e0       	ldi	r24, 0x00	; 0
     be4:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Nivel02 *",1);
     be8:	61 e0       	ldi	r22, 0x01	; 1
     bea:	81 eb       	ldi	r24, 0xB1	; 177
     bec:	91 e0       	ldi	r25, 0x01	; 1
     bee:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(55,20);
     bf2:	64 e1       	ldi	r22, 0x14	; 20
     bf4:	87 e3       	ldi	r24, 0x37	; 55
     bf6:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string(nivelo2_s,1);
     bfa:	61 e0       	ldi	r22, 0x01	; 1
     bfc:	ce 01       	movw	r24, r28
     bfe:	06 96       	adiw	r24, 0x06	; 6
     c00:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(75,20);
     c04:	64 e1       	ldi	r22, 0x14	; 20
     c06:	8b e4       	ldi	r24, 0x4B	; 75
     c08:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("%",1);
     c0c:	61 e0       	ldi	r22, 0x01	; 1
     c0e:	8c e9       	ldi	r24, 0x9C	; 156
     c10:	91 e0       	ldi	r25, 0x01	; 1
     c12:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

		nokia_lcd_set_cursor(0,30);
     c16:	6e e1       	ldi	r22, 0x1E	; 30
     c18:	80 e0       	ldi	r24, 0x00	; 0
     c1a:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Volume",1);
     c1e:	61 e0       	ldi	r22, 0x01	; 1
     c20:	8e e9       	ldi	r24, 0x9E	; 158
     c22:	91 e0       	ldi	r25, 0x01	; 1
     c24:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(65,30);
     c28:	6e e1       	ldi	r22, 0x1E	; 30
     c2a:	81 e4       	ldi	r24, 0x41	; 65
     c2c:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string(volume_s,1);
     c30:	61 e0       	ldi	r22, 0x01	; 1
     c32:	ce 01       	movw	r24, r28
     c34:	0b 96       	adiw	r24, 0x0b	; 11
     c36:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

		nokia_lcd_set_cursor(75,30);
     c3a:	6e e1       	ldi	r22, 0x1E	; 30
     c3c:	8b e4       	ldi	r24, 0x4B	; 75
     c3e:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("V",1);
     c42:	61 e0       	ldi	r22, 0x01	; 1
     c44:	85 ea       	ldi	r24, 0xA5	; 165
     c46:	91 e0       	ldi	r25, 0x01	; 1
     c48:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		
		nokia_lcd_set_cursor(0,40);
     c4c:	68 e2       	ldi	r22, 0x28	; 40
     c4e:	80 e0       	ldi	r24, 0x00	; 0
     c50:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Tempo",1);
     c54:	61 e0       	ldi	r22, 0x01	; 1
     c56:	89 ed       	ldi	r24, 0xD9	; 217
     c58:	91 e0       	ldi	r25, 0x01	; 1
     c5a:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(45,40);
     c5e:	68 e2       	ldi	r22, 0x28	; 40
     c60:	8d e2       	ldi	r24, 0x2D	; 45
     c62:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string(temp_s,1);
     c66:	61 e0       	ldi	r22, 0x01	; 1
     c68:	ce 01       	movw	r24, r28
     c6a:	40 96       	adiw	r24, 0x10	; 16
     c6c:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

		nokia_lcd_set_cursor(65,40);
     c70:	68 e2       	ldi	r22, 0x28	; 40
     c72:	81 e4       	ldi	r24, 0x41	; 65
     c74:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("min",1);
     c78:	61 e0       	ldi	r22, 0x01	; 1
     c7a:	8f ed       	ldi	r24, 0xDF	; 223
     c7c:	91 e0       	ldi	r25, 0x01	; 1
     c7e:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
     c82:	07 c1       	rjmp	.+526    	; 0xe92 <plot_agendamento+0x458>
		
		}
	else if (cursor == 3){
     c84:	83 30       	cpi	r24, 0x03	; 3
     c86:	09 f0       	breq	.+2      	; 0xc8a <plot_agendamento+0x250>
     c88:	6d c0       	rjmp	.+218    	; 0xd64 <plot_agendamento+0x32a>
			
		nokia_lcd_set_cursor(0,0);
     c8a:	60 e0       	ldi	r22, 0x00	; 0
     c8c:	80 e0       	ldi	r24, 0x00	; 0
     c8e:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Agendamento",1);
     c92:	61 e0       	ldi	r22, 0x01	; 1
     c94:	8d ec       	ldi	r24, 0xCD	; 205
     c96:	91 e0       	ldi	r25, 0x01	; 1
     c98:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
			
		nokia_lcd_set_cursor(0,10);
     c9c:	6a e0       	ldi	r22, 0x0A	; 10
     c9e:	80 e0       	ldi	r24, 0x00	; 0
     ca0:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("resp/min ",1);
     ca4:	61 e0       	ldi	r22, 0x01	; 1
     ca6:	87 ea       	ldi	r24, 0xA7	; 167
     ca8:	91 e0       	ldi	r25, 0x01	; 1
     caa:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(70,10);
     cae:	6a e0       	ldi	r22, 0x0A	; 10
     cb0:	86 e4       	ldi	r24, 0x46	; 70
     cb2:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string(freq_s,1);
     cb6:	61 e0       	ldi	r22, 0x01	; 1
     cb8:	ce 01       	movw	r24, r28
     cba:	01 96       	adiw	r24, 0x01	; 1
     cbc:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

		nokia_lcd_set_cursor(0,20);
     cc0:	64 e1       	ldi	r22, 0x14	; 20
     cc2:	80 e0       	ldi	r24, 0x00	; 0
     cc4:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Nivel02 ",1);
     cc8:	61 e0       	ldi	r22, 0x01	; 1
     cca:	8b eb       	ldi	r24, 0xBB	; 187
     ccc:	91 e0       	ldi	r25, 0x01	; 1
     cce:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(55,20);
     cd2:	64 e1       	ldi	r22, 0x14	; 20
     cd4:	87 e3       	ldi	r24, 0x37	; 55
     cd6:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string(nivelo2_s,1);
     cda:	61 e0       	ldi	r22, 0x01	; 1
     cdc:	ce 01       	movw	r24, r28
     cde:	06 96       	adiw	r24, 0x06	; 6
     ce0:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(75,20);
     ce4:	64 e1       	ldi	r22, 0x14	; 20
     ce6:	8b e4       	ldi	r24, 0x4B	; 75
     ce8:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("%",1);
     cec:	61 e0       	ldi	r22, 0x01	; 1
     cee:	8c e9       	ldi	r24, 0x9C	; 156
     cf0:	91 e0       	ldi	r25, 0x01	; 1
     cf2:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

		nokia_lcd_set_cursor(0,30);
     cf6:	6e e1       	ldi	r22, 0x1E	; 30
     cf8:	80 e0       	ldi	r24, 0x00	; 0
     cfa:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Volume *",1);
     cfe:	61 e0       	ldi	r22, 0x01	; 1
     d00:	84 ec       	ldi	r24, 0xC4	; 196
     d02:	91 e0       	ldi	r25, 0x01	; 1
     d04:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(65,30);
     d08:	6e e1       	ldi	r22, 0x1E	; 30
     d0a:	81 e4       	ldi	r24, 0x41	; 65
     d0c:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string(volume_s,1);
     d10:	61 e0       	ldi	r22, 0x01	; 1
     d12:	ce 01       	movw	r24, r28
     d14:	0b 96       	adiw	r24, 0x0b	; 11
     d16:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

		nokia_lcd_set_cursor(75,30);
     d1a:	6e e1       	ldi	r22, 0x1E	; 30
     d1c:	8b e4       	ldi	r24, 0x4B	; 75
     d1e:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("V",1);
     d22:	61 e0       	ldi	r22, 0x01	; 1
     d24:	85 ea       	ldi	r24, 0xA5	; 165
     d26:	91 e0       	ldi	r25, 0x01	; 1
     d28:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		
		nokia_lcd_set_cursor(0,40);
     d2c:	68 e2       	ldi	r22, 0x28	; 40
     d2e:	80 e0       	ldi	r24, 0x00	; 0
     d30:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Tempo",1);
     d34:	61 e0       	ldi	r22, 0x01	; 1
     d36:	89 ed       	ldi	r24, 0xD9	; 217
     d38:	91 e0       	ldi	r25, 0x01	; 1
     d3a:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(45,40);
     d3e:	68 e2       	ldi	r22, 0x28	; 40
     d40:	8d e2       	ldi	r24, 0x2D	; 45
     d42:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string(temp_s,1);
     d46:	61 e0       	ldi	r22, 0x01	; 1
     d48:	ce 01       	movw	r24, r28
     d4a:	40 96       	adiw	r24, 0x10	; 16
     d4c:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

		nokia_lcd_set_cursor(65,40);
     d50:	68 e2       	ldi	r22, 0x28	; 40
     d52:	81 e4       	ldi	r24, 0x41	; 65
     d54:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("min",1);
     d58:	61 e0       	ldi	r22, 0x01	; 1
     d5a:	8f ed       	ldi	r24, 0xDF	; 223
     d5c:	91 e0       	ldi	r25, 0x01	; 1
     d5e:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
     d62:	97 c0       	rjmp	.+302    	; 0xe92 <plot_agendamento+0x458>
		}
		
		else if (cursor == 4){
     d64:	84 30       	cpi	r24, 0x04	; 4
     d66:	09 f0       	breq	.+2      	; 0xd6a <plot_agendamento+0x330>
     d68:	6d c0       	rjmp	.+218    	; 0xe44 <plot_agendamento+0x40a>
			
			nokia_lcd_set_cursor(0,0);
     d6a:	60 e0       	ldi	r22, 0x00	; 0
     d6c:	80 e0       	ldi	r24, 0x00	; 0
     d6e:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
			nokia_lcd_write_string("Agendamento",1);
     d72:	61 e0       	ldi	r22, 0x01	; 1
     d74:	8d ec       	ldi	r24, 0xCD	; 205
     d76:	91 e0       	ldi	r25, 0x01	; 1
     d78:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
			
			nokia_lcd_set_cursor(0,10);
     d7c:	6a e0       	ldi	r22, 0x0A	; 10
     d7e:	80 e0       	ldi	r24, 0x00	; 0
     d80:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
			nokia_lcd_write_string("resp/min ",1);
     d84:	61 e0       	ldi	r22, 0x01	; 1
     d86:	87 ea       	ldi	r24, 0xA7	; 167
     d88:	91 e0       	ldi	r25, 0x01	; 1
     d8a:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(70,10);
     d8e:	6a e0       	ldi	r22, 0x0A	; 10
     d90:	86 e4       	ldi	r24, 0x46	; 70
     d92:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
			nokia_lcd_write_string(freq_s,1);
     d96:	61 e0       	ldi	r22, 0x01	; 1
     d98:	ce 01       	movw	r24, r28
     d9a:	01 96       	adiw	r24, 0x01	; 1
     d9c:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

			nokia_lcd_set_cursor(0,20);
     da0:	64 e1       	ldi	r22, 0x14	; 20
     da2:	80 e0       	ldi	r24, 0x00	; 0
     da4:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
			nokia_lcd_write_string("Nivel02 ",1);
     da8:	61 e0       	ldi	r22, 0x01	; 1
     daa:	8b eb       	ldi	r24, 0xBB	; 187
     dac:	91 e0       	ldi	r25, 0x01	; 1
     dae:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(55,20);
     db2:	64 e1       	ldi	r22, 0x14	; 20
     db4:	87 e3       	ldi	r24, 0x37	; 55
     db6:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
			nokia_lcd_write_string(nivelo2_s,1);
     dba:	61 e0       	ldi	r22, 0x01	; 1
     dbc:	ce 01       	movw	r24, r28
     dbe:	06 96       	adiw	r24, 0x06	; 6
     dc0:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(75,20);
     dc4:	64 e1       	ldi	r22, 0x14	; 20
     dc6:	8b e4       	ldi	r24, 0x4B	; 75
     dc8:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
			nokia_lcd_write_string("%",1);
     dcc:	61 e0       	ldi	r22, 0x01	; 1
     dce:	8c e9       	ldi	r24, 0x9C	; 156
     dd0:	91 e0       	ldi	r25, 0x01	; 1
     dd2:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

			nokia_lcd_set_cursor(0,30);
     dd6:	6e e1       	ldi	r22, 0x1E	; 30
     dd8:	80 e0       	ldi	r24, 0x00	; 0
     dda:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
			nokia_lcd_write_string("Volume ",1);
     dde:	61 e0       	ldi	r22, 0x01	; 1
     de0:	83 ee       	ldi	r24, 0xE3	; 227
     de2:	91 e0       	ldi	r25, 0x01	; 1
     de4:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(65,30);
     de8:	6e e1       	ldi	r22, 0x1E	; 30
     dea:	81 e4       	ldi	r24, 0x41	; 65
     dec:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
			nokia_lcd_write_string(volume_s,1);
     df0:	61 e0       	ldi	r22, 0x01	; 1
     df2:	ce 01       	movw	r24, r28
     df4:	0b 96       	adiw	r24, 0x0b	; 11
     df6:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

			nokia_lcd_set_cursor(75,30);
     dfa:	6e e1       	ldi	r22, 0x1E	; 30
     dfc:	8b e4       	ldi	r24, 0x4B	; 75
     dfe:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
			nokia_lcd_write_string("V",1);
     e02:	61 e0       	ldi	r22, 0x01	; 1
     e04:	85 ea       	ldi	r24, 0xA5	; 165
     e06:	91 e0       	ldi	r25, 0x01	; 1
     e08:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
			
			nokia_lcd_set_cursor(0,40);
     e0c:	68 e2       	ldi	r22, 0x28	; 40
     e0e:	80 e0       	ldi	r24, 0x00	; 0
     e10:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
			nokia_lcd_write_string("Tempo *",1);
     e14:	61 e0       	ldi	r22, 0x01	; 1
     e16:	8b ee       	ldi	r24, 0xEB	; 235
     e18:	91 e0       	ldi	r25, 0x01	; 1
     e1a:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(45,40);
     e1e:	68 e2       	ldi	r22, 0x28	; 40
     e20:	8d e2       	ldi	r24, 0x2D	; 45
     e22:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
			nokia_lcd_write_string(temp_s,1);
     e26:	61 e0       	ldi	r22, 0x01	; 1
     e28:	ce 01       	movw	r24, r28
     e2a:	40 96       	adiw	r24, 0x10	; 16
     e2c:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>

			nokia_lcd_set_cursor(65,40);
     e30:	68 e2       	ldi	r22, 0x28	; 40
     e32:	81 e4       	ldi	r24, 0x41	; 65
     e34:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
			nokia_lcd_write_string("min",1);
     e38:	61 e0       	ldi	r22, 0x01	; 1
     e3a:	8f ed       	ldi	r24, 0xDF	; 223
     e3c:	91 e0       	ldi	r25, 0x01	; 1
     e3e:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
     e42:	27 c0       	rjmp	.+78     	; 0xe92 <plot_agendamento+0x458>
		}
		else if (cursor == 5)
     e44:	85 30       	cpi	r24, 0x05	; 5
     e46:	29 f5       	brne	.+74     	; 0xe92 <plot_agendamento+0x458>
		{
			nokia_lcd_set_cursor(0,20);
     e48:	64 e1       	ldi	r22, 0x14	; 20
     e4a:	80 e0       	ldi	r24, 0x00	; 0
     e4c:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
			nokia_lcd_write_string("Agendamento",1);
     e50:	61 e0       	ldi	r22, 0x01	; 1
     e52:	8d ec       	ldi	r24, 0xCD	; 205
     e54:	91 e0       	ldi	r25, 0x01	; 1
     e56:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
			
			nokia_lcd_set_cursor(0,30);
     e5a:	6e e1       	ldi	r22, 0x1E	; 30
     e5c:	80 e0       	ldi	r24, 0x00	; 0
     e5e:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
			nokia_lcd_write_string("Realizado ",1);
     e62:	61 e0       	ldi	r22, 0x01	; 1
     e64:	83 ef       	ldi	r24, 0xF3	; 243
     e66:	91 e0       	ldi	r25, 0x01	; 1
     e68:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
			
			ag_set = 1;
     e6c:	81 e0       	ldi	r24, 0x01	; 1
     e6e:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <ag_set>
			tempAnt_ag = tempo_ms;
     e72:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <tempo_ms>
     e76:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <tempo_ms+0x1>
     e7a:	a0 91 6a 02 	lds	r26, 0x026A	; 0x80026a <tempo_ms+0x2>
     e7e:	b0 91 6b 02 	lds	r27, 0x026B	; 0x80026b <tempo_ms+0x3>
     e82:	80 93 60 02 	sts	0x0260, r24	; 0x800260 <tempAnt_ag>
     e86:	90 93 61 02 	sts	0x0261, r25	; 0x800261 <tempAnt_ag+0x1>
     e8a:	a0 93 62 02 	sts	0x0262, r26	; 0x800262 <tempAnt_ag+0x2>
     e8e:	b0 93 63 02 	sts	0x0263, r27	; 0x800263 <tempAnt_ag+0x3>
		}
		
		
		nokia_lcd_render();
     e92:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <nokia_lcd_render>
	
}
     e96:	64 96       	adiw	r28, 0x14	; 20
     e98:	0f b6       	in	r0, 0x3f	; 63
     e9a:	f8 94       	cli
     e9c:	de bf       	out	0x3e, r29	; 62
     e9e:	0f be       	out	0x3f, r0	; 63
     ea0:	cd bf       	out	0x3d, r28	; 61
     ea2:	df 91       	pop	r29
     ea4:	cf 91       	pop	r28
     ea6:	1f 91       	pop	r17
     ea8:	0f 91       	pop	r16
     eaa:	ff 90       	pop	r15
     eac:	ef 90       	pop	r14
     eae:	df 90       	pop	r13
     eb0:	08 95       	ret

00000eb2 <plot_grafico>:

void plot_grafico(uint8_t cont, uint8_t x)
{
     eb2:	ef 92       	push	r14
     eb4:	ff 92       	push	r15
     eb6:	0f 93       	push	r16
     eb8:	1f 93       	push	r17
     eba:	cf 93       	push	r28
     ebc:	df 93       	push	r29
     ebe:	00 d0       	rcall	.+0      	; 0xec0 <plot_grafico+0xe>
     ec0:	1f 92       	push	r1
     ec2:	cd b7       	in	r28, 0x3d	; 61
     ec4:	de b7       	in	r29, 0x3e	; 62
     ec6:	18 2f       	mov	r17, r24
     ec8:	06 2f       	mov	r16, r22
	char vol_s[3];
	sprintf(vol_s, "%d", cont);
     eca:	1f 92       	push	r1
     ecc:	8f 93       	push	r24
     ece:	8a e5       	ldi	r24, 0x5A	; 90
     ed0:	91 e0       	ldi	r25, 0x01	; 1
     ed2:	9f 93       	push	r25
     ed4:	8f 93       	push	r24
     ed6:	ce 01       	movw	r24, r28
     ed8:	01 96       	adiw	r24, 0x01	; 1
     eda:	7c 01       	movw	r14, r24
     edc:	9f 93       	push	r25
     ede:	8f 93       	push	r24
     ee0:	0e 94 29 10 	call	0x2052	; 0x2052 <sprintf>
	
	nokia_lcd_set_cursor(0,1);
     ee4:	61 e0       	ldi	r22, 0x01	; 1
     ee6:	80 e0       	ldi	r24, 0x00	; 0
     ee8:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string("8|",1);
     eec:	61 e0       	ldi	r22, 0x01	; 1
     eee:	8e ef       	ldi	r24, 0xFE	; 254
     ef0:	91 e0       	ldi	r25, 0x01	; 1
     ef2:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(0,8);
     ef6:	68 e0       	ldi	r22, 0x08	; 8
     ef8:	80 e0       	ldi	r24, 0x00	; 0
     efa:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string(" |",1);
     efe:	61 e0       	ldi	r22, 0x01	; 1
     f00:	81 e0       	ldi	r24, 0x01	; 1
     f02:	92 e0       	ldi	r25, 0x02	; 2
     f04:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(0,14);
     f08:	6e e0       	ldi	r22, 0x0E	; 14
     f0a:	80 e0       	ldi	r24, 0x00	; 0
     f0c:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string(" |",1);
     f10:	61 e0       	ldi	r22, 0x01	; 1
     f12:	81 e0       	ldi	r24, 0x01	; 1
     f14:	92 e0       	ldi	r25, 0x02	; 2
     f16:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(0,20);
     f1a:	64 e1       	ldi	r22, 0x14	; 20
     f1c:	80 e0       	ldi	r24, 0x00	; 0
     f1e:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string("0|",1);
     f22:	61 e0       	ldi	r22, 0x01	; 1
     f24:	84 e0       	ldi	r24, 0x04	; 4
     f26:	92 e0       	ldi	r25, 0x02	; 2
     f28:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(0,28);
     f2c:	6c e1       	ldi	r22, 0x1C	; 28
     f2e:	80 e0       	ldi	r24, 0x00	; 0
     f30:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string("_____________",1);
     f34:	61 e0       	ldi	r22, 0x01	; 1
     f36:	87 e0       	ldi	r24, 0x07	; 7
     f38:	92 e0       	ldi	r25, 0x02	; 2
     f3a:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(0,40);
     f3e:	68 e2       	ldi	r22, 0x28	; 40
     f40:	80 e0       	ldi	r24, 0x00	; 0
     f42:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	nokia_lcd_write_string(vol_s,1);
     f46:	61 e0       	ldi	r22, 0x01	; 1
     f48:	c7 01       	movw	r24, r14
     f4a:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	nokia_lcd_write_string(" vol O2",1);
     f4e:	61 e0       	ldi	r22, 0x01	; 1
     f50:	85 e1       	ldi	r24, 0x15	; 21
     f52:	92 e0       	ldi	r25, 0x02	; 2
     f54:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	
	nokia_lcd_set_pixel(x+10,25 - 3*cont, 100);
     f58:	81 2f       	mov	r24, r17
     f5a:	88 0f       	add	r24, r24
     f5c:	18 0f       	add	r17, r24
     f5e:	11 95       	neg	r17
     f60:	17 5e       	subi	r17, 0xE7	; 231
     f62:	44 e6       	ldi	r20, 0x64	; 100
     f64:	61 2f       	mov	r22, r17
     f66:	8a e0       	ldi	r24, 0x0A	; 10
     f68:	80 0f       	add	r24, r16
     f6a:	0e 94 c3 0c 	call	0x1986	; 0x1986 <nokia_lcd_set_pixel>
	nokia_lcd_set_pixel(x+11,25 - 3*cont, 100);
     f6e:	44 e6       	ldi	r20, 0x64	; 100
     f70:	61 2f       	mov	r22, r17
     f72:	8b e0       	ldi	r24, 0x0B	; 11
     f74:	80 0f       	add	r24, r16
     f76:	0e 94 c3 0c 	call	0x1986	; 0x1986 <nokia_lcd_set_pixel>
	nokia_lcd_render();
     f7a:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <nokia_lcd_render>
	if(x == 59)
     f7e:	0f 90       	pop	r0
     f80:	0f 90       	pop	r0
     f82:	0f 90       	pop	r0
     f84:	0f 90       	pop	r0
     f86:	0f 90       	pop	r0
     f88:	0f 90       	pop	r0
     f8a:	0b 33       	cpi	r16, 0x3B	; 59
     f8c:	11 f4       	brne	.+4      	; 0xf92 <plot_grafico+0xe0>
	nokia_lcd_clear();
     f8e:	0e 94 b0 0c 	call	0x1960	; 0x1960 <nokia_lcd_clear>
}
     f92:	0f 90       	pop	r0
     f94:	0f 90       	pop	r0
     f96:	0f 90       	pop	r0
     f98:	df 91       	pop	r29
     f9a:	cf 91       	pop	r28
     f9c:	1f 91       	pop	r17
     f9e:	0f 91       	pop	r16
     fa0:	ff 90       	pop	r15
     fa2:	ef 90       	pop	r14
     fa4:	08 95       	ret

00000fa6 <plot_tx>:
void plot_tx()
{
	nokia_lcd_clear();
     fa6:	0e 94 b0 0c 	call	0x1960	; 0x1960 <nokia_lcd_clear>
	if (cursor == 1)
     faa:	80 91 75 02 	lds	r24, 0x0275	; 0x800275 <cursor>
     fae:	81 30       	cpi	r24, 0x01	; 1
     fb0:	f1 f4       	brne	.+60     	; 0xfee <plot_tx+0x48>
	{
		nokia_lcd_set_cursor(0,0);
     fb2:	60 e0       	ldi	r22, 0x00	; 0
     fb4:	80 e0       	ldi	r24, 0x00	; 0
     fb6:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Saida Serial",1);
     fba:	61 e0       	ldi	r22, 0x01	; 1
     fbc:	8d e1       	ldi	r24, 0x1D	; 29
     fbe:	92 e0       	ldi	r25, 0x02	; 2
     fc0:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(0,20);
     fc4:	64 e1       	ldi	r22, 0x14	; 20
     fc6:	80 e0       	ldi	r24, 0x00	; 0
     fc8:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Parametro:",1);
     fcc:	61 e0       	ldi	r22, 0x01	; 1
     fce:	8a e2       	ldi	r24, 0x2A	; 42
     fd0:	92 e0       	ldi	r25, 0x02	; 2
     fd2:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(0,30);
     fd6:	6e e1       	ldi	r22, 0x1E	; 30
     fd8:	80 e0       	ldi	r24, 0x00	; 0
     fda:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Nenhum",1);
     fde:	61 e0       	ldi	r22, 0x01	; 1
     fe0:	85 e3       	ldi	r24, 0x35	; 53
     fe2:	92 e0       	ldi	r25, 0x02	; 2
     fe4:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		
		set_tx = 0;
     fe8:	10 92 72 02 	sts	0x0272, r1	; 0x800272 <set_tx>
     fec:	6e c0       	rjmp	.+220    	; 0x10ca <plot_tx+0x124>
		
	}
	else if(cursor == 2)
     fee:	82 30       	cpi	r24, 0x02	; 2
     ff0:	19 f5       	brne	.+70     	; 0x1038 <plot_tx+0x92>
	{
	   
	   nokia_lcd_set_cursor(0,0);
     ff2:	60 e0       	ldi	r22, 0x00	; 0
     ff4:	80 e0       	ldi	r24, 0x00	; 0
     ff6:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	   nokia_lcd_write_string("Saida Serial",1);
     ffa:	61 e0       	ldi	r22, 0x01	; 1
     ffc:	8d e1       	ldi	r24, 0x1D	; 29
     ffe:	92 e0       	ldi	r25, 0x02	; 2
    1000:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	   nokia_lcd_set_cursor(0,20);
    1004:	64 e1       	ldi	r22, 0x14	; 20
    1006:	80 e0       	ldi	r24, 0x00	; 0
    1008:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	   nokia_lcd_write_string("Parametro:",1);
    100c:	61 e0       	ldi	r22, 0x01	; 1
    100e:	8a e2       	ldi	r24, 0x2A	; 42
    1010:	92 e0       	ldi	r25, 0x02	; 2
    1012:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	   nokia_lcd_set_cursor(0,30);
    1016:	6e e1       	ldi	r22, 0x1E	; 30
    1018:	80 e0       	ldi	r24, 0x00	; 0
    101a:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
	   nokia_lcd_write_string("BPM",1);
    101e:	61 e0       	ldi	r22, 0x01	; 1
    1020:	8c e3       	ldi	r24, 0x3C	; 60
    1022:	92 e0       	ldi	r25, 0x02	; 2
    1024:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
	   dado = bpm;
    1028:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <bpm>
    102c:	80 93 72 04 	sts	0x0472, r24	; 0x800472 <dado>
	   set_tx = 1;
    1030:	81 e0       	ldi	r24, 0x01	; 1
    1032:	80 93 72 02 	sts	0x0272, r24	; 0x800272 <set_tx>
    1036:	49 c0       	rjmp	.+146    	; 0x10ca <plot_tx+0x124>
		
	}
	else if(cursor == 3)
    1038:	83 30       	cpi	r24, 0x03	; 3
    103a:	19 f5       	brne	.+70     	; 0x1082 <plot_tx+0xdc>
	{
		
		nokia_lcd_set_cursor(0,0);
    103c:	60 e0       	ldi	r22, 0x00	; 0
    103e:	80 e0       	ldi	r24, 0x00	; 0
    1040:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Saida Serial",1);
    1044:	61 e0       	ldi	r22, 0x01	; 1
    1046:	8d e1       	ldi	r24, 0x1D	; 29
    1048:	92 e0       	ldi	r25, 0x02	; 2
    104a:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(0,20);
    104e:	64 e1       	ldi	r22, 0x14	; 20
    1050:	80 e0       	ldi	r24, 0x00	; 0
    1052:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Parametro:",1);
    1056:	61 e0       	ldi	r22, 0x01	; 1
    1058:	8a e2       	ldi	r24, 0x2A	; 42
    105a:	92 e0       	ldi	r25, 0x02	; 2
    105c:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(0,30);
    1060:	6e e1       	ldi	r22, 0x1E	; 30
    1062:	80 e0       	ldi	r24, 0x00	; 0
    1064:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Satur02",1);
    1068:	61 e0       	ldi	r22, 0x01	; 1
    106a:	80 e4       	ldi	r24, 0x40	; 64
    106c:	92 e0       	ldi	r25, 0x02	; 2
    106e:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		dado = spo2;
    1072:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <spo2>
    1076:	80 93 72 04 	sts	0x0472, r24	; 0x800472 <dado>
		set_tx = 1;
    107a:	81 e0       	ldi	r24, 0x01	; 1
    107c:	80 93 72 02 	sts	0x0272, r24	; 0x800272 <set_tx>
    1080:	24 c0       	rjmp	.+72     	; 0x10ca <plot_tx+0x124>
		
	}
	else if(cursor == 4)
    1082:	84 30       	cpi	r24, 0x04	; 4
    1084:	11 f5       	brne	.+68     	; 0x10ca <plot_tx+0x124>
	{
		
		nokia_lcd_set_cursor(0,0);
    1086:	60 e0       	ldi	r22, 0x00	; 0
    1088:	80 e0       	ldi	r24, 0x00	; 0
    108a:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Saida Serial",1);
    108e:	61 e0       	ldi	r22, 0x01	; 1
    1090:	8d e1       	ldi	r24, 0x1D	; 29
    1092:	92 e0       	ldi	r25, 0x02	; 2
    1094:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(0,20);
    1098:	64 e1       	ldi	r22, 0x14	; 20
    109a:	80 e0       	ldi	r24, 0x00	; 0
    109c:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Parametro:",1);
    10a0:	61 e0       	ldi	r22, 0x01	; 1
    10a2:	8a e2       	ldi	r24, 0x2A	; 42
    10a4:	92 e0       	ldi	r25, 0x02	; 2
    10a6:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		nokia_lcd_set_cursor(0,30);
    10aa:	6e e1       	ldi	r22, 0x1E	; 30
    10ac:	80 e0       	ldi	r24, 0x00	; 0
    10ae:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Temperatura",1);
    10b2:	61 e0       	ldi	r22, 0x01	; 1
    10b4:	88 e4       	ldi	r24, 0x48	; 72
    10b6:	92 e0       	ldi	r25, 0x02	; 2
    10b8:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <nokia_lcd_write_string>
		dado = temperatura;
    10bc:	80 91 5b 02 	lds	r24, 0x025B	; 0x80025b <temperatura>
    10c0:	80 93 72 04 	sts	0x0472, r24	; 0x800472 <dado>
		set_tx = 1;
    10c4:	81 e0       	ldi	r24, 0x01	; 1
    10c6:	80 93 72 02 	sts	0x0272, r24	; 0x800272 <set_tx>
		
	}
	
	nokia_lcd_render();
    10ca:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <nokia_lcd_render>
    10ce:	08 95       	ret

000010d0 <sensor_temperatura>:

int sensor_temperatura(uint16_t lt_ADC)
{
	
	float Vin = 5*(lt_ADC/1024.);
	return 10*Vin + 10;
    10d0:	bc 01       	movw	r22, r24
    10d2:	80 e0       	ldi	r24, 0x00	; 0
    10d4:	90 e0       	ldi	r25, 0x00	; 0
    10d6:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <__floatunsisf>
    10da:	20 e0       	ldi	r18, 0x00	; 0
    10dc:	30 e0       	ldi	r19, 0x00	; 0
    10de:	40 e8       	ldi	r20, 0x80	; 128
    10e0:	5a e3       	ldi	r21, 0x3A	; 58
    10e2:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__mulsf3>
    10e6:	20 e0       	ldi	r18, 0x00	; 0
    10e8:	30 e0       	ldi	r19, 0x00	; 0
    10ea:	40 ea       	ldi	r20, 0xA0	; 160
    10ec:	50 e4       	ldi	r21, 0x40	; 64
    10ee:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__mulsf3>
    10f2:	20 e0       	ldi	r18, 0x00	; 0
    10f4:	30 e0       	ldi	r19, 0x00	; 0
    10f6:	40 e2       	ldi	r20, 0x20	; 32
    10f8:	51 e4       	ldi	r21, 0x41	; 65
    10fa:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__mulsf3>
    10fe:	20 e0       	ldi	r18, 0x00	; 0
    1100:	30 e0       	ldi	r19, 0x00	; 0
    1102:	40 e2       	ldi	r20, 0x20	; 32
    1104:	51 e4       	ldi	r21, 0x41	; 65
    1106:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <__addsf3>
    110a:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__fixsfsi>

}
    110e:	cb 01       	movw	r24, r22
    1110:	08 95       	ret

00001112 <sensor_spo2>:
int sensor_spo2(uint16_t lt_ADC)
{
	
	float Vin = 5*(lt_ADC/1024.);
	return 25*Vin;
    1112:	bc 01       	movw	r22, r24
    1114:	80 e0       	ldi	r24, 0x00	; 0
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <__floatunsisf>
    111c:	20 e0       	ldi	r18, 0x00	; 0
    111e:	30 e0       	ldi	r19, 0x00	; 0
    1120:	40 e8       	ldi	r20, 0x80	; 128
    1122:	5a e3       	ldi	r21, 0x3A	; 58
    1124:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__mulsf3>
    1128:	20 e0       	ldi	r18, 0x00	; 0
    112a:	30 e0       	ldi	r19, 0x00	; 0
    112c:	40 ea       	ldi	r20, 0xA0	; 160
    112e:	50 e4       	ldi	r21, 0x40	; 64
    1130:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__mulsf3>
    1134:	20 e0       	ldi	r18, 0x00	; 0
    1136:	30 e0       	ldi	r19, 0x00	; 0
    1138:	48 ec       	ldi	r20, 0xC8	; 200
    113a:	51 e4       	ldi	r21, 0x41	; 65
    113c:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__mulsf3>
    1140:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__fixsfsi>
	
}
    1144:	cb 01       	movw	r24, r22
    1146:	08 95       	ret

00001148 <alerta>:

void alerta(uint8_t temperatura, uint8_t spo2)
{
	if(temperatura < 35 || temperatura > 41 || spo2 < 60)
    1148:	83 52       	subi	r24, 0x23	; 35
    114a:	87 30       	cpi	r24, 0x07	; 7
    114c:	10 f4       	brcc	.+4      	; 0x1152 <alerta+0xa>
    114e:	6c 33       	cpi	r22, 0x3C	; 60
    1150:	10 f4       	brcc	.+4      	; 0x1156 <alerta+0xe>
	{
		
		PORTB |= 0b00001000;
    1152:	2b 9a       	sbi	0x05, 3	; 5
    1154:	08 95       	ret
	}
	
	else
	{
		PORTB &= 0b11110111 ;
    1156:	2b 98       	cbi	0x05, 3	; 5
    1158:	08 95       	ret

0000115a <USART_init>:

void USART_init(unsigned int ubrr)
{
	//Ajusta a taxa de transmissão
	
	UBRR0H = (unsigned int)(ubrr>>8);
    115a:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L = (unsigned char)ubrr;
    115e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	
	// habilita o receptor e a interrupção
	UCSR0B = (1<<RXEN0)|(1<<RXCIE0)|(1<<TXEN0);
    1162:	88 e9       	ldi	r24, 0x98	; 152
    1164:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	
	// 1 stop bit 8 bits de dados
	UCSR0C = (0<<USBS0)|(3<<UCSZ00);
    1168:	86 e0       	ldi	r24, 0x06	; 6
    116a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
    116e:	08 95       	ret

00001170 <valvula_o2>:
	
}
void valvula_o2(uint8_t nivel)
{
    1170:	cf 93       	push	r28
    1172:	df 93       	push	r29
    1174:	cd b7       	in	r28, 0x3d	; 61
    1176:	de b7       	in	r29, 0x3e	; 62
    1178:	66 97       	sbiw	r28, 0x16	; 22
    117a:	0f b6       	in	r0, 0x3f	; 63
    117c:	f8 94       	cli
    117e:	de bf       	out	0x3e, r29	; 62
    1180:	0f be       	out	0x3f, r0	; 63
    1182:	cd bf       	out	0x3d, r28	; 61
	uint8_t  ind = nivel/10;
	uint16_t orcb_val[11] = {2000,2200,2400,2600,2800,3000,3200,3400,3600,3800,4000};
    1184:	96 e1       	ldi	r25, 0x16	; 22
    1186:	e3 e3       	ldi	r30, 0x33	; 51
    1188:	f1 e0       	ldi	r31, 0x01	; 1
    118a:	de 01       	movw	r26, r28
    118c:	11 96       	adiw	r26, 0x01	; 1
    118e:	01 90       	ld	r0, Z+
    1190:	0d 92       	st	X+, r0
    1192:	9a 95       	dec	r25
    1194:	e1 f7       	brne	.-8      	; 0x118e <valvula_o2+0x1e>
	
	OCR1B = orcb_val[ind];
    1196:	ed ec       	ldi	r30, 0xCD	; 205
    1198:	8e 9f       	mul	r24, r30
    119a:	e1 2d       	mov	r30, r1
    119c:	11 24       	eor	r1, r1
    119e:	e6 95       	lsr	r30
    11a0:	e6 95       	lsr	r30
    11a2:	e6 95       	lsr	r30
    11a4:	f0 e0       	ldi	r31, 0x00	; 0
    11a6:	ee 0f       	add	r30, r30
    11a8:	ff 1f       	adc	r31, r31
    11aa:	81 e0       	ldi	r24, 0x01	; 1
    11ac:	90 e0       	ldi	r25, 0x00	; 0
    11ae:	8c 0f       	add	r24, r28
    11b0:	9d 1f       	adc	r25, r29
    11b2:	e8 0f       	add	r30, r24
    11b4:	f9 1f       	adc	r31, r25
    11b6:	80 81       	ld	r24, Z
    11b8:	91 81       	ldd	r25, Z+1	; 0x01
    11ba:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__DATA_REGION_ORIGIN__+0x2b>
    11be:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__DATA_REGION_ORIGIN__+0x2a>
}
    11c2:	66 96       	adiw	r28, 0x16	; 22
    11c4:	0f b6       	in	r0, 0x3f	; 63
    11c6:	f8 94       	cli
    11c8:	de bf       	out	0x3e, r29	; 62
    11ca:	0f be       	out	0x3f, r0	; 63
    11cc:	cd bf       	out	0x3d, r28	; 61
    11ce:	df 91       	pop	r29
    11d0:	cf 91       	pop	r28
    11d2:	08 95       	ret

000011d4 <__vector_1>:

}

// ativa na borda de descida do pino D2(INT0)
ISR(INT0_vect)
{
    11d4:	1f 92       	push	r1
    11d6:	0f 92       	push	r0
    11d8:	0f b6       	in	r0, 0x3f	; 63
    11da:	0f 92       	push	r0
    11dc:	11 24       	eor	r1, r1
    11de:	2f 93       	push	r18
    11e0:	3f 93       	push	r19
    11e2:	4f 93       	push	r20
    11e4:	5f 93       	push	r21
    11e6:	6f 93       	push	r22
    11e8:	7f 93       	push	r23
    11ea:	8f 93       	push	r24
    11ec:	9f 93       	push	r25
    11ee:	af 93       	push	r26
    11f0:	bf 93       	push	r27
    11f2:	ef 93       	push	r30
    11f4:	ff 93       	push	r31
	// tela parametros
	if((cursor == 1) & (sel == 1)){
    11f6:	90 91 75 02 	lds	r25, 0x0275	; 0x800275 <cursor>
    11fa:	81 e0       	ldi	r24, 0x01	; 1
    11fc:	20 91 77 02 	lds	r18, 0x0277	; 0x800277 <sel>
    1200:	21 30       	cpi	r18, 0x01	; 1
    1202:	09 f0       	breq	.+2      	; 0x1206 <__vector_1+0x32>
    1204:	80 e0       	ldi	r24, 0x00	; 0
    1206:	21 e0       	ldi	r18, 0x01	; 1
    1208:	91 30       	cpi	r25, 0x01	; 1
    120a:	09 f0       	breq	.+2      	; 0x120e <__vector_1+0x3a>
    120c:	20 e0       	ldi	r18, 0x00	; 0
    120e:	22 23       	and	r18, r18
    1210:	59 f0       	breq	.+22     	; 0x1228 <__vector_1+0x54>
    1212:	88 23       	and	r24, r24
    1214:	49 f0       	breq	.+18     	; 0x1228 <__vector_1+0x54>
		FreqRespiracao ++;
    1216:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <FreqRespiracao>
    121a:	8f 5f       	subi	r24, 0xFF	; 255
		FreqRespiracao = (FreqRespiracao == 31) ? 30:FreqRespiracao;
    121c:	8f 31       	cpi	r24, 0x1F	; 31
    121e:	09 f4       	brne	.+2      	; 0x1222 <__vector_1+0x4e>
    1220:	8e e1       	ldi	r24, 0x1E	; 30
    1222:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <FreqRespiracao>
    1226:	27 c0       	rjmp	.+78     	; 0x1276 <__vector_1+0xa2>
	}
	else if((cursor == 2) & (sel == 1))
    1228:	21 e0       	ldi	r18, 0x01	; 1
    122a:	92 30       	cpi	r25, 0x02	; 2
    122c:	09 f0       	breq	.+2      	; 0x1230 <__vector_1+0x5c>
    122e:	20 e0       	ldi	r18, 0x00	; 0
    1230:	22 23       	and	r18, r18
    1232:	69 f0       	breq	.+26     	; 0x124e <__vector_1+0x7a>
    1234:	88 23       	and	r24, r24
    1236:	59 f0       	breq	.+22     	; 0x124e <__vector_1+0x7a>
	{
		NivelO2 += 10;
    1238:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <NivelO2>
    123c:	86 5f       	subi	r24, 0xF6	; 246
		NivelO2 = (NivelO2 == 110) ? 100:NivelO2;
    123e:	8e 36       	cpi	r24, 0x6E	; 110
    1240:	09 f4       	brne	.+2      	; 0x1244 <__vector_1+0x70>
    1242:	84 e6       	ldi	r24, 0x64	; 100
    1244:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <NivelO2>
		valvula_o2(NivelO2);
    1248:	0e 94 b8 08 	call	0x1170	; 0x1170 <valvula_o2>
    124c:	14 c0       	rjmp	.+40     	; 0x1276 <__vector_1+0xa2>
	}
	else if ((cursor == 3) & (sel == 1))
    124e:	21 e0       	ldi	r18, 0x01	; 1
    1250:	93 30       	cpi	r25, 0x03	; 3
    1252:	09 f0       	breq	.+2      	; 0x1256 <__vector_1+0x82>
    1254:	20 e0       	ldi	r18, 0x00	; 0
    1256:	22 23       	and	r18, r18
    1258:	71 f0       	breq	.+28     	; 0x1276 <__vector_1+0xa2>
    125a:	88 23       	and	r24, r24
    125c:	61 f0       	breq	.+24     	; 0x1276 <__vector_1+0xa2>
	{
		VolO2 ++;
    125e:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <VolO2>
    1262:	8f 5f       	subi	r24, 0xFF	; 255
		VolO2 = (VolO2 == 9)? 8:VolO2;
    1264:	89 30       	cpi	r24, 0x09	; 9
    1266:	09 f4       	brne	.+2      	; 0x126a <__vector_1+0x96>
    1268:	88 e0       	ldi	r24, 0x08	; 8
    126a:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <VolO2>
		contpwm = 0;
    126e:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <contpwm>
		indpw = 0;
    1272:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
	}
	// tela agendamento
	if((cursor == 1) & (sel == 2)){
    1276:	90 91 75 02 	lds	r25, 0x0275	; 0x800275 <cursor>
    127a:	81 e0       	ldi	r24, 0x01	; 1
    127c:	20 91 77 02 	lds	r18, 0x0277	; 0x800277 <sel>
    1280:	22 30       	cpi	r18, 0x02	; 2
    1282:	09 f0       	breq	.+2      	; 0x1286 <__vector_1+0xb2>
    1284:	80 e0       	ldi	r24, 0x00	; 0
    1286:	21 e0       	ldi	r18, 0x01	; 1
    1288:	91 30       	cpi	r25, 0x01	; 1
    128a:	09 f0       	breq	.+2      	; 0x128e <__vector_1+0xba>
    128c:	20 e0       	ldi	r18, 0x00	; 0
    128e:	22 23       	and	r18, r18
    1290:	59 f0       	breq	.+22     	; 0x12a8 <__vector_1+0xd4>
    1292:	88 23       	and	r24, r24
    1294:	49 f0       	breq	.+18     	; 0x12a8 <__vector_1+0xd4>
		FreqRes_ag ++;
    1296:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <FreqRes_ag>
    129a:	8f 5f       	subi	r24, 0xFF	; 255
		FreqRes_ag = (FreqRes_ag == 31) ? 30:FreqRes_ag;
    129c:	8f 31       	cpi	r24, 0x1F	; 31
    129e:	09 f4       	brne	.+2      	; 0x12a2 <__vector_1+0xce>
    12a0:	8e e1       	ldi	r24, 0x1E	; 30
    12a2:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <FreqRes_ag>
    12a6:	32 c0       	rjmp	.+100    	; 0x130c <__vector_1+0x138>
	}
	else if((cursor == 2) & (sel == 2))
    12a8:	21 e0       	ldi	r18, 0x01	; 1
    12aa:	92 30       	cpi	r25, 0x02	; 2
    12ac:	09 f0       	breq	.+2      	; 0x12b0 <__vector_1+0xdc>
    12ae:	20 e0       	ldi	r18, 0x00	; 0
    12b0:	22 23       	and	r18, r18
    12b2:	59 f0       	breq	.+22     	; 0x12ca <__vector_1+0xf6>
    12b4:	88 23       	and	r24, r24
    12b6:	49 f0       	breq	.+18     	; 0x12ca <__vector_1+0xf6>
	{
		nivelo2_ag += 10;
    12b8:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <nivelo2_ag>
    12bc:	86 5f       	subi	r24, 0xF6	; 246
		nivelo2_ag = (nivelo2_ag == 110) ? 100:nivelo2_ag;
    12be:	8e 36       	cpi	r24, 0x6E	; 110
    12c0:	09 f4       	brne	.+2      	; 0x12c4 <__vector_1+0xf0>
    12c2:	84 e6       	ldi	r24, 0x64	; 100
    12c4:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <nivelo2_ag>
    12c8:	21 c0       	rjmp	.+66     	; 0x130c <__vector_1+0x138>
	
	}
	else if ((cursor == 3) & (sel == 2))
    12ca:	21 e0       	ldi	r18, 0x01	; 1
    12cc:	93 30       	cpi	r25, 0x03	; 3
    12ce:	09 f0       	breq	.+2      	; 0x12d2 <__vector_1+0xfe>
    12d0:	20 e0       	ldi	r18, 0x00	; 0
    12d2:	22 23       	and	r18, r18
    12d4:	59 f0       	breq	.+22     	; 0x12ec <__vector_1+0x118>
    12d6:	88 23       	and	r24, r24
    12d8:	49 f0       	breq	.+18     	; 0x12ec <__vector_1+0x118>
	{
		volume_ag ++;
    12da:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <volume_ag>
    12de:	8f 5f       	subi	r24, 0xFF	; 255
		volume_ag = (volume_ag == 9)? 8:volume_ag;
    12e0:	89 30       	cpi	r24, 0x09	; 9
    12e2:	09 f4       	brne	.+2      	; 0x12e6 <__vector_1+0x112>
    12e4:	88 e0       	ldi	r24, 0x08	; 8
    12e6:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <volume_ag>
    12ea:	10 c0       	rjmp	.+32     	; 0x130c <__vector_1+0x138>
	}
	else if ((cursor == 4) & (sel == 2))
    12ec:	21 e0       	ldi	r18, 0x01	; 1
    12ee:	94 30       	cpi	r25, 0x04	; 4
    12f0:	09 f0       	breq	.+2      	; 0x12f4 <__vector_1+0x120>
    12f2:	20 e0       	ldi	r18, 0x00	; 0
    12f4:	22 23       	and	r18, r18
    12f6:	51 f0       	breq	.+20     	; 0x130c <__vector_1+0x138>
    12f8:	88 23       	and	r24, r24
    12fa:	41 f0       	breq	.+16     	; 0x130c <__vector_1+0x138>
	{
		temp_ag ++;
    12fc:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <temp_ag>
    1300:	8f 5f       	subi	r24, 0xFF	; 255
		temp_ag = (temp_ag == 61)? 60:temp_ag;
    1302:	8d 33       	cpi	r24, 0x3D	; 61
    1304:	09 f4       	brne	.+2      	; 0x1308 <__vector_1+0x134>
    1306:	8c e3       	ldi	r24, 0x3C	; 60
    1308:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <temp_ag>
	}

}
    130c:	ff 91       	pop	r31
    130e:	ef 91       	pop	r30
    1310:	bf 91       	pop	r27
    1312:	af 91       	pop	r26
    1314:	9f 91       	pop	r25
    1316:	8f 91       	pop	r24
    1318:	7f 91       	pop	r23
    131a:	6f 91       	pop	r22
    131c:	5f 91       	pop	r21
    131e:	4f 91       	pop	r20
    1320:	3f 91       	pop	r19
    1322:	2f 91       	pop	r18
    1324:	0f 90       	pop	r0
    1326:	0f be       	out	0x3f, r0	; 63
    1328:	0f 90       	pop	r0
    132a:	1f 90       	pop	r1
    132c:	18 95       	reti

0000132e <__vector_2>:

// ativa na borda de descida do pino D3(INT1)
ISR(INT1_vect)
{
    132e:	1f 92       	push	r1
    1330:	0f 92       	push	r0
    1332:	0f b6       	in	r0, 0x3f	; 63
    1334:	0f 92       	push	r0
    1336:	11 24       	eor	r1, r1
    1338:	2f 93       	push	r18
    133a:	3f 93       	push	r19
    133c:	4f 93       	push	r20
    133e:	5f 93       	push	r21
    1340:	6f 93       	push	r22
    1342:	7f 93       	push	r23
    1344:	8f 93       	push	r24
    1346:	9f 93       	push	r25
    1348:	af 93       	push	r26
    134a:	bf 93       	push	r27
    134c:	ef 93       	push	r30
    134e:	ff 93       	push	r31
	//tela parametros
	if((cursor == 1) & (sel == 1))
    1350:	90 91 75 02 	lds	r25, 0x0275	; 0x800275 <cursor>
    1354:	81 e0       	ldi	r24, 0x01	; 1
    1356:	20 91 77 02 	lds	r18, 0x0277	; 0x800277 <sel>
    135a:	21 30       	cpi	r18, 0x01	; 1
    135c:	09 f0       	breq	.+2      	; 0x1360 <__vector_2+0x32>
    135e:	80 e0       	ldi	r24, 0x00	; 0
    1360:	21 e0       	ldi	r18, 0x01	; 1
    1362:	91 30       	cpi	r25, 0x01	; 1
    1364:	09 f0       	breq	.+2      	; 0x1368 <__vector_2+0x3a>
    1366:	20 e0       	ldi	r18, 0x00	; 0
    1368:	22 23       	and	r18, r18
    136a:	59 f0       	breq	.+22     	; 0x1382 <__vector_2+0x54>
    136c:	88 23       	and	r24, r24
    136e:	49 f0       	breq	.+18     	; 0x1382 <__vector_2+0x54>
	{
		FreqRespiracao --;
    1370:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <FreqRespiracao>
    1374:	81 50       	subi	r24, 0x01	; 1
		FreqRespiracao = (FreqRespiracao == 4) ? 5:FreqRespiracao;
    1376:	84 30       	cpi	r24, 0x04	; 4
    1378:	09 f4       	brne	.+2      	; 0x137c <__vector_2+0x4e>
    137a:	85 e0       	ldi	r24, 0x05	; 5
    137c:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <FreqRespiracao>
    1380:	28 c0       	rjmp	.+80     	; 0x13d2 <__vector_2+0xa4>
	}
	else if((cursor == 2) & (sel ==1))
    1382:	21 e0       	ldi	r18, 0x01	; 1
    1384:	92 30       	cpi	r25, 0x02	; 2
    1386:	09 f0       	breq	.+2      	; 0x138a <__vector_2+0x5c>
    1388:	20 e0       	ldi	r18, 0x00	; 0
    138a:	22 23       	and	r18, r18
    138c:	79 f0       	breq	.+30     	; 0x13ac <__vector_2+0x7e>
    138e:	88 23       	and	r24, r24
    1390:	69 f0       	breq	.+26     	; 0x13ac <__vector_2+0x7e>
	{
		NivelO2 -= (NivelO2 == 0) ? 0:10;
    1392:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <NivelO2>
    1396:	88 23       	and	r24, r24
    1398:	11 f0       	breq	.+4      	; 0x139e <__vector_2+0x70>
    139a:	9a e0       	ldi	r25, 0x0A	; 10
    139c:	01 c0       	rjmp	.+2      	; 0x13a0 <__vector_2+0x72>
    139e:	98 2f       	mov	r25, r24
    13a0:	89 1b       	sub	r24, r25
    13a2:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <NivelO2>
		valvula_o2(NivelO2);
    13a6:	0e 94 b8 08 	call	0x1170	; 0x1170 <valvula_o2>
    13aa:	13 c0       	rjmp	.+38     	; 0x13d2 <__vector_2+0xa4>
		
	}
	else if ((cursor == 3) & (sel ==1))
    13ac:	21 e0       	ldi	r18, 0x01	; 1
    13ae:	93 30       	cpi	r25, 0x03	; 3
    13b0:	09 f0       	breq	.+2      	; 0x13b4 <__vector_2+0x86>
    13b2:	20 e0       	ldi	r18, 0x00	; 0
    13b4:	22 23       	and	r18, r18
    13b6:	69 f0       	breq	.+26     	; 0x13d2 <__vector_2+0xa4>
    13b8:	88 23       	and	r24, r24
    13ba:	59 f0       	breq	.+22     	; 0x13d2 <__vector_2+0xa4>
	{
		VolO2 --;
    13bc:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <VolO2>
    13c0:	81 50       	subi	r24, 0x01	; 1
		VolO2 = (VolO2 == 0)? 1:VolO2;
    13c2:	09 f4       	brne	.+2      	; 0x13c6 <__vector_2+0x98>
    13c4:	81 e0       	ldi	r24, 0x01	; 1
    13c6:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <VolO2>
		contpwm = 0;
    13ca:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <contpwm>
		indpw = 0;
    13ce:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
	}
	// tela agendamento
	
		if((cursor == 1) & (sel == 2))
    13d2:	90 91 75 02 	lds	r25, 0x0275	; 0x800275 <cursor>
    13d6:	81 e0       	ldi	r24, 0x01	; 1
    13d8:	20 91 77 02 	lds	r18, 0x0277	; 0x800277 <sel>
    13dc:	22 30       	cpi	r18, 0x02	; 2
    13de:	09 f0       	breq	.+2      	; 0x13e2 <__vector_2+0xb4>
    13e0:	80 e0       	ldi	r24, 0x00	; 0
    13e2:	21 e0       	ldi	r18, 0x01	; 1
    13e4:	91 30       	cpi	r25, 0x01	; 1
    13e6:	09 f0       	breq	.+2      	; 0x13ea <__vector_2+0xbc>
    13e8:	20 e0       	ldi	r18, 0x00	; 0
    13ea:	22 23       	and	r18, r18
    13ec:	59 f0       	breq	.+22     	; 0x1404 <__vector_2+0xd6>
    13ee:	88 23       	and	r24, r24
    13f0:	49 f0       	breq	.+18     	; 0x1404 <__vector_2+0xd6>
		{
			FreqRes_ag --;
    13f2:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <FreqRes_ag>
    13f6:	81 50       	subi	r24, 0x01	; 1
			FreqRes_ag = (FreqRes_ag == 4) ? 5:FreqRes_ag;
    13f8:	84 30       	cpi	r24, 0x04	; 4
    13fa:	09 f4       	brne	.+2      	; 0x13fe <__vector_2+0xd0>
    13fc:	85 e0       	ldi	r24, 0x05	; 5
    13fe:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <FreqRes_ag>
    1402:	32 c0       	rjmp	.+100    	; 0x1468 <__vector_2+0x13a>
		}
		else if((cursor == 2) & (sel ==2))
    1404:	21 e0       	ldi	r18, 0x01	; 1
    1406:	92 30       	cpi	r25, 0x02	; 2
    1408:	09 f0       	breq	.+2      	; 0x140c <__vector_2+0xde>
    140a:	20 e0       	ldi	r18, 0x00	; 0
    140c:	22 23       	and	r18, r18
    140e:	69 f0       	breq	.+26     	; 0x142a <__vector_2+0xfc>
    1410:	88 23       	and	r24, r24
    1412:	59 f0       	breq	.+22     	; 0x142a <__vector_2+0xfc>
		{
			nivelo2_ag -= (nivelo2_ag == 0) ? 0:10;
    1414:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <nivelo2_ag>
    1418:	88 23       	and	r24, r24
    141a:	11 f0       	breq	.+4      	; 0x1420 <__vector_2+0xf2>
    141c:	9a e0       	ldi	r25, 0x0A	; 10
    141e:	01 c0       	rjmp	.+2      	; 0x1422 <__vector_2+0xf4>
    1420:	98 2f       	mov	r25, r24
    1422:	89 1b       	sub	r24, r25
    1424:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <nivelo2_ag>
    1428:	1f c0       	rjmp	.+62     	; 0x1468 <__vector_2+0x13a>
			
		}
		else if ((cursor == 3) & (sel ==2))
    142a:	21 e0       	ldi	r18, 0x01	; 1
    142c:	93 30       	cpi	r25, 0x03	; 3
    142e:	09 f0       	breq	.+2      	; 0x1432 <__vector_2+0x104>
    1430:	20 e0       	ldi	r18, 0x00	; 0
    1432:	22 23       	and	r18, r18
    1434:	51 f0       	breq	.+20     	; 0x144a <__vector_2+0x11c>
    1436:	88 23       	and	r24, r24
    1438:	41 f0       	breq	.+16     	; 0x144a <__vector_2+0x11c>
		{
			volume_ag --;
    143a:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <volume_ag>
    143e:	81 50       	subi	r24, 0x01	; 1
			volume_ag = (volume_ag == 0)? 1:volume_ag;
    1440:	09 f4       	brne	.+2      	; 0x1444 <__vector_2+0x116>
    1442:	81 e0       	ldi	r24, 0x01	; 1
    1444:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <volume_ag>
    1448:	0f c0       	rjmp	.+30     	; 0x1468 <__vector_2+0x13a>
		}
	    else if ((cursor == 4) & (sel == 2))
    144a:	21 e0       	ldi	r18, 0x01	; 1
    144c:	94 30       	cpi	r25, 0x04	; 4
    144e:	09 f0       	breq	.+2      	; 0x1452 <__vector_2+0x124>
    1450:	20 e0       	ldi	r18, 0x00	; 0
    1452:	22 23       	and	r18, r18
    1454:	49 f0       	breq	.+18     	; 0x1468 <__vector_2+0x13a>
    1456:	88 23       	and	r24, r24
    1458:	39 f0       	breq	.+14     	; 0x1468 <__vector_2+0x13a>
	    {
			temp_ag --;
    145a:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <temp_ag>
    145e:	81 50       	subi	r24, 0x01	; 1
			temp_ag = (temp_ag == 0)? 1:temp_ag;  
    1460:	09 f4       	brne	.+2      	; 0x1464 <__vector_2+0x136>
    1462:	81 e0       	ldi	r24, 0x01	; 1
    1464:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <temp_ag>
	    }	
	
	
}
    1468:	ff 91       	pop	r31
    146a:	ef 91       	pop	r30
    146c:	bf 91       	pop	r27
    146e:	af 91       	pop	r26
    1470:	9f 91       	pop	r25
    1472:	8f 91       	pop	r24
    1474:	7f 91       	pop	r23
    1476:	6f 91       	pop	r22
    1478:	5f 91       	pop	r21
    147a:	4f 91       	pop	r20
    147c:	3f 91       	pop	r19
    147e:	2f 91       	pop	r18
    1480:	0f 90       	pop	r0
    1482:	0f be       	out	0x3f, r0	; 63
    1484:	0f 90       	pop	r0
    1486:	1f 90       	pop	r1
    1488:	18 95       	reti

0000148a <usart_tx>:
	OCR1B = orcb_val[ind];
}

void usart_tx(uint8_t data)
{
	while(!(UCSR0A & (1<<UDRE0)));// verifica se o registrador de transmissão está vazio
    148a:	e0 ec       	ldi	r30, 0xC0	; 192
    148c:	f0 e0       	ldi	r31, 0x00	; 0
    148e:	90 81       	ld	r25, Z
    1490:	95 ff       	sbrs	r25, 5
    1492:	fd cf       	rjmp	.-6      	; 0x148e <usart_tx+0x4>
	
	UDR0 = data; //envia 
    1494:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
    1498:	08 95       	ret

0000149a <main>:

int main(void)
{
	// definições de entrada e saída
	
	DDRB |= 0b00001110;
    149a:	84 b1       	in	r24, 0x04	; 4
    149c:	8e 60       	ori	r24, 0x0E	; 14
    149e:	84 b9       	out	0x04, r24	; 4
	DDRD = 0b00000011;
    14a0:	83 e0       	ldi	r24, 0x03	; 3
    14a2:	8a b9       	out	0x0a, r24	; 10
	DDRC = 0b1111100;
    14a4:	9c e7       	ldi	r25, 0x7C	; 124
    14a6:	97 b9       	out	0x07, r25	; 7
	PORTD |= 0b11101100;
    14a8:	9b b1       	in	r25, 0x0b	; 11
    14aa:	9c 6e       	ori	r25, 0xEC	; 236
    14ac:	9b b9       	out	0x0b, r25	; 11
	PORTC &= 0b1111100;
    14ae:	98 b1       	in	r25, 0x08	; 8
    14b0:	9c 77       	andi	r25, 0x7C	; 124
    14b2:	98 b9       	out	0x08, r25	; 8
	
	//configuração PWM top = (F_CPU)/(pre*fpwm)-1 = 39999; pre = 8 , fpwm = 50Hz;
	
	ICR1 = 39999; // top
    14b4:	2f e3       	ldi	r18, 0x3F	; 63
    14b6:	3c e9       	ldi	r19, 0x9C	; 156
    14b8:	30 93 87 00 	sts	0x0087, r19	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
    14bc:	20 93 86 00 	sts	0x0086, r18	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
	TCCR1A = 0b10100010; // habilita o pwm de comparação não invertida para ocra e ocrb e com a contagem especifica top
    14c0:	92 ea       	ldi	r25, 0xA2	; 162
    14c2:	90 93 80 00 	sts	0x0080, r25	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
	TCCR1B = 0b00011010; // complemento para seleção de modo e configuração do pre =8
    14c6:	9a e1       	ldi	r25, 0x1A	; 26
    14c8:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
	
	OCR1A = 2000; // posição inicial do servo em B1(BVM); 0°
    14cc:	20 ed       	ldi	r18, 0xD0	; 208
    14ce:	37 e0       	ldi	r19, 0x07	; 7
    14d0:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    14d4:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
	OCR1B = 3000; // posição inicial do servo em B2	(válvula de O2); 90°
    14d8:	28 eb       	ldi	r18, 0xB8	; 184
    14da:	3b e0       	ldi	r19, 0x0B	; 11
    14dc:	30 93 8b 00 	sts	0x008B, r19	; 0x80008b <__DATA_REGION_ORIGIN__+0x2b>
    14e0:	20 93 8a 00 	sts	0x008A, r18	; 0x80008a <__DATA_REGION_ORIGIN__+0x2a>
	
	// configuração de timers
	
	TCCR0A = 0b00000010; //habilita o modo ctc do TC0
    14e4:	92 e0       	ldi	r25, 0x02	; 2
    14e6:	94 bd       	out	0x24, r25	; 36
	TCCR0B = 0b00000011; //habilita o TC0 com prescaler 64
    14e8:	85 bd       	out	0x25, r24	; 37
	OCR0A = 249; //ajustando comparador
    14ea:	29 ef       	ldi	r18, 0xF9	; 249
    14ec:	27 bd       	out	0x27, r18	; 39
	
	// configuração do ADC
	
	ADMUX = 0b01000000; //Vref = Vcc entrada C0
    14ee:	20 e4       	ldi	r18, 0x40	; 64
    14f0:	20 93 7c 00 	sts	0x007C, r18	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	ADCSRA = 0b11101111; //habilita interrupção, modo de conversão continua,prescaler 128
    14f4:	2f ee       	ldi	r18, 0xEF	; 239
    14f6:	20 93 7a 00 	sts	0x007A, r18	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
	ADCSRB = 0x00; //converção continua
    14fa:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__DATA_REGION_ORIGIN__+0x1b>
	DIDR0 = 0b00111110; //habilita C0 como entrada do ADC
    14fe:	2e e3       	ldi	r18, 0x3E	; 62
    1500:	20 93 7e 00 	sts	0x007E, r18	; 0x80007e <__DATA_REGION_ORIGIN__+0x1e>
	
	// Configurações de interrupção
	
	TIMSK0 = 0b00000010; // habilita a interrupção na igualdade de comparação com OCR0A
    1504:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
	
	EICRA = 0b00001010;// ativa na borda de descida do pino D2(INT0) e D3(INT1)
    1508:	9a e0       	ldi	r25, 0x0A	; 10
    150a:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <__DATA_REGION_ORIGIN__+0x9>
	EIMSK = 0b00000011; // habilita as interrupções devido os pinos D2(INT0) e D3(INT1)
    150e:	8d bb       	out	0x1d, r24	; 29
	
	PCICR = 0b00000100; //seleciona as interrupções para os variações nos pinos D
    1510:	84 e0       	ldi	r24, 0x04	; 4
    1512:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__DATA_REGION_ORIGIN__+0x8>
	PCMSK2 |= 0b00010000; // habilita a interrupção para o pino D0
    1516:	ed e6       	ldi	r30, 0x6D	; 109
    1518:	f0 e0       	ldi	r31, 0x00	; 0
    151a:	80 81       	ld	r24, Z
    151c:	80 61       	ori	r24, 0x10	; 16
    151e:	80 83       	st	Z, r24
	
	sei();
    1520:	78 94       	sei
	
	
	//lcd
	nokia_lcd_init();
    1522:	0e 94 6f 0c 	call	0x18de	; 0x18de <nokia_lcd_init>
	
	//USART
	USART_init(MYUBRR);
    1526:	87 e6       	ldi	r24, 0x67	; 103
    1528:	90 e0       	ldi	r25, 0x00	; 0
    152a:	0e 94 ad 08 	call	0x115a	; 0x115a <USART_init>
	// variaveis auxiliares
	
	
	uint32_t temp_ant_lcd = 0;
	uint8_t mux = 0;
	uint32_t temp_ant_mux = 0;
    152e:	41 2c       	mov	r4, r1
    1530:	51 2c       	mov	r5, r1
    1532:	32 01       	movw	r6, r4
	
	// variaveis auxiliares
	
	
	uint32_t temp_ant_lcd = 0;
	uint8_t mux = 0;
    1534:	10 e0       	ldi	r17, 0x00	; 0
	USART_init(MYUBRR);
	
	// variaveis auxiliares
	
	
	uint32_t temp_ant_lcd = 0;
    1536:	81 2c       	mov	r8, r1
    1538:	91 2c       	mov	r9, r1
    153a:	54 01       	movw	r10, r8
	while (1)
	{
		
		
		//agendamento
		if((tempo_ms - tempAnt_ag >= (temp_ag*60000)) & (ag_set == 1))
    153c:	c1 e0       	ldi	r28, 0x01	; 1
    153e:	d0 e0       	ldi	r29, 0x00	; 0
			{
				case 0:
				
				temperatura = sensor_temperatura (leitura_ADC);
				
				ADMUX ^= 0b00000001;
    1540:	0f 2e       	mov	r0, r31
    1542:	fc e7       	ldi	r31, 0x7C	; 124
    1544:	2f 2e       	mov	r2, r31
    1546:	31 2c       	mov	r3, r1
    1548:	f0 2d       	mov	r31, r0
				DIDR0 ^= 0b00000011;
    154a:	03 e0       	ldi	r16, 0x03	; 3
	while (1)
	{
		
		
		//agendamento
		if((tempo_ms - tempAnt_ag >= (temp_ag*60000)) & (ag_set == 1))
    154c:	c0 90 68 02 	lds	r12, 0x0268	; 0x800268 <tempo_ms>
    1550:	d0 90 69 02 	lds	r13, 0x0269	; 0x800269 <tempo_ms+0x1>
    1554:	e0 90 6a 02 	lds	r14, 0x026A	; 0x80026a <tempo_ms+0x2>
    1558:	f0 90 6b 02 	lds	r15, 0x026B	; 0x80026b <tempo_ms+0x3>
    155c:	80 91 60 02 	lds	r24, 0x0260	; 0x800260 <tempAnt_ag>
    1560:	90 91 61 02 	lds	r25, 0x0261	; 0x800261 <tempAnt_ag+0x1>
    1564:	a0 91 62 02 	lds	r26, 0x0262	; 0x800262 <tempAnt_ag+0x2>
    1568:	b0 91 63 02 	lds	r27, 0x0263	; 0x800263 <tempAnt_ag+0x3>
    156c:	c8 1a       	sub	r12, r24
    156e:	d9 0a       	sbc	r13, r25
    1570:	ea 0a       	sbc	r14, r26
    1572:	fb 0a       	sbc	r15, r27
    1574:	20 91 1a 01 	lds	r18, 0x011A	; 0x80011a <temp_ag>
    1578:	30 e0       	ldi	r19, 0x00	; 0
    157a:	a0 e6       	ldi	r26, 0x60	; 96
    157c:	ba ee       	ldi	r27, 0xEA	; 234
    157e:	0e 94 13 10 	call	0x2026	; 0x2026 <__umulhisi3>
    1582:	2c 2f       	mov	r18, r28
    1584:	c6 16       	cp	r12, r22
    1586:	d7 06       	cpc	r13, r23
    1588:	e8 06       	cpc	r14, r24
    158a:	f9 06       	cpc	r15, r25
    158c:	08 f4       	brcc	.+2      	; 0x1590 <main+0xf6>
    158e:	2d 2f       	mov	r18, r29
    1590:	22 23       	and	r18, r18
    1592:	39 f1       	breq	.+78     	; 0x15e2 <main+0x148>
    1594:	8c 2f       	mov	r24, r28
    1596:	90 91 74 02 	lds	r25, 0x0274	; 0x800274 <ag_set>
    159a:	91 30       	cpi	r25, 0x01	; 1
    159c:	09 f0       	breq	.+2      	; 0x15a0 <main+0x106>
    159e:	8d 2f       	mov	r24, r29
    15a0:	88 23       	and	r24, r24
    15a2:	f9 f0       	breq	.+62     	; 0x15e2 <main+0x148>
		{
			FreqRespiracao = FreqRes_ag;
    15a4:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <FreqRes_ag>
    15a8:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <FreqRespiracao>
			
			NivelO2 = nivelo2_ag;
    15ac:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <nivelo2_ag>
    15b0:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <NivelO2>
			valvula_o2(NivelO2);
    15b4:	0e 94 b8 08 	call	0x1170	; 0x1170 <valvula_o2>
			
			VolO2 = volume_ag;
    15b8:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <volume_ag>
    15bc:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <VolO2>
			indpw = 0;
    15c0:	d0 93 00 01 	sts	0x0100, r29	; 0x800100 <__data_start>
			contpwm = 0;
    15c4:	d0 93 01 01 	sts	0x0101, r29	; 0x800101 <contpwm>
			
			ag_set = 0;
    15c8:	d0 93 74 02 	sts	0x0274, r29	; 0x800274 <ag_set>
			FreqRes_ag = 5;
    15cc:	35 e0       	ldi	r19, 0x05	; 5
    15ce:	30 93 1d 01 	sts	0x011D, r19	; 0x80011d <FreqRes_ag>
			nivelo2_ag =50;
    15d2:	82 e3       	ldi	r24, 0x32	; 50
    15d4:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <nivelo2_ag>
			volume_ag = 4;
    15d8:	e4 e0       	ldi	r30, 0x04	; 4
    15da:	e0 93 1b 01 	sts	0x011B, r30	; 0x80011b <volume_ag>
			temp_ag = 1;
    15de:	c0 93 1a 01 	sts	0x011A, r28	; 0x80011a <temp_ag>
		}
		
		//multiplexação ADC
		if((tempo_ms-temp_ant_mux)>=150)
    15e2:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <tempo_ms>
    15e6:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <tempo_ms+0x1>
    15ea:	a0 91 6a 02 	lds	r26, 0x026A	; 0x80026a <tempo_ms+0x2>
    15ee:	b0 91 6b 02 	lds	r27, 0x026B	; 0x80026b <tempo_ms+0x3>
    15f2:	84 19       	sub	r24, r4
    15f4:	95 09       	sbc	r25, r5
    15f6:	a6 09       	sbc	r26, r6
    15f8:	b7 09       	sbc	r27, r7
    15fa:	86 39       	cpi	r24, 0x96	; 150
    15fc:	91 05       	cpc	r25, r1
    15fe:	a1 05       	cpc	r26, r1
    1600:	b1 05       	cpc	r27, r1
    1602:	c0 f1       	brcs	.+112    	; 0x1674 <main+0x1da>
		{
			switch(mux)
    1604:	11 23       	and	r17, r17
    1606:	19 f0       	breq	.+6      	; 0x160e <main+0x174>
    1608:	11 30       	cpi	r17, 0x01	; 1
    160a:	a1 f0       	breq	.+40     	; 0x1634 <main+0x19a>
    160c:	25 c0       	rjmp	.+74     	; 0x1658 <main+0x1be>
			{
				case 0:
				
				temperatura = sensor_temperatura (leitura_ADC);
    160e:	80 91 6c 02 	lds	r24, 0x026C	; 0x80026c <leitura_ADC>
    1612:	90 91 6d 02 	lds	r25, 0x026D	; 0x80026d <leitura_ADC+0x1>
    1616:	0e 94 68 08 	call	0x10d0	; 0x10d0 <sensor_temperatura>
    161a:	80 93 5b 02 	sts	0x025B, r24	; 0x80025b <temperatura>
				
				ADMUX ^= 0b00000001;
    161e:	f1 01       	movw	r30, r2
    1620:	80 81       	ld	r24, Z
    1622:	8c 27       	eor	r24, r28
    1624:	80 83       	st	Z, r24
				DIDR0 ^= 0b00000011;
    1626:	ee e7       	ldi	r30, 0x7E	; 126
    1628:	f0 e0       	ldi	r31, 0x00	; 0
    162a:	80 81       	ld	r24, Z
    162c:	80 27       	eor	r24, r16
    162e:	80 83       	st	Z, r24
				mux = 1;
    1630:	1c 2f       	mov	r17, r28
				
				break;
    1632:	12 c0       	rjmp	.+36     	; 0x1658 <main+0x1be>
				
				case 1:
				
				spo2 = sensor_spo2 (leitura_ADC);
    1634:	80 91 6c 02 	lds	r24, 0x026C	; 0x80026c <leitura_ADC>
    1638:	90 91 6d 02 	lds	r25, 0x026D	; 0x80026d <leitura_ADC+0x1>
    163c:	0e 94 89 08 	call	0x1112	; 0x1112 <sensor_spo2>
    1640:	80 93 5a 02 	sts	0x025A, r24	; 0x80025a <spo2>
				
				ADMUX ^= 0b00000001;
    1644:	f1 01       	movw	r30, r2
    1646:	80 81       	ld	r24, Z
    1648:	8c 27       	eor	r24, r28
    164a:	80 83       	st	Z, r24
				DIDR0 ^= 0b00000011;
    164c:	ee e7       	ldi	r30, 0x7E	; 126
    164e:	f0 e0       	ldi	r31, 0x00	; 0
    1650:	80 81       	ld	r24, Z
    1652:	80 27       	eor	r24, r16
    1654:	80 83       	st	Z, r24
				mux = 0;
    1656:	1d 2f       	mov	r17, r29
				
				break;
			}
			
			temp_ant_mux = tempo_ms;
    1658:	40 90 68 02 	lds	r4, 0x0268	; 0x800268 <tempo_ms>
    165c:	50 90 69 02 	lds	r5, 0x0269	; 0x800269 <tempo_ms+0x1>
    1660:	60 90 6a 02 	lds	r6, 0x026A	; 0x80026a <tempo_ms+0x2>
    1664:	70 90 6b 02 	lds	r7, 0x026B	; 0x80026b <tempo_ms+0x3>
			alerta(temperatura, spo2);
    1668:	60 91 5a 02 	lds	r22, 0x025A	; 0x80025a <spo2>
    166c:	80 91 5b 02 	lds	r24, 0x025B	; 0x80025b <temperatura>
    1670:	0e 94 a4 08 	call	0x1148	; 0x1148 <alerta>
		}
		
		// telas do LCD
		if((tempo_ms-temp_ant_lcd)>=200)
    1674:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <tempo_ms>
    1678:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <tempo_ms+0x1>
    167c:	a0 91 6a 02 	lds	r26, 0x026A	; 0x80026a <tempo_ms+0x2>
    1680:	b0 91 6b 02 	lds	r27, 0x026B	; 0x80026b <tempo_ms+0x3>
    1684:	88 19       	sub	r24, r8
    1686:	99 09       	sbc	r25, r9
    1688:	aa 09       	sbc	r26, r10
    168a:	bb 09       	sbc	r27, r11
    168c:	88 3c       	cpi	r24, 0xC8	; 200
    168e:	91 05       	cpc	r25, r1
    1690:	a1 05       	cpc	r26, r1
    1692:	b1 05       	cpc	r27, r1
    1694:	98 f1       	brcs	.+102    	; 0x16fc <main+0x262>
		{
			if(sel==0)
    1696:	80 91 77 02 	lds	r24, 0x0277	; 0x800277 <sel>
    169a:	81 11       	cpse	r24, r1
    169c:	0b c0       	rjmp	.+22     	; 0x16b4 <main+0x21a>
			plot_sinaisVitais(bpm,temperatura,spo2,press);
    169e:	22 e1       	ldi	r18, 0x12	; 18
    16a0:	31 e0       	ldi	r19, 0x01	; 1
    16a2:	40 91 5a 02 	lds	r20, 0x025A	; 0x80025a <spo2>
    16a6:	60 91 5b 02 	lds	r22, 0x025B	; 0x80025b <temperatura>
    16aa:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <bpm>
    16ae:	0e 94 35 03 	call	0x66a	; 0x66a <plot_sinaisVitais>
    16b2:	1c c0       	rjmp	.+56     	; 0x16ec <main+0x252>
			else if(sel==1)
    16b4:	81 30       	cpi	r24, 0x01	; 1
    16b6:	49 f4       	brne	.+18     	; 0x16ca <main+0x230>
			plot_parametros(FreqRespiracao,NivelO2,VolO2);
    16b8:	40 91 1e 01 	lds	r20, 0x011E	; 0x80011e <VolO2>
    16bc:	60 91 1f 01 	lds	r22, 0x011F	; 0x80011f <NivelO2>
    16c0:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <FreqRespiracao>
    16c4:	0e 94 d7 03 	call	0x7ae	; 0x7ae <plot_parametros>
    16c8:	11 c0       	rjmp	.+34     	; 0x16ec <main+0x252>
			else if(sel==2)
    16ca:	82 30       	cpi	r24, 0x02	; 2
    16cc:	59 f4       	brne	.+22     	; 0x16e4 <main+0x24a>
			plot_agendamento(FreqRes_ag,nivelo2_ag,volume_ag,temp_ag);
    16ce:	20 91 1a 01 	lds	r18, 0x011A	; 0x80011a <temp_ag>
    16d2:	40 91 1b 01 	lds	r20, 0x011B	; 0x80011b <volume_ag>
    16d6:	60 91 1c 01 	lds	r22, 0x011C	; 0x80011c <nivelo2_ag>
    16da:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <FreqRes_ag>
    16de:	0e 94 1d 05 	call	0xa3a	; 0xa3a <plot_agendamento>
    16e2:	04 c0       	rjmp	.+8      	; 0x16ec <main+0x252>
			else if(sel==4)
    16e4:	84 30       	cpi	r24, 0x04	; 4
    16e6:	11 f4       	brne	.+4      	; 0x16ec <main+0x252>
			plot_tx();
    16e8:	0e 94 d3 07 	call	0xfa6	; 0xfa6 <plot_tx>
			
			temp_ant_lcd = tempo_ms;
    16ec:	80 90 68 02 	lds	r8, 0x0268	; 0x800268 <tempo_ms>
    16f0:	90 90 69 02 	lds	r9, 0x0269	; 0x800269 <tempo_ms+0x1>
    16f4:	a0 90 6a 02 	lds	r10, 0x026A	; 0x80026a <tempo_ms+0x2>
    16f8:	b0 90 6b 02 	lds	r11, 0x026B	; 0x80026b <tempo_ms+0x3>
		}
		
		float delay_def = (60./(FreqRespiracao*2*(VolO2)))*1000;//calculo delay para troca de posições do servo do BVM
		// Servo do BVM
		if ((tempo_ms - tempo_ant) >= delay_def)
    16fc:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <FreqRespiracao>
    1700:	90 e0       	ldi	r25, 0x00	; 0
    1702:	88 0f       	add	r24, r24
    1704:	99 1f       	adc	r25, r25
    1706:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <VolO2>
    170a:	28 9f       	mul	r18, r24
    170c:	b0 01       	movw	r22, r0
    170e:	29 9f       	mul	r18, r25
    1710:	70 0d       	add	r23, r0
    1712:	11 24       	eor	r1, r1
    1714:	07 2e       	mov	r0, r23
    1716:	00 0c       	add	r0, r0
    1718:	88 0b       	sbc	r24, r24
    171a:	99 0b       	sbc	r25, r25
    171c:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <__floatsisf>
    1720:	9b 01       	movw	r18, r22
    1722:	ac 01       	movw	r20, r24
    1724:	60 e0       	ldi	r22, 0x00	; 0
    1726:	70 e0       	ldi	r23, 0x00	; 0
    1728:	80 e7       	ldi	r24, 0x70	; 112
    172a:	92 e4       	ldi	r25, 0x42	; 66
    172c:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divsf3>
    1730:	20 e0       	ldi	r18, 0x00	; 0
    1732:	30 e0       	ldi	r19, 0x00	; 0
    1734:	4a e7       	ldi	r20, 0x7A	; 122
    1736:	54 e4       	ldi	r21, 0x44	; 68
    1738:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__mulsf3>
    173c:	6b 01       	movw	r12, r22
    173e:	7c 01       	movw	r14, r24
    1740:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <tempo_ms>
    1744:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <tempo_ms+0x1>
    1748:	a0 91 6a 02 	lds	r26, 0x026A	; 0x80026a <tempo_ms+0x2>
    174c:	b0 91 6b 02 	lds	r27, 0x026B	; 0x80026b <tempo_ms+0x3>
    1750:	20 91 64 02 	lds	r18, 0x0264	; 0x800264 <tempo_ant>
    1754:	30 91 65 02 	lds	r19, 0x0265	; 0x800265 <tempo_ant+0x1>
    1758:	40 91 66 02 	lds	r20, 0x0266	; 0x800266 <tempo_ant+0x2>
    175c:	50 91 67 02 	lds	r21, 0x0267	; 0x800267 <tempo_ant+0x3>
    1760:	bc 01       	movw	r22, r24
    1762:	cd 01       	movw	r24, r26
    1764:	62 1b       	sub	r22, r18
    1766:	73 0b       	sbc	r23, r19
    1768:	84 0b       	sbc	r24, r20
    176a:	95 0b       	sbc	r25, r21
    176c:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <__floatunsisf>
    1770:	9b 01       	movw	r18, r22
    1772:	ac 01       	movw	r20, r24
    1774:	c7 01       	movw	r24, r14
    1776:	b6 01       	movw	r22, r12
    1778:	0e 94 3b 0e 	call	0x1c76	; 0x1c76 <__cmpsf2>
    177c:	18 16       	cp	r1, r24
    177e:	0c f4       	brge	.+2      	; 0x1782 <main+0x2e8>
    1780:	4c c0       	rjmp	.+152    	; 0x181a <main+0x380>
		{
			freq_resp_pwm(contpwm);
    1782:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <contpwm>
    1786:	0e 94 04 03 	call	0x608	; 0x608 <freq_resp_pwm>
			indpw ++;
    178a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    178e:	8f 5f       	subi	r24, 0xFF	; 255
    1790:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			indpw = (indpw == (2*VolO2)) ? 0:indpw;
    1794:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <VolO2>
    1798:	48 2f       	mov	r20, r24
    179a:	50 e0       	ldi	r21, 0x00	; 0
    179c:	29 2f       	mov	r18, r25
    179e:	30 e0       	ldi	r19, 0x00	; 0
    17a0:	22 0f       	add	r18, r18
    17a2:	33 1f       	adc	r19, r19
    17a4:	42 17       	cp	r20, r18
    17a6:	53 07       	cpc	r21, r19
    17a8:	09 f4       	brne	.+2      	; 0x17ac <main+0x312>
    17aa:	73 c0       	rjmp	.+230    	; 0x1892 <main+0x3f8>
			contpwm += ((indpw > VolO2) & (contpwm!=0)) ? -1:1;
    17ac:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <contpwm>
    17b0:	3c 2f       	mov	r19, r28
    17b2:	98 17       	cp	r25, r24
    17b4:	08 f0       	brcs	.+2      	; 0x17b8 <main+0x31e>
    17b6:	3d 2f       	mov	r19, r29
    17b8:	33 23       	and	r19, r19
    17ba:	31 f0       	breq	.+12     	; 0x17c8 <main+0x32e>
    17bc:	9c 2f       	mov	r25, r28
    17be:	21 11       	cpse	r18, r1
    17c0:	01 c0       	rjmp	.+2      	; 0x17c4 <main+0x32a>
    17c2:	9d 2f       	mov	r25, r29
    17c4:	91 11       	cpse	r25, r1
    17c6:	02 c0       	rjmp	.+4      	; 0x17cc <main+0x332>
    17c8:	9c 2f       	mov	r25, r28
    17ca:	01 c0       	rjmp	.+2      	; 0x17ce <main+0x334>
    17cc:	9f ef       	ldi	r25, 0xFF	; 255
			contpwm = (indpw == 0)? 0:contpwm;
    17ce:	88 23       	and	r24, r24
    17d0:	11 f0       	breq	.+4      	; 0x17d6 <main+0x33c>
		if ((tempo_ms - tempo_ant) >= delay_def)
		{
			freq_resp_pwm(contpwm);
			indpw ++;
			indpw = (indpw == (2*VolO2)) ? 0:indpw;
			contpwm += ((indpw > VolO2) & (contpwm!=0)) ? -1:1;
    17d2:	89 2f       	mov	r24, r25
    17d4:	82 0f       	add	r24, r18
			contpwm = (indpw == 0)? 0:contpwm;
    17d6:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <contpwm>
			
			// grafico
			
			if(sel==3){
    17da:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <sel>
    17de:	93 30       	cpi	r25, 0x03	; 3
    17e0:	61 f4       	brne	.+24     	; 0x17fa <main+0x360>
				plot_grafico(contpwm,x_pass);
    17e2:	60 91 73 02 	lds	r22, 0x0273	; 0x800273 <x_pass>
    17e6:	0e 94 59 07 	call	0xeb2	; 0xeb2 <plot_grafico>
				
				x_pass ++;
    17ea:	80 91 73 02 	lds	r24, 0x0273	; 0x800273 <x_pass>
    17ee:	8f 5f       	subi	r24, 0xFF	; 255
				x_pass=(x_pass==60)? 0:x_pass;
    17f0:	8c 33       	cpi	r24, 0x3C	; 60
    17f2:	09 f4       	brne	.+2      	; 0x17f6 <main+0x35c>
    17f4:	8d 2f       	mov	r24, r29
    17f6:	80 93 73 02 	sts	0x0273, r24	; 0x800273 <x_pass>
				
			}
			
			tempo_ant = tempo_ms;
    17fa:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <tempo_ms>
    17fe:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <tempo_ms+0x1>
    1802:	a0 91 6a 02 	lds	r26, 0x026A	; 0x80026a <tempo_ms+0x2>
    1806:	b0 91 6b 02 	lds	r27, 0x026B	; 0x80026b <tempo_ms+0x3>
    180a:	80 93 64 02 	sts	0x0264, r24	; 0x800264 <tempo_ant>
    180e:	90 93 65 02 	sts	0x0265, r25	; 0x800265 <tempo_ant+0x1>
    1812:	a0 93 66 02 	sts	0x0266, r26	; 0x800266 <tempo_ant+0x2>
    1816:	b0 93 67 02 	sts	0x0267, r27	; 0x800267 <tempo_ant+0x3>
		}
		
		// transmissão a cada 1 segundo 
		if((tempo_ms- temAntTx >= 1000) & (set_tx==1))
    181a:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <tempo_ms>
    181e:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <tempo_ms+0x1>
    1822:	a0 91 6a 02 	lds	r26, 0x026A	; 0x80026a <tempo_ms+0x2>
    1826:	b0 91 6b 02 	lds	r27, 0x026B	; 0x80026b <tempo_ms+0x3>
    182a:	40 91 5c 02 	lds	r20, 0x025C	; 0x80025c <temAntTx>
    182e:	50 91 5d 02 	lds	r21, 0x025D	; 0x80025d <temAntTx+0x1>
    1832:	60 91 5e 02 	lds	r22, 0x025E	; 0x80025e <temAntTx+0x2>
    1836:	70 91 5f 02 	lds	r23, 0x025F	; 0x80025f <temAntTx+0x3>
    183a:	84 1b       	sub	r24, r20
    183c:	95 0b       	sbc	r25, r21
    183e:	a6 0b       	sbc	r26, r22
    1840:	b7 0b       	sbc	r27, r23
    1842:	2c 2f       	mov	r18, r28
    1844:	88 3e       	cpi	r24, 0xE8	; 232
    1846:	93 40       	sbci	r25, 0x03	; 3
    1848:	a1 05       	cpc	r26, r1
    184a:	b1 05       	cpc	r27, r1
    184c:	08 f4       	brcc	.+2      	; 0x1850 <main+0x3b6>
    184e:	2d 2f       	mov	r18, r29
    1850:	22 23       	and	r18, r18
    1852:	09 f4       	brne	.+2      	; 0x1856 <main+0x3bc>
    1854:	7b ce       	rjmp	.-778    	; 0x154c <main+0xb2>
    1856:	8c 2f       	mov	r24, r28
    1858:	90 91 72 02 	lds	r25, 0x0272	; 0x800272 <set_tx>
    185c:	91 30       	cpi	r25, 0x01	; 1
    185e:	09 f0       	breq	.+2      	; 0x1862 <main+0x3c8>
    1860:	8d 2f       	mov	r24, r29
    1862:	88 23       	and	r24, r24
    1864:	09 f4       	brne	.+2      	; 0x1868 <main+0x3ce>
    1866:	72 ce       	rjmp	.-796    	; 0x154c <main+0xb2>
		{
			usart_tx(dado);		
    1868:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <dado>
    186c:	0e 94 45 0a 	call	0x148a	; 0x148a <usart_tx>
			temAntTx =tempo_ms;	
    1870:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <tempo_ms>
    1874:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <tempo_ms+0x1>
    1878:	a0 91 6a 02 	lds	r26, 0x026A	; 0x80026a <tempo_ms+0x2>
    187c:	b0 91 6b 02 	lds	r27, 0x026B	; 0x80026b <tempo_ms+0x3>
    1880:	80 93 5c 02 	sts	0x025C, r24	; 0x80025c <temAntTx>
    1884:	90 93 5d 02 	sts	0x025D, r25	; 0x80025d <temAntTx+0x1>
    1888:	a0 93 5e 02 	sts	0x025E, r26	; 0x80025e <temAntTx+0x2>
    188c:	b0 93 5f 02 	sts	0x025F, r27	; 0x80025f <temAntTx+0x3>
    1890:	5d ce       	rjmp	.-838    	; 0x154c <main+0xb2>
		// Servo do BVM
		if ((tempo_ms - tempo_ant) >= delay_def)
		{
			freq_resp_pwm(contpwm);
			indpw ++;
			indpw = (indpw == (2*VolO2)) ? 0:indpw;
    1892:	d0 93 00 01 	sts	0x0100, r29	; 0x800100 <__data_start>
			contpwm += ((indpw > VolO2) & (contpwm!=0)) ? -1:1;
			contpwm = (indpw == 0)? 0:contpwm;
    1896:	8d 2f       	mov	r24, r29
    1898:	9e cf       	rjmp	.-196    	; 0x17d6 <main+0x33c>

0000189a <write>:
		nokia_lcd.screen[i] = 0x00;
}

void nokia_lcd_power(uint8_t on)
{
	write_cmd(on ? 0x20 : 0x24);
    189a:	42 98       	cbi	0x08, 2	; 8
    189c:	66 23       	and	r22, r22
    189e:	11 f0       	breq	.+4      	; 0x18a4 <write+0xa>
    18a0:	44 9a       	sbi	0x08, 4	; 8
    18a2:	15 c0       	rjmp	.+42     	; 0x18ce <write+0x34>
    18a4:	44 98       	cbi	0x08, 4	; 8
    18a6:	13 c0       	rjmp	.+38     	; 0x18ce <write+0x34>
    18a8:	ac 01       	movw	r20, r24
    18aa:	02 2e       	mov	r0, r18
    18ac:	02 c0       	rjmp	.+4      	; 0x18b2 <write+0x18>
    18ae:	55 95       	asr	r21
    18b0:	47 95       	ror	r20
    18b2:	0a 94       	dec	r0
    18b4:	e2 f7       	brpl	.-8      	; 0x18ae <write+0x14>
    18b6:	40 ff       	sbrs	r20, 0
    18b8:	02 c0       	rjmp	.+4      	; 0x18be <write+0x24>
    18ba:	45 9a       	sbi	0x08, 5	; 8
    18bc:	01 c0       	rjmp	.+2      	; 0x18c0 <write+0x26>
    18be:	45 98       	cbi	0x08, 5	; 8
    18c0:	46 9a       	sbi	0x08, 6	; 8
    18c2:	46 98       	cbi	0x08, 6	; 8
    18c4:	21 50       	subi	r18, 0x01	; 1
    18c6:	31 09       	sbc	r19, r1
    18c8:	78 f7       	brcc	.-34     	; 0x18a8 <write+0xe>
    18ca:	42 9a       	sbi	0x08, 2	; 8
    18cc:	08 95       	ret
    18ce:	27 e0       	ldi	r18, 0x07	; 7
    18d0:	30 e0       	ldi	r19, 0x00	; 0
    18d2:	90 e0       	ldi	r25, 0x00	; 0
    18d4:	e9 cf       	rjmp	.-46     	; 0x18a8 <write+0xe>

000018d6 <write_cmd>:
    18d6:	60 e0       	ldi	r22, 0x00	; 0
    18d8:	0e 94 4d 0c 	call	0x189a	; 0x189a <write>
    18dc:	08 95       	ret

000018de <nokia_lcd_init>:
    18de:	cf 93       	push	r28
    18e0:	df 93       	push	r29
    18e2:	3a 9a       	sbi	0x07, 2	; 7
    18e4:	3b 9a       	sbi	0x07, 3	; 7
    18e6:	3c 9a       	sbi	0x07, 4	; 7
    18e8:	3d 9a       	sbi	0x07, 5	; 7
    18ea:	3e 9a       	sbi	0x07, 6	; 7
    18ec:	43 9a       	sbi	0x08, 3	; 8
    18ee:	42 9a       	sbi	0x08, 2	; 8
    18f0:	83 ec       	ldi	r24, 0xC3	; 195
    18f2:	99 e0       	ldi	r25, 0x09	; 9
    18f4:	01 97       	sbiw	r24, 0x01	; 1
    18f6:	f1 f7       	brne	.-4      	; 0x18f4 <nokia_lcd_init+0x16>
    18f8:	00 c0       	rjmp	.+0      	; 0x18fa <nokia_lcd_init+0x1c>
    18fa:	00 00       	nop
    18fc:	43 98       	cbi	0x08, 3	; 8
    18fe:	8b e5       	ldi	r24, 0x5B	; 91
    1900:	94 e4       	ldi	r25, 0x44	; 68
    1902:	01 97       	sbiw	r24, 0x01	; 1
    1904:	f1 f7       	brne	.-4      	; 0x1902 <nokia_lcd_init+0x24>
    1906:	00 c0       	rjmp	.+0      	; 0x1908 <nokia_lcd_init+0x2a>
    1908:	00 00       	nop
    190a:	43 9a       	sbi	0x08, 3	; 8
    190c:	42 98       	cbi	0x08, 2	; 8
    190e:	81 e2       	ldi	r24, 0x21	; 33
    1910:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <write_cmd>
    1914:	83 e1       	ldi	r24, 0x13	; 19
    1916:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <write_cmd>
    191a:	86 e0       	ldi	r24, 0x06	; 6
    191c:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <write_cmd>
    1920:	82 ec       	ldi	r24, 0xC2	; 194
    1922:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <write_cmd>
    1926:	80 e2       	ldi	r24, 0x20	; 32
    1928:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <write_cmd>
    192c:	89 e0       	ldi	r24, 0x09	; 9
    192e:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <write_cmd>
    1932:	80 e8       	ldi	r24, 0x80	; 128
    1934:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <write_cmd>
    1938:	80 e4       	ldi	r24, 0x40	; 64
    193a:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <write_cmd>
    193e:	c8 ef       	ldi	r28, 0xF8	; 248
    1940:	d1 e0       	ldi	r29, 0x01	; 1
    1942:	61 e0       	ldi	r22, 0x01	; 1
    1944:	80 e0       	ldi	r24, 0x00	; 0
    1946:	0e 94 4d 0c 	call	0x189a	; 0x189a <write>
    194a:	21 97       	sbiw	r28, 0x01	; 1
    194c:	d1 f7       	brne	.-12     	; 0x1942 <nokia_lcd_init+0x64>
    194e:	88 e0       	ldi	r24, 0x08	; 8
    1950:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <write_cmd>
    1954:	8c e0       	ldi	r24, 0x0C	; 12
    1956:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <write_cmd>
    195a:	df 91       	pop	r29
    195c:	cf 91       	pop	r28
    195e:	08 95       	ret

00001960 <nokia_lcd_clear>:
    1960:	80 e8       	ldi	r24, 0x80	; 128
    1962:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <write_cmd>
    1966:	80 e4       	ldi	r24, 0x40	; 64
    1968:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <write_cmd>
    196c:	10 92 70 04 	sts	0x0470, r1	; 0x800470 <nokia_lcd+0x1f8>
    1970:	10 92 71 04 	sts	0x0471, r1	; 0x800471 <nokia_lcd+0x1f9>
    1974:	e8 e7       	ldi	r30, 0x78	; 120
    1976:	f2 e0       	ldi	r31, 0x02	; 2
    1978:	80 e7       	ldi	r24, 0x70	; 112
    197a:	94 e0       	ldi	r25, 0x04	; 4
    197c:	11 92       	st	Z+, r1
    197e:	e8 17       	cp	r30, r24
    1980:	f9 07       	cpc	r31, r25
    1982:	e1 f7       	brne	.-8      	; 0x197c <nokia_lcd_clear+0x1c>
    1984:	08 95       	ret

00001986 <nokia_lcd_set_pixel>:
}

void nokia_lcd_set_pixel(uint8_t x, uint8_t y, uint8_t value)
{
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
    1986:	26 2f       	mov	r18, r22
    1988:	26 95       	lsr	r18
    198a:	26 95       	lsr	r18
    198c:	26 95       	lsr	r18
    198e:	90 e0       	ldi	r25, 0x00	; 0
    1990:	34 e5       	ldi	r19, 0x54	; 84
    1992:	23 9f       	mul	r18, r19
    1994:	80 0d       	add	r24, r0
    1996:	91 1d       	adc	r25, r1
    1998:	11 24       	eor	r1, r1
	if (value)
    199a:	44 23       	and	r20, r20
    199c:	79 f0       	breq	.+30     	; 0x19bc <nokia_lcd_set_pixel+0x36>
		*byte |= (1 << (y % 8));
    199e:	fc 01       	movw	r30, r24
    19a0:	e8 58       	subi	r30, 0x88	; 136
    19a2:	fd 4f       	sbci	r31, 0xFD	; 253
    19a4:	67 70       	andi	r22, 0x07	; 7
    19a6:	81 e0       	ldi	r24, 0x01	; 1
    19a8:	90 e0       	ldi	r25, 0x00	; 0
    19aa:	02 c0       	rjmp	.+4      	; 0x19b0 <nokia_lcd_set_pixel+0x2a>
    19ac:	88 0f       	add	r24, r24
    19ae:	99 1f       	adc	r25, r25
    19b0:	6a 95       	dec	r22
    19b2:	e2 f7       	brpl	.-8      	; 0x19ac <nokia_lcd_set_pixel+0x26>
    19b4:	90 81       	ld	r25, Z
    19b6:	89 2b       	or	r24, r25
    19b8:	80 83       	st	Z, r24
    19ba:	08 95       	ret
	else
		*byte &= ~(1 << (y %8 ));
    19bc:	fc 01       	movw	r30, r24
    19be:	e8 58       	subi	r30, 0x88	; 136
    19c0:	fd 4f       	sbci	r31, 0xFD	; 253
    19c2:	67 70       	andi	r22, 0x07	; 7
    19c4:	81 e0       	ldi	r24, 0x01	; 1
    19c6:	90 e0       	ldi	r25, 0x00	; 0
    19c8:	02 c0       	rjmp	.+4      	; 0x19ce <nokia_lcd_set_pixel+0x48>
    19ca:	88 0f       	add	r24, r24
    19cc:	99 1f       	adc	r25, r25
    19ce:	6a 95       	dec	r22
    19d0:	e2 f7       	brpl	.-8      	; 0x19ca <nokia_lcd_set_pixel+0x44>
    19d2:	80 95       	com	r24
    19d4:	90 81       	ld	r25, Z
    19d6:	89 23       	and	r24, r25
    19d8:	80 83       	st	Z, r24
    19da:	08 95       	ret

000019dc <nokia_lcd_write_char>:
}

void nokia_lcd_write_char(char code, uint8_t scale)
{
    19dc:	5f 92       	push	r5
    19de:	6f 92       	push	r6
    19e0:	7f 92       	push	r7
    19e2:	8f 92       	push	r8
    19e4:	9f 92       	push	r9
    19e6:	af 92       	push	r10
    19e8:	bf 92       	push	r11
    19ea:	cf 92       	push	r12
    19ec:	df 92       	push	r13
    19ee:	ef 92       	push	r14
    19f0:	ff 92       	push	r15
    19f2:	0f 93       	push	r16
    19f4:	1f 93       	push	r17
    19f6:	cf 93       	push	r28
    19f8:	df 93       	push	r29
    19fa:	56 2e       	mov	r5, r22
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
    19fc:	26 2f       	mov	r18, r22
    19fe:	30 e0       	ldi	r19, 0x00	; 0
    1a00:	49 01       	movw	r8, r18
    1a02:	88 0c       	add	r8, r8
    1a04:	99 1c       	adc	r9, r9
    1a06:	88 0c       	add	r8, r8
    1a08:	99 1c       	adc	r9, r9
    1a0a:	82 0e       	add	r8, r18
    1a0c:	93 1e       	adc	r9, r19
    1a0e:	18 14       	cp	r1, r8
    1a10:	19 04       	cpc	r1, r9
    1a12:	0c f0       	brlt	.+2      	; 0x1a16 <nokia_lcd_write_char+0x3a>
    1a14:	5d c0       	rjmp	.+186    	; 0x1ad0 <nokia_lcd_write_char+0xf4>
		for (y = 0; y < 7*scale; y++)
    1a16:	89 01       	movw	r16, r18
    1a18:	00 0f       	add	r16, r16
    1a1a:	11 1f       	adc	r17, r17
    1a1c:	00 0f       	add	r16, r16
    1a1e:	11 1f       	adc	r17, r17
    1a20:	00 0f       	add	r16, r16
    1a22:	11 1f       	adc	r17, r17
    1a24:	02 1b       	sub	r16, r18
    1a26:	13 0b       	sbc	r17, r19
    1a28:	61 2c       	mov	r6, r1
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
    1a2a:	a8 2e       	mov	r10, r24
    1a2c:	b1 2c       	mov	r11, r1
    1a2e:	c5 01       	movw	r24, r10
    1a30:	80 97       	sbiw	r24, 0x20	; 32
    1a32:	5c 01       	movw	r10, r24
    1a34:	aa 0c       	add	r10, r10
    1a36:	bb 1c       	adc	r11, r11
    1a38:	aa 0c       	add	r10, r10
    1a3a:	bb 1c       	adc	r11, r11
    1a3c:	a8 0e       	add	r10, r24
    1a3e:	b9 1e       	adc	r11, r25
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
    1a40:	0f 2e       	mov	r0, r31
    1a42:	f1 e7       	ldi	r31, 0x71	; 113
    1a44:	cf 2e       	mov	r12, r31
    1a46:	f4 e0       	ldi	r31, 0x04	; 4
    1a48:	df 2e       	mov	r13, r31
    1a4a:	f0 2d       	mov	r31, r0
    1a4c:	0f 2e       	mov	r0, r31
    1a4e:	f0 e7       	ldi	r31, 0x70	; 112
    1a50:	ef 2e       	mov	r14, r31
    1a52:	f4 e0       	ldi	r31, 0x04	; 4
    1a54:	ff 2e       	mov	r15, r31
    1a56:	f0 2d       	mov	r31, r0
    1a58:	2d c0       	rjmp	.+90     	; 0x1ab4 <nokia_lcd_write_char+0xd8>
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
    1a5a:	fe 01       	movw	r30, r28
    1a5c:	24 91       	lpm	r18, Z
    1a5e:	30 e0       	ldi	r19, 0x00	; 0
    1a60:	87 2d       	mov	r24, r7
    1a62:	65 2d       	mov	r22, r5
    1a64:	0e 94 07 10 	call	0x200e	; 0x200e <__udivmodqi4>
    1a68:	02 c0       	rjmp	.+4      	; 0x1a6e <nokia_lcd_write_char+0x92>
    1a6a:	35 95       	asr	r19
    1a6c:	27 95       	ror	r18
    1a6e:	8a 95       	dec	r24
    1a70:	e2 f7       	brpl	.-8      	; 0x1a6a <nokia_lcd_write_char+0x8e>
    1a72:	20 ff       	sbrs	r18, 0
    1a74:	0a c0       	rjmp	.+20     	; 0x1a8a <nokia_lcd_write_char+0xae>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
    1a76:	f6 01       	movw	r30, r12
    1a78:	60 81       	ld	r22, Z
    1a7a:	67 0d       	add	r22, r7
    1a7c:	f7 01       	movw	r30, r14
    1a7e:	80 81       	ld	r24, Z
    1a80:	41 e0       	ldi	r20, 0x01	; 1
    1a82:	86 0d       	add	r24, r6
    1a84:	0e 94 c3 0c 	call	0x1986	; 0x1986 <nokia_lcd_set_pixel>
    1a88:	09 c0       	rjmp	.+18     	; 0x1a9c <nokia_lcd_write_char+0xc0>
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
    1a8a:	f6 01       	movw	r30, r12
    1a8c:	60 81       	ld	r22, Z
    1a8e:	67 0d       	add	r22, r7
    1a90:	f7 01       	movw	r30, r14
    1a92:	80 81       	ld	r24, Z
    1a94:	40 e0       	ldi	r20, 0x00	; 0
    1a96:	86 0d       	add	r24, r6
    1a98:	0e 94 c3 0c 	call	0x1986	; 0x1986 <nokia_lcd_set_pixel>
void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
    1a9c:	73 94       	inc	r7
    1a9e:	87 2d       	mov	r24, r7
    1aa0:	90 e0       	ldi	r25, 0x00	; 0
    1aa2:	80 17       	cp	r24, r16
    1aa4:	91 07       	cpc	r25, r17
    1aa6:	cc f2       	brlt	.-78     	; 0x1a5a <nokia_lcd_write_char+0x7e>

void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
    1aa8:	63 94       	inc	r6
    1aaa:	86 2d       	mov	r24, r6
    1aac:	90 e0       	ldi	r25, 0x00	; 0
    1aae:	88 15       	cp	r24, r8
    1ab0:	99 05       	cpc	r25, r9
    1ab2:	74 f4       	brge	.+28     	; 0x1ad0 <nokia_lcd_write_char+0xf4>
		for (y = 0; y < 7*scale; y++)
    1ab4:	10 16       	cp	r1, r16
    1ab6:	11 06       	cpc	r1, r17
    1ab8:	bc f7       	brge	.-18     	; 0x1aa8 <nokia_lcd_write_char+0xcc>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
    1aba:	86 2d       	mov	r24, r6
    1abc:	65 2d       	mov	r22, r5
    1abe:	0e 94 07 10 	call	0x200e	; 0x200e <__udivmodqi4>
    1ac2:	e5 01       	movw	r28, r10
    1ac4:	c8 0f       	add	r28, r24
    1ac6:	d1 1d       	adc	r29, r1
    1ac8:	c8 59       	subi	r28, 0x98	; 152
    1aca:	df 4f       	sbci	r29, 0xFF	; 255
    1acc:	71 2c       	mov	r7, r1
    1ace:	c5 cf       	rjmp	.-118    	; 0x1a5a <nokia_lcd_write_char+0x7e>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
    1ad0:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <nokia_lcd+0x1f8>
    1ad4:	91 e0       	ldi	r25, 0x01	; 1
    1ad6:	98 0f       	add	r25, r24
    1ad8:	85 2d       	mov	r24, r5
    1ada:	88 0f       	add	r24, r24
    1adc:	88 0f       	add	r24, r24
    1ade:	85 0d       	add	r24, r5
    1ae0:	89 0f       	add	r24, r25
	if (nokia_lcd.cursor_x >= 84) {
    1ae2:	84 35       	cpi	r24, 0x54	; 84
    1ae4:	18 f4       	brcc	.+6      	; 0x1aec <nokia_lcd_write_char+0x110>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
    1ae6:	80 93 70 04 	sts	0x0470, r24	; 0x800470 <nokia_lcd+0x1f8>
    1aea:	0e c0       	rjmp	.+28     	; 0x1b08 <nokia_lcd_write_char+0x12c>
	if (nokia_lcd.cursor_x >= 84) {
		nokia_lcd.cursor_x = 0;
    1aec:	10 92 70 04 	sts	0x0470, r1	; 0x800470 <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y += 7*scale + 1;
    1af0:	e1 e7       	ldi	r30, 0x71	; 113
    1af2:	f4 e0       	ldi	r31, 0x04	; 4
    1af4:	80 81       	ld	r24, Z
    1af6:	91 e0       	ldi	r25, 0x01	; 1
    1af8:	98 0f       	add	r25, r24
    1afa:	85 2d       	mov	r24, r5
    1afc:	88 0f       	add	r24, r24
    1afe:	88 0f       	add	r24, r24
    1b00:	88 0f       	add	r24, r24
    1b02:	85 19       	sub	r24, r5
    1b04:	89 0f       	add	r24, r25
    1b06:	80 83       	st	Z, r24
	}
	if (nokia_lcd.cursor_y >= 48) {
    1b08:	80 91 71 04 	lds	r24, 0x0471	; 0x800471 <nokia_lcd+0x1f9>
    1b0c:	80 33       	cpi	r24, 0x30	; 48
    1b0e:	20 f0       	brcs	.+8      	; 0x1b18 <nokia_lcd_write_char+0x13c>
		nokia_lcd.cursor_x = 0;
    1b10:	10 92 70 04 	sts	0x0470, r1	; 0x800470 <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y = 0;
    1b14:	10 92 71 04 	sts	0x0471, r1	; 0x800471 <nokia_lcd+0x1f9>
	}
}
    1b18:	df 91       	pop	r29
    1b1a:	cf 91       	pop	r28
    1b1c:	1f 91       	pop	r17
    1b1e:	0f 91       	pop	r16
    1b20:	ff 90       	pop	r15
    1b22:	ef 90       	pop	r14
    1b24:	df 90       	pop	r13
    1b26:	cf 90       	pop	r12
    1b28:	bf 90       	pop	r11
    1b2a:	af 90       	pop	r10
    1b2c:	9f 90       	pop	r9
    1b2e:	8f 90       	pop	r8
    1b30:	7f 90       	pop	r7
    1b32:	6f 90       	pop	r6
    1b34:	5f 90       	pop	r5
    1b36:	08 95       	ret

00001b38 <nokia_lcd_write_string>:

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
    1b38:	1f 93       	push	r17
    1b3a:	cf 93       	push	r28
    1b3c:	df 93       	push	r29
    1b3e:	ec 01       	movw	r28, r24
	while(*str)
    1b40:	88 81       	ld	r24, Y
    1b42:	88 23       	and	r24, r24
    1b44:	41 f0       	breq	.+16     	; 0x1b56 <nokia_lcd_write_string+0x1e>
    1b46:	16 2f       	mov	r17, r22
    1b48:	21 96       	adiw	r28, 0x01	; 1
		nokia_lcd_write_char(*str++, scale);
    1b4a:	61 2f       	mov	r22, r17
    1b4c:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <nokia_lcd_write_char>
	}
}

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
	while(*str)
    1b50:	89 91       	ld	r24, Y+
    1b52:	81 11       	cpse	r24, r1
    1b54:	fa cf       	rjmp	.-12     	; 0x1b4a <nokia_lcd_write_string+0x12>
		nokia_lcd_write_char(*str++, scale);
}
    1b56:	df 91       	pop	r29
    1b58:	cf 91       	pop	r28
    1b5a:	1f 91       	pop	r17
    1b5c:	08 95       	ret

00001b5e <nokia_lcd_set_cursor>:

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
    1b5e:	80 93 70 04 	sts	0x0470, r24	; 0x800470 <nokia_lcd+0x1f8>
	nokia_lcd.cursor_y = y;
    1b62:	60 93 71 04 	sts	0x0471, r22	; 0x800471 <nokia_lcd+0x1f9>
    1b66:	08 95       	ret

00001b68 <nokia_lcd_render>:
}

void nokia_lcd_render(void)
{
    1b68:	0f 93       	push	r16
    1b6a:	1f 93       	push	r17
    1b6c:	cf 93       	push	r28
    1b6e:	df 93       	push	r29
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
    1b70:	80 e8       	ldi	r24, 0x80	; 128
    1b72:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <write_cmd>
	write_cmd(0x40);
    1b76:	80 e4       	ldi	r24, 0x40	; 64
    1b78:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <write_cmd>
    1b7c:	c8 e7       	ldi	r28, 0x78	; 120
    1b7e:	d2 e0       	ldi	r29, 0x02	; 2
    1b80:	00 e7       	ldi	r16, 0x70	; 112
    1b82:	14 e0       	ldi	r17, 0x04	; 4
	write(cmd, 0);
}

static void write_data(uint8_t data)
{
	write(data, 1);
    1b84:	61 e0       	ldi	r22, 0x01	; 1
    1b86:	89 91       	ld	r24, Y+
    1b88:	0e 94 4d 0c 	call	0x189a	; 0x189a <write>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
    1b8c:	c0 17       	cp	r28, r16
    1b8e:	d1 07       	cpc	r29, r17
    1b90:	c9 f7       	brne	.-14     	; 0x1b84 <nokia_lcd_render+0x1c>
		write_data(nokia_lcd.screen[i]);
}
    1b92:	df 91       	pop	r29
    1b94:	cf 91       	pop	r28
    1b96:	1f 91       	pop	r17
    1b98:	0f 91       	pop	r16
    1b9a:	08 95       	ret

00001b9c <__subsf3>:
    1b9c:	50 58       	subi	r21, 0x80	; 128

00001b9e <__addsf3>:
    1b9e:	bb 27       	eor	r27, r27
    1ba0:	aa 27       	eor	r26, r26
    1ba2:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__addsf3x>
    1ba6:	0c 94 60 0f 	jmp	0x1ec0	; 0x1ec0 <__fp_round>
    1baa:	0e 94 52 0f 	call	0x1ea4	; 0x1ea4 <__fp_pscA>
    1bae:	38 f0       	brcs	.+14     	; 0x1bbe <__addsf3+0x20>
    1bb0:	0e 94 59 0f 	call	0x1eb2	; 0x1eb2 <__fp_pscB>
    1bb4:	20 f0       	brcs	.+8      	; 0x1bbe <__addsf3+0x20>
    1bb6:	39 f4       	brne	.+14     	; 0x1bc6 <__addsf3+0x28>
    1bb8:	9f 3f       	cpi	r25, 0xFF	; 255
    1bba:	19 f4       	brne	.+6      	; 0x1bc2 <__addsf3+0x24>
    1bbc:	26 f4       	brtc	.+8      	; 0x1bc6 <__addsf3+0x28>
    1bbe:	0c 94 4f 0f 	jmp	0x1e9e	; 0x1e9e <__fp_nan>
    1bc2:	0e f4       	brtc	.+2      	; 0x1bc6 <__addsf3+0x28>
    1bc4:	e0 95       	com	r30
    1bc6:	e7 fb       	bst	r30, 7
    1bc8:	0c 94 49 0f 	jmp	0x1e92	; 0x1e92 <__fp_inf>

00001bcc <__addsf3x>:
    1bcc:	e9 2f       	mov	r30, r25
    1bce:	0e 94 71 0f 	call	0x1ee2	; 0x1ee2 <__fp_split3>
    1bd2:	58 f3       	brcs	.-42     	; 0x1baa <__addsf3+0xc>
    1bd4:	ba 17       	cp	r27, r26
    1bd6:	62 07       	cpc	r22, r18
    1bd8:	73 07       	cpc	r23, r19
    1bda:	84 07       	cpc	r24, r20
    1bdc:	95 07       	cpc	r25, r21
    1bde:	20 f0       	brcs	.+8      	; 0x1be8 <__addsf3x+0x1c>
    1be0:	79 f4       	brne	.+30     	; 0x1c00 <__addsf3x+0x34>
    1be2:	a6 f5       	brtc	.+104    	; 0x1c4c <__addsf3x+0x80>
    1be4:	0c 94 93 0f 	jmp	0x1f26	; 0x1f26 <__fp_zero>
    1be8:	0e f4       	brtc	.+2      	; 0x1bec <__addsf3x+0x20>
    1bea:	e0 95       	com	r30
    1bec:	0b 2e       	mov	r0, r27
    1bee:	ba 2f       	mov	r27, r26
    1bf0:	a0 2d       	mov	r26, r0
    1bf2:	0b 01       	movw	r0, r22
    1bf4:	b9 01       	movw	r22, r18
    1bf6:	90 01       	movw	r18, r0
    1bf8:	0c 01       	movw	r0, r24
    1bfa:	ca 01       	movw	r24, r20
    1bfc:	a0 01       	movw	r20, r0
    1bfe:	11 24       	eor	r1, r1
    1c00:	ff 27       	eor	r31, r31
    1c02:	59 1b       	sub	r21, r25
    1c04:	99 f0       	breq	.+38     	; 0x1c2c <__addsf3x+0x60>
    1c06:	59 3f       	cpi	r21, 0xF9	; 249
    1c08:	50 f4       	brcc	.+20     	; 0x1c1e <__addsf3x+0x52>
    1c0a:	50 3e       	cpi	r21, 0xE0	; 224
    1c0c:	68 f1       	brcs	.+90     	; 0x1c68 <__addsf3x+0x9c>
    1c0e:	1a 16       	cp	r1, r26
    1c10:	f0 40       	sbci	r31, 0x00	; 0
    1c12:	a2 2f       	mov	r26, r18
    1c14:	23 2f       	mov	r18, r19
    1c16:	34 2f       	mov	r19, r20
    1c18:	44 27       	eor	r20, r20
    1c1a:	58 5f       	subi	r21, 0xF8	; 248
    1c1c:	f3 cf       	rjmp	.-26     	; 0x1c04 <__addsf3x+0x38>
    1c1e:	46 95       	lsr	r20
    1c20:	37 95       	ror	r19
    1c22:	27 95       	ror	r18
    1c24:	a7 95       	ror	r26
    1c26:	f0 40       	sbci	r31, 0x00	; 0
    1c28:	53 95       	inc	r21
    1c2a:	c9 f7       	brne	.-14     	; 0x1c1e <__addsf3x+0x52>
    1c2c:	7e f4       	brtc	.+30     	; 0x1c4c <__addsf3x+0x80>
    1c2e:	1f 16       	cp	r1, r31
    1c30:	ba 0b       	sbc	r27, r26
    1c32:	62 0b       	sbc	r22, r18
    1c34:	73 0b       	sbc	r23, r19
    1c36:	84 0b       	sbc	r24, r20
    1c38:	ba f0       	brmi	.+46     	; 0x1c68 <__addsf3x+0x9c>
    1c3a:	91 50       	subi	r25, 0x01	; 1
    1c3c:	a1 f0       	breq	.+40     	; 0x1c66 <__addsf3x+0x9a>
    1c3e:	ff 0f       	add	r31, r31
    1c40:	bb 1f       	adc	r27, r27
    1c42:	66 1f       	adc	r22, r22
    1c44:	77 1f       	adc	r23, r23
    1c46:	88 1f       	adc	r24, r24
    1c48:	c2 f7       	brpl	.-16     	; 0x1c3a <__addsf3x+0x6e>
    1c4a:	0e c0       	rjmp	.+28     	; 0x1c68 <__addsf3x+0x9c>
    1c4c:	ba 0f       	add	r27, r26
    1c4e:	62 1f       	adc	r22, r18
    1c50:	73 1f       	adc	r23, r19
    1c52:	84 1f       	adc	r24, r20
    1c54:	48 f4       	brcc	.+18     	; 0x1c68 <__addsf3x+0x9c>
    1c56:	87 95       	ror	r24
    1c58:	77 95       	ror	r23
    1c5a:	67 95       	ror	r22
    1c5c:	b7 95       	ror	r27
    1c5e:	f7 95       	ror	r31
    1c60:	9e 3f       	cpi	r25, 0xFE	; 254
    1c62:	08 f0       	brcs	.+2      	; 0x1c66 <__addsf3x+0x9a>
    1c64:	b0 cf       	rjmp	.-160    	; 0x1bc6 <__addsf3+0x28>
    1c66:	93 95       	inc	r25
    1c68:	88 0f       	add	r24, r24
    1c6a:	08 f0       	brcs	.+2      	; 0x1c6e <__addsf3x+0xa2>
    1c6c:	99 27       	eor	r25, r25
    1c6e:	ee 0f       	add	r30, r30
    1c70:	97 95       	ror	r25
    1c72:	87 95       	ror	r24
    1c74:	08 95       	ret

00001c76 <__cmpsf2>:
    1c76:	0e 94 25 0f 	call	0x1e4a	; 0x1e4a <__fp_cmp>
    1c7a:	08 f4       	brcc	.+2      	; 0x1c7e <__cmpsf2+0x8>
    1c7c:	81 e0       	ldi	r24, 0x01	; 1
    1c7e:	08 95       	ret

00001c80 <__divsf3>:
    1c80:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <__divsf3x>
    1c84:	0c 94 60 0f 	jmp	0x1ec0	; 0x1ec0 <__fp_round>
    1c88:	0e 94 59 0f 	call	0x1eb2	; 0x1eb2 <__fp_pscB>
    1c8c:	58 f0       	brcs	.+22     	; 0x1ca4 <__divsf3+0x24>
    1c8e:	0e 94 52 0f 	call	0x1ea4	; 0x1ea4 <__fp_pscA>
    1c92:	40 f0       	brcs	.+16     	; 0x1ca4 <__divsf3+0x24>
    1c94:	29 f4       	brne	.+10     	; 0x1ca0 <__divsf3+0x20>
    1c96:	5f 3f       	cpi	r21, 0xFF	; 255
    1c98:	29 f0       	breq	.+10     	; 0x1ca4 <__divsf3+0x24>
    1c9a:	0c 94 49 0f 	jmp	0x1e92	; 0x1e92 <__fp_inf>
    1c9e:	51 11       	cpse	r21, r1
    1ca0:	0c 94 94 0f 	jmp	0x1f28	; 0x1f28 <__fp_szero>
    1ca4:	0c 94 4f 0f 	jmp	0x1e9e	; 0x1e9e <__fp_nan>

00001ca8 <__divsf3x>:
    1ca8:	0e 94 71 0f 	call	0x1ee2	; 0x1ee2 <__fp_split3>
    1cac:	68 f3       	brcs	.-38     	; 0x1c88 <__divsf3+0x8>

00001cae <__divsf3_pse>:
    1cae:	99 23       	and	r25, r25
    1cb0:	b1 f3       	breq	.-20     	; 0x1c9e <__divsf3+0x1e>
    1cb2:	55 23       	and	r21, r21
    1cb4:	91 f3       	breq	.-28     	; 0x1c9a <__divsf3+0x1a>
    1cb6:	95 1b       	sub	r25, r21
    1cb8:	55 0b       	sbc	r21, r21
    1cba:	bb 27       	eor	r27, r27
    1cbc:	aa 27       	eor	r26, r26
    1cbe:	62 17       	cp	r22, r18
    1cc0:	73 07       	cpc	r23, r19
    1cc2:	84 07       	cpc	r24, r20
    1cc4:	38 f0       	brcs	.+14     	; 0x1cd4 <__divsf3_pse+0x26>
    1cc6:	9f 5f       	subi	r25, 0xFF	; 255
    1cc8:	5f 4f       	sbci	r21, 0xFF	; 255
    1cca:	22 0f       	add	r18, r18
    1ccc:	33 1f       	adc	r19, r19
    1cce:	44 1f       	adc	r20, r20
    1cd0:	aa 1f       	adc	r26, r26
    1cd2:	a9 f3       	breq	.-22     	; 0x1cbe <__divsf3_pse+0x10>
    1cd4:	35 d0       	rcall	.+106    	; 0x1d40 <__divsf3_pse+0x92>
    1cd6:	0e 2e       	mov	r0, r30
    1cd8:	3a f0       	brmi	.+14     	; 0x1ce8 <__divsf3_pse+0x3a>
    1cda:	e0 e8       	ldi	r30, 0x80	; 128
    1cdc:	32 d0       	rcall	.+100    	; 0x1d42 <__divsf3_pse+0x94>
    1cde:	91 50       	subi	r25, 0x01	; 1
    1ce0:	50 40       	sbci	r21, 0x00	; 0
    1ce2:	e6 95       	lsr	r30
    1ce4:	00 1c       	adc	r0, r0
    1ce6:	ca f7       	brpl	.-14     	; 0x1cda <__divsf3_pse+0x2c>
    1ce8:	2b d0       	rcall	.+86     	; 0x1d40 <__divsf3_pse+0x92>
    1cea:	fe 2f       	mov	r31, r30
    1cec:	29 d0       	rcall	.+82     	; 0x1d40 <__divsf3_pse+0x92>
    1cee:	66 0f       	add	r22, r22
    1cf0:	77 1f       	adc	r23, r23
    1cf2:	88 1f       	adc	r24, r24
    1cf4:	bb 1f       	adc	r27, r27
    1cf6:	26 17       	cp	r18, r22
    1cf8:	37 07       	cpc	r19, r23
    1cfa:	48 07       	cpc	r20, r24
    1cfc:	ab 07       	cpc	r26, r27
    1cfe:	b0 e8       	ldi	r27, 0x80	; 128
    1d00:	09 f0       	breq	.+2      	; 0x1d04 <__divsf3_pse+0x56>
    1d02:	bb 0b       	sbc	r27, r27
    1d04:	80 2d       	mov	r24, r0
    1d06:	bf 01       	movw	r22, r30
    1d08:	ff 27       	eor	r31, r31
    1d0a:	93 58       	subi	r25, 0x83	; 131
    1d0c:	5f 4f       	sbci	r21, 0xFF	; 255
    1d0e:	3a f0       	brmi	.+14     	; 0x1d1e <__divsf3_pse+0x70>
    1d10:	9e 3f       	cpi	r25, 0xFE	; 254
    1d12:	51 05       	cpc	r21, r1
    1d14:	78 f0       	brcs	.+30     	; 0x1d34 <__divsf3_pse+0x86>
    1d16:	0c 94 49 0f 	jmp	0x1e92	; 0x1e92 <__fp_inf>
    1d1a:	0c 94 94 0f 	jmp	0x1f28	; 0x1f28 <__fp_szero>
    1d1e:	5f 3f       	cpi	r21, 0xFF	; 255
    1d20:	e4 f3       	brlt	.-8      	; 0x1d1a <__divsf3_pse+0x6c>
    1d22:	98 3e       	cpi	r25, 0xE8	; 232
    1d24:	d4 f3       	brlt	.-12     	; 0x1d1a <__divsf3_pse+0x6c>
    1d26:	86 95       	lsr	r24
    1d28:	77 95       	ror	r23
    1d2a:	67 95       	ror	r22
    1d2c:	b7 95       	ror	r27
    1d2e:	f7 95       	ror	r31
    1d30:	9f 5f       	subi	r25, 0xFF	; 255
    1d32:	c9 f7       	brne	.-14     	; 0x1d26 <__divsf3_pse+0x78>
    1d34:	88 0f       	add	r24, r24
    1d36:	91 1d       	adc	r25, r1
    1d38:	96 95       	lsr	r25
    1d3a:	87 95       	ror	r24
    1d3c:	97 f9       	bld	r25, 7
    1d3e:	08 95       	ret
    1d40:	e1 e0       	ldi	r30, 0x01	; 1
    1d42:	66 0f       	add	r22, r22
    1d44:	77 1f       	adc	r23, r23
    1d46:	88 1f       	adc	r24, r24
    1d48:	bb 1f       	adc	r27, r27
    1d4a:	62 17       	cp	r22, r18
    1d4c:	73 07       	cpc	r23, r19
    1d4e:	84 07       	cpc	r24, r20
    1d50:	ba 07       	cpc	r27, r26
    1d52:	20 f0       	brcs	.+8      	; 0x1d5c <__divsf3_pse+0xae>
    1d54:	62 1b       	sub	r22, r18
    1d56:	73 0b       	sbc	r23, r19
    1d58:	84 0b       	sbc	r24, r20
    1d5a:	ba 0b       	sbc	r27, r26
    1d5c:	ee 1f       	adc	r30, r30
    1d5e:	88 f7       	brcc	.-30     	; 0x1d42 <__divsf3_pse+0x94>
    1d60:	e0 95       	com	r30
    1d62:	08 95       	ret

00001d64 <__fixsfsi>:
    1d64:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <__fixunssfsi>
    1d68:	68 94       	set
    1d6a:	b1 11       	cpse	r27, r1
    1d6c:	0c 94 94 0f 	jmp	0x1f28	; 0x1f28 <__fp_szero>
    1d70:	08 95       	ret

00001d72 <__fixunssfsi>:
    1d72:	0e 94 79 0f 	call	0x1ef2	; 0x1ef2 <__fp_splitA>
    1d76:	88 f0       	brcs	.+34     	; 0x1d9a <__fixunssfsi+0x28>
    1d78:	9f 57       	subi	r25, 0x7F	; 127
    1d7a:	98 f0       	brcs	.+38     	; 0x1da2 <__fixunssfsi+0x30>
    1d7c:	b9 2f       	mov	r27, r25
    1d7e:	99 27       	eor	r25, r25
    1d80:	b7 51       	subi	r27, 0x17	; 23
    1d82:	b0 f0       	brcs	.+44     	; 0x1db0 <__fixunssfsi+0x3e>
    1d84:	e1 f0       	breq	.+56     	; 0x1dbe <__fixunssfsi+0x4c>
    1d86:	66 0f       	add	r22, r22
    1d88:	77 1f       	adc	r23, r23
    1d8a:	88 1f       	adc	r24, r24
    1d8c:	99 1f       	adc	r25, r25
    1d8e:	1a f0       	brmi	.+6      	; 0x1d96 <__fixunssfsi+0x24>
    1d90:	ba 95       	dec	r27
    1d92:	c9 f7       	brne	.-14     	; 0x1d86 <__fixunssfsi+0x14>
    1d94:	14 c0       	rjmp	.+40     	; 0x1dbe <__fixunssfsi+0x4c>
    1d96:	b1 30       	cpi	r27, 0x01	; 1
    1d98:	91 f0       	breq	.+36     	; 0x1dbe <__fixunssfsi+0x4c>
    1d9a:	0e 94 93 0f 	call	0x1f26	; 0x1f26 <__fp_zero>
    1d9e:	b1 e0       	ldi	r27, 0x01	; 1
    1da0:	08 95       	ret
    1da2:	0c 94 93 0f 	jmp	0x1f26	; 0x1f26 <__fp_zero>
    1da6:	67 2f       	mov	r22, r23
    1da8:	78 2f       	mov	r23, r24
    1daa:	88 27       	eor	r24, r24
    1dac:	b8 5f       	subi	r27, 0xF8	; 248
    1dae:	39 f0       	breq	.+14     	; 0x1dbe <__fixunssfsi+0x4c>
    1db0:	b9 3f       	cpi	r27, 0xF9	; 249
    1db2:	cc f3       	brlt	.-14     	; 0x1da6 <__fixunssfsi+0x34>
    1db4:	86 95       	lsr	r24
    1db6:	77 95       	ror	r23
    1db8:	67 95       	ror	r22
    1dba:	b3 95       	inc	r27
    1dbc:	d9 f7       	brne	.-10     	; 0x1db4 <__fixunssfsi+0x42>
    1dbe:	3e f4       	brtc	.+14     	; 0x1dce <__fixunssfsi+0x5c>
    1dc0:	90 95       	com	r25
    1dc2:	80 95       	com	r24
    1dc4:	70 95       	com	r23
    1dc6:	61 95       	neg	r22
    1dc8:	7f 4f       	sbci	r23, 0xFF	; 255
    1dca:	8f 4f       	sbci	r24, 0xFF	; 255
    1dcc:	9f 4f       	sbci	r25, 0xFF	; 255
    1dce:	08 95       	ret

00001dd0 <__floatunsisf>:
    1dd0:	e8 94       	clt
    1dd2:	09 c0       	rjmp	.+18     	; 0x1de6 <__floatsisf+0x12>

00001dd4 <__floatsisf>:
    1dd4:	97 fb       	bst	r25, 7
    1dd6:	3e f4       	brtc	.+14     	; 0x1de6 <__floatsisf+0x12>
    1dd8:	90 95       	com	r25
    1dda:	80 95       	com	r24
    1ddc:	70 95       	com	r23
    1dde:	61 95       	neg	r22
    1de0:	7f 4f       	sbci	r23, 0xFF	; 255
    1de2:	8f 4f       	sbci	r24, 0xFF	; 255
    1de4:	9f 4f       	sbci	r25, 0xFF	; 255
    1de6:	99 23       	and	r25, r25
    1de8:	a9 f0       	breq	.+42     	; 0x1e14 <__floatsisf+0x40>
    1dea:	f9 2f       	mov	r31, r25
    1dec:	96 e9       	ldi	r25, 0x96	; 150
    1dee:	bb 27       	eor	r27, r27
    1df0:	93 95       	inc	r25
    1df2:	f6 95       	lsr	r31
    1df4:	87 95       	ror	r24
    1df6:	77 95       	ror	r23
    1df8:	67 95       	ror	r22
    1dfa:	b7 95       	ror	r27
    1dfc:	f1 11       	cpse	r31, r1
    1dfe:	f8 cf       	rjmp	.-16     	; 0x1df0 <__floatsisf+0x1c>
    1e00:	fa f4       	brpl	.+62     	; 0x1e40 <__floatsisf+0x6c>
    1e02:	bb 0f       	add	r27, r27
    1e04:	11 f4       	brne	.+4      	; 0x1e0a <__floatsisf+0x36>
    1e06:	60 ff       	sbrs	r22, 0
    1e08:	1b c0       	rjmp	.+54     	; 0x1e40 <__floatsisf+0x6c>
    1e0a:	6f 5f       	subi	r22, 0xFF	; 255
    1e0c:	7f 4f       	sbci	r23, 0xFF	; 255
    1e0e:	8f 4f       	sbci	r24, 0xFF	; 255
    1e10:	9f 4f       	sbci	r25, 0xFF	; 255
    1e12:	16 c0       	rjmp	.+44     	; 0x1e40 <__floatsisf+0x6c>
    1e14:	88 23       	and	r24, r24
    1e16:	11 f0       	breq	.+4      	; 0x1e1c <__floatsisf+0x48>
    1e18:	96 e9       	ldi	r25, 0x96	; 150
    1e1a:	11 c0       	rjmp	.+34     	; 0x1e3e <__floatsisf+0x6a>
    1e1c:	77 23       	and	r23, r23
    1e1e:	21 f0       	breq	.+8      	; 0x1e28 <__floatsisf+0x54>
    1e20:	9e e8       	ldi	r25, 0x8E	; 142
    1e22:	87 2f       	mov	r24, r23
    1e24:	76 2f       	mov	r23, r22
    1e26:	05 c0       	rjmp	.+10     	; 0x1e32 <__floatsisf+0x5e>
    1e28:	66 23       	and	r22, r22
    1e2a:	71 f0       	breq	.+28     	; 0x1e48 <__floatsisf+0x74>
    1e2c:	96 e8       	ldi	r25, 0x86	; 134
    1e2e:	86 2f       	mov	r24, r22
    1e30:	70 e0       	ldi	r23, 0x00	; 0
    1e32:	60 e0       	ldi	r22, 0x00	; 0
    1e34:	2a f0       	brmi	.+10     	; 0x1e40 <__floatsisf+0x6c>
    1e36:	9a 95       	dec	r25
    1e38:	66 0f       	add	r22, r22
    1e3a:	77 1f       	adc	r23, r23
    1e3c:	88 1f       	adc	r24, r24
    1e3e:	da f7       	brpl	.-10     	; 0x1e36 <__floatsisf+0x62>
    1e40:	88 0f       	add	r24, r24
    1e42:	96 95       	lsr	r25
    1e44:	87 95       	ror	r24
    1e46:	97 f9       	bld	r25, 7
    1e48:	08 95       	ret

00001e4a <__fp_cmp>:
    1e4a:	99 0f       	add	r25, r25
    1e4c:	00 08       	sbc	r0, r0
    1e4e:	55 0f       	add	r21, r21
    1e50:	aa 0b       	sbc	r26, r26
    1e52:	e0 e8       	ldi	r30, 0x80	; 128
    1e54:	fe ef       	ldi	r31, 0xFE	; 254
    1e56:	16 16       	cp	r1, r22
    1e58:	17 06       	cpc	r1, r23
    1e5a:	e8 07       	cpc	r30, r24
    1e5c:	f9 07       	cpc	r31, r25
    1e5e:	c0 f0       	brcs	.+48     	; 0x1e90 <__fp_cmp+0x46>
    1e60:	12 16       	cp	r1, r18
    1e62:	13 06       	cpc	r1, r19
    1e64:	e4 07       	cpc	r30, r20
    1e66:	f5 07       	cpc	r31, r21
    1e68:	98 f0       	brcs	.+38     	; 0x1e90 <__fp_cmp+0x46>
    1e6a:	62 1b       	sub	r22, r18
    1e6c:	73 0b       	sbc	r23, r19
    1e6e:	84 0b       	sbc	r24, r20
    1e70:	95 0b       	sbc	r25, r21
    1e72:	39 f4       	brne	.+14     	; 0x1e82 <__fp_cmp+0x38>
    1e74:	0a 26       	eor	r0, r26
    1e76:	61 f0       	breq	.+24     	; 0x1e90 <__fp_cmp+0x46>
    1e78:	23 2b       	or	r18, r19
    1e7a:	24 2b       	or	r18, r20
    1e7c:	25 2b       	or	r18, r21
    1e7e:	21 f4       	brne	.+8      	; 0x1e88 <__fp_cmp+0x3e>
    1e80:	08 95       	ret
    1e82:	0a 26       	eor	r0, r26
    1e84:	09 f4       	brne	.+2      	; 0x1e88 <__fp_cmp+0x3e>
    1e86:	a1 40       	sbci	r26, 0x01	; 1
    1e88:	a6 95       	lsr	r26
    1e8a:	8f ef       	ldi	r24, 0xFF	; 255
    1e8c:	81 1d       	adc	r24, r1
    1e8e:	81 1d       	adc	r24, r1
    1e90:	08 95       	ret

00001e92 <__fp_inf>:
    1e92:	97 f9       	bld	r25, 7
    1e94:	9f 67       	ori	r25, 0x7F	; 127
    1e96:	80 e8       	ldi	r24, 0x80	; 128
    1e98:	70 e0       	ldi	r23, 0x00	; 0
    1e9a:	60 e0       	ldi	r22, 0x00	; 0
    1e9c:	08 95       	ret

00001e9e <__fp_nan>:
    1e9e:	9f ef       	ldi	r25, 0xFF	; 255
    1ea0:	80 ec       	ldi	r24, 0xC0	; 192
    1ea2:	08 95       	ret

00001ea4 <__fp_pscA>:
    1ea4:	00 24       	eor	r0, r0
    1ea6:	0a 94       	dec	r0
    1ea8:	16 16       	cp	r1, r22
    1eaa:	17 06       	cpc	r1, r23
    1eac:	18 06       	cpc	r1, r24
    1eae:	09 06       	cpc	r0, r25
    1eb0:	08 95       	ret

00001eb2 <__fp_pscB>:
    1eb2:	00 24       	eor	r0, r0
    1eb4:	0a 94       	dec	r0
    1eb6:	12 16       	cp	r1, r18
    1eb8:	13 06       	cpc	r1, r19
    1eba:	14 06       	cpc	r1, r20
    1ebc:	05 06       	cpc	r0, r21
    1ebe:	08 95       	ret

00001ec0 <__fp_round>:
    1ec0:	09 2e       	mov	r0, r25
    1ec2:	03 94       	inc	r0
    1ec4:	00 0c       	add	r0, r0
    1ec6:	11 f4       	brne	.+4      	; 0x1ecc <__fp_round+0xc>
    1ec8:	88 23       	and	r24, r24
    1eca:	52 f0       	brmi	.+20     	; 0x1ee0 <__fp_round+0x20>
    1ecc:	bb 0f       	add	r27, r27
    1ece:	40 f4       	brcc	.+16     	; 0x1ee0 <__fp_round+0x20>
    1ed0:	bf 2b       	or	r27, r31
    1ed2:	11 f4       	brne	.+4      	; 0x1ed8 <__fp_round+0x18>
    1ed4:	60 ff       	sbrs	r22, 0
    1ed6:	04 c0       	rjmp	.+8      	; 0x1ee0 <__fp_round+0x20>
    1ed8:	6f 5f       	subi	r22, 0xFF	; 255
    1eda:	7f 4f       	sbci	r23, 0xFF	; 255
    1edc:	8f 4f       	sbci	r24, 0xFF	; 255
    1ede:	9f 4f       	sbci	r25, 0xFF	; 255
    1ee0:	08 95       	ret

00001ee2 <__fp_split3>:
    1ee2:	57 fd       	sbrc	r21, 7
    1ee4:	90 58       	subi	r25, 0x80	; 128
    1ee6:	44 0f       	add	r20, r20
    1ee8:	55 1f       	adc	r21, r21
    1eea:	59 f0       	breq	.+22     	; 0x1f02 <__fp_splitA+0x10>
    1eec:	5f 3f       	cpi	r21, 0xFF	; 255
    1eee:	71 f0       	breq	.+28     	; 0x1f0c <__fp_splitA+0x1a>
    1ef0:	47 95       	ror	r20

00001ef2 <__fp_splitA>:
    1ef2:	88 0f       	add	r24, r24
    1ef4:	97 fb       	bst	r25, 7
    1ef6:	99 1f       	adc	r25, r25
    1ef8:	61 f0       	breq	.+24     	; 0x1f12 <__fp_splitA+0x20>
    1efa:	9f 3f       	cpi	r25, 0xFF	; 255
    1efc:	79 f0       	breq	.+30     	; 0x1f1c <__fp_splitA+0x2a>
    1efe:	87 95       	ror	r24
    1f00:	08 95       	ret
    1f02:	12 16       	cp	r1, r18
    1f04:	13 06       	cpc	r1, r19
    1f06:	14 06       	cpc	r1, r20
    1f08:	55 1f       	adc	r21, r21
    1f0a:	f2 cf       	rjmp	.-28     	; 0x1ef0 <__fp_split3+0xe>
    1f0c:	46 95       	lsr	r20
    1f0e:	f1 df       	rcall	.-30     	; 0x1ef2 <__fp_splitA>
    1f10:	08 c0       	rjmp	.+16     	; 0x1f22 <__fp_splitA+0x30>
    1f12:	16 16       	cp	r1, r22
    1f14:	17 06       	cpc	r1, r23
    1f16:	18 06       	cpc	r1, r24
    1f18:	99 1f       	adc	r25, r25
    1f1a:	f1 cf       	rjmp	.-30     	; 0x1efe <__fp_splitA+0xc>
    1f1c:	86 95       	lsr	r24
    1f1e:	71 05       	cpc	r23, r1
    1f20:	61 05       	cpc	r22, r1
    1f22:	08 94       	sec
    1f24:	08 95       	ret

00001f26 <__fp_zero>:
    1f26:	e8 94       	clt

00001f28 <__fp_szero>:
    1f28:	bb 27       	eor	r27, r27
    1f2a:	66 27       	eor	r22, r22
    1f2c:	77 27       	eor	r23, r23
    1f2e:	cb 01       	movw	r24, r22
    1f30:	97 f9       	bld	r25, 7
    1f32:	08 95       	ret

00001f34 <__mulsf3>:
    1f34:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <__mulsf3x>
    1f38:	0c 94 60 0f 	jmp	0x1ec0	; 0x1ec0 <__fp_round>
    1f3c:	0e 94 52 0f 	call	0x1ea4	; 0x1ea4 <__fp_pscA>
    1f40:	38 f0       	brcs	.+14     	; 0x1f50 <__mulsf3+0x1c>
    1f42:	0e 94 59 0f 	call	0x1eb2	; 0x1eb2 <__fp_pscB>
    1f46:	20 f0       	brcs	.+8      	; 0x1f50 <__mulsf3+0x1c>
    1f48:	95 23       	and	r25, r21
    1f4a:	11 f0       	breq	.+4      	; 0x1f50 <__mulsf3+0x1c>
    1f4c:	0c 94 49 0f 	jmp	0x1e92	; 0x1e92 <__fp_inf>
    1f50:	0c 94 4f 0f 	jmp	0x1e9e	; 0x1e9e <__fp_nan>
    1f54:	11 24       	eor	r1, r1
    1f56:	0c 94 94 0f 	jmp	0x1f28	; 0x1f28 <__fp_szero>

00001f5a <__mulsf3x>:
    1f5a:	0e 94 71 0f 	call	0x1ee2	; 0x1ee2 <__fp_split3>
    1f5e:	70 f3       	brcs	.-36     	; 0x1f3c <__mulsf3+0x8>

00001f60 <__mulsf3_pse>:
    1f60:	95 9f       	mul	r25, r21
    1f62:	c1 f3       	breq	.-16     	; 0x1f54 <__mulsf3+0x20>
    1f64:	95 0f       	add	r25, r21
    1f66:	50 e0       	ldi	r21, 0x00	; 0
    1f68:	55 1f       	adc	r21, r21
    1f6a:	62 9f       	mul	r22, r18
    1f6c:	f0 01       	movw	r30, r0
    1f6e:	72 9f       	mul	r23, r18
    1f70:	bb 27       	eor	r27, r27
    1f72:	f0 0d       	add	r31, r0
    1f74:	b1 1d       	adc	r27, r1
    1f76:	63 9f       	mul	r22, r19
    1f78:	aa 27       	eor	r26, r26
    1f7a:	f0 0d       	add	r31, r0
    1f7c:	b1 1d       	adc	r27, r1
    1f7e:	aa 1f       	adc	r26, r26
    1f80:	64 9f       	mul	r22, r20
    1f82:	66 27       	eor	r22, r22
    1f84:	b0 0d       	add	r27, r0
    1f86:	a1 1d       	adc	r26, r1
    1f88:	66 1f       	adc	r22, r22
    1f8a:	82 9f       	mul	r24, r18
    1f8c:	22 27       	eor	r18, r18
    1f8e:	b0 0d       	add	r27, r0
    1f90:	a1 1d       	adc	r26, r1
    1f92:	62 1f       	adc	r22, r18
    1f94:	73 9f       	mul	r23, r19
    1f96:	b0 0d       	add	r27, r0
    1f98:	a1 1d       	adc	r26, r1
    1f9a:	62 1f       	adc	r22, r18
    1f9c:	83 9f       	mul	r24, r19
    1f9e:	a0 0d       	add	r26, r0
    1fa0:	61 1d       	adc	r22, r1
    1fa2:	22 1f       	adc	r18, r18
    1fa4:	74 9f       	mul	r23, r20
    1fa6:	33 27       	eor	r19, r19
    1fa8:	a0 0d       	add	r26, r0
    1faa:	61 1d       	adc	r22, r1
    1fac:	23 1f       	adc	r18, r19
    1fae:	84 9f       	mul	r24, r20
    1fb0:	60 0d       	add	r22, r0
    1fb2:	21 1d       	adc	r18, r1
    1fb4:	82 2f       	mov	r24, r18
    1fb6:	76 2f       	mov	r23, r22
    1fb8:	6a 2f       	mov	r22, r26
    1fba:	11 24       	eor	r1, r1
    1fbc:	9f 57       	subi	r25, 0x7F	; 127
    1fbe:	50 40       	sbci	r21, 0x00	; 0
    1fc0:	9a f0       	brmi	.+38     	; 0x1fe8 <__mulsf3_pse+0x88>
    1fc2:	f1 f0       	breq	.+60     	; 0x2000 <__mulsf3_pse+0xa0>
    1fc4:	88 23       	and	r24, r24
    1fc6:	4a f0       	brmi	.+18     	; 0x1fda <__mulsf3_pse+0x7a>
    1fc8:	ee 0f       	add	r30, r30
    1fca:	ff 1f       	adc	r31, r31
    1fcc:	bb 1f       	adc	r27, r27
    1fce:	66 1f       	adc	r22, r22
    1fd0:	77 1f       	adc	r23, r23
    1fd2:	88 1f       	adc	r24, r24
    1fd4:	91 50       	subi	r25, 0x01	; 1
    1fd6:	50 40       	sbci	r21, 0x00	; 0
    1fd8:	a9 f7       	brne	.-22     	; 0x1fc4 <__mulsf3_pse+0x64>
    1fda:	9e 3f       	cpi	r25, 0xFE	; 254
    1fdc:	51 05       	cpc	r21, r1
    1fde:	80 f0       	brcs	.+32     	; 0x2000 <__mulsf3_pse+0xa0>
    1fe0:	0c 94 49 0f 	jmp	0x1e92	; 0x1e92 <__fp_inf>
    1fe4:	0c 94 94 0f 	jmp	0x1f28	; 0x1f28 <__fp_szero>
    1fe8:	5f 3f       	cpi	r21, 0xFF	; 255
    1fea:	e4 f3       	brlt	.-8      	; 0x1fe4 <__mulsf3_pse+0x84>
    1fec:	98 3e       	cpi	r25, 0xE8	; 232
    1fee:	d4 f3       	brlt	.-12     	; 0x1fe4 <__mulsf3_pse+0x84>
    1ff0:	86 95       	lsr	r24
    1ff2:	77 95       	ror	r23
    1ff4:	67 95       	ror	r22
    1ff6:	b7 95       	ror	r27
    1ff8:	f7 95       	ror	r31
    1ffa:	e7 95       	ror	r30
    1ffc:	9f 5f       	subi	r25, 0xFF	; 255
    1ffe:	c1 f7       	brne	.-16     	; 0x1ff0 <__mulsf3_pse+0x90>
    2000:	fe 2b       	or	r31, r30
    2002:	88 0f       	add	r24, r24
    2004:	91 1d       	adc	r25, r1
    2006:	96 95       	lsr	r25
    2008:	87 95       	ror	r24
    200a:	97 f9       	bld	r25, 7
    200c:	08 95       	ret

0000200e <__udivmodqi4>:
    200e:	99 1b       	sub	r25, r25
    2010:	79 e0       	ldi	r23, 0x09	; 9
    2012:	04 c0       	rjmp	.+8      	; 0x201c <__udivmodqi4_ep>

00002014 <__udivmodqi4_loop>:
    2014:	99 1f       	adc	r25, r25
    2016:	96 17       	cp	r25, r22
    2018:	08 f0       	brcs	.+2      	; 0x201c <__udivmodqi4_ep>
    201a:	96 1b       	sub	r25, r22

0000201c <__udivmodqi4_ep>:
    201c:	88 1f       	adc	r24, r24
    201e:	7a 95       	dec	r23
    2020:	c9 f7       	brne	.-14     	; 0x2014 <__udivmodqi4_loop>
    2022:	80 95       	com	r24
    2024:	08 95       	ret

00002026 <__umulhisi3>:
    2026:	a2 9f       	mul	r26, r18
    2028:	b0 01       	movw	r22, r0
    202a:	b3 9f       	mul	r27, r19
    202c:	c0 01       	movw	r24, r0
    202e:	a3 9f       	mul	r26, r19
    2030:	70 0d       	add	r23, r0
    2032:	81 1d       	adc	r24, r1
    2034:	11 24       	eor	r1, r1
    2036:	91 1d       	adc	r25, r1
    2038:	b2 9f       	mul	r27, r18
    203a:	70 0d       	add	r23, r0
    203c:	81 1d       	adc	r24, r1
    203e:	11 24       	eor	r1, r1
    2040:	91 1d       	adc	r25, r1
    2042:	08 95       	ret

00002044 <strcpy>:
    2044:	fb 01       	movw	r30, r22
    2046:	dc 01       	movw	r26, r24
    2048:	01 90       	ld	r0, Z+
    204a:	0d 92       	st	X+, r0
    204c:	00 20       	and	r0, r0
    204e:	e1 f7       	brne	.-8      	; 0x2048 <strcpy+0x4>
    2050:	08 95       	ret

00002052 <sprintf>:
    2052:	ae e0       	ldi	r26, 0x0E	; 14
    2054:	b0 e0       	ldi	r27, 0x00	; 0
    2056:	ef e2       	ldi	r30, 0x2F	; 47
    2058:	f0 e1       	ldi	r31, 0x10	; 16
    205a:	0c 94 ea 12 	jmp	0x25d4	; 0x25d4 <__prologue_saves__+0x1c>
    205e:	0d 89       	ldd	r16, Y+21	; 0x15
    2060:	1e 89       	ldd	r17, Y+22	; 0x16
    2062:	86 e0       	ldi	r24, 0x06	; 6
    2064:	8c 83       	std	Y+4, r24	; 0x04
    2066:	1a 83       	std	Y+2, r17	; 0x02
    2068:	09 83       	std	Y+1, r16	; 0x01
    206a:	8f ef       	ldi	r24, 0xFF	; 255
    206c:	9f e7       	ldi	r25, 0x7F	; 127
    206e:	9e 83       	std	Y+6, r25	; 0x06
    2070:	8d 83       	std	Y+5, r24	; 0x05
    2072:	ae 01       	movw	r20, r28
    2074:	47 5e       	subi	r20, 0xE7	; 231
    2076:	5f 4f       	sbci	r21, 0xFF	; 255
    2078:	6f 89       	ldd	r22, Y+23	; 0x17
    207a:	78 8d       	ldd	r23, Y+24	; 0x18
    207c:	ce 01       	movw	r24, r28
    207e:	01 96       	adiw	r24, 0x01	; 1
    2080:	0e 94 4b 10 	call	0x2096	; 0x2096 <vfprintf>
    2084:	ef 81       	ldd	r30, Y+7	; 0x07
    2086:	f8 85       	ldd	r31, Y+8	; 0x08
    2088:	e0 0f       	add	r30, r16
    208a:	f1 1f       	adc	r31, r17
    208c:	10 82       	st	Z, r1
    208e:	2e 96       	adiw	r28, 0x0e	; 14
    2090:	e4 e0       	ldi	r30, 0x04	; 4
    2092:	0c 94 06 13 	jmp	0x260c	; 0x260c <__epilogue_restores__+0x1c>

00002096 <vfprintf>:
    2096:	ab e0       	ldi	r26, 0x0B	; 11
    2098:	b0 e0       	ldi	r27, 0x00	; 0
    209a:	e1 e5       	ldi	r30, 0x51	; 81
    209c:	f0 e1       	ldi	r31, 0x10	; 16
    209e:	0c 94 dc 12 	jmp	0x25b8	; 0x25b8 <__prologue_saves__>
    20a2:	6c 01       	movw	r12, r24
    20a4:	7b 01       	movw	r14, r22
    20a6:	8a 01       	movw	r16, r20
    20a8:	fc 01       	movw	r30, r24
    20aa:	17 82       	std	Z+7, r1	; 0x07
    20ac:	16 82       	std	Z+6, r1	; 0x06
    20ae:	83 81       	ldd	r24, Z+3	; 0x03
    20b0:	81 ff       	sbrs	r24, 1
    20b2:	cc c1       	rjmp	.+920    	; 0x244c <vfprintf+0x3b6>
    20b4:	ce 01       	movw	r24, r28
    20b6:	01 96       	adiw	r24, 0x01	; 1
    20b8:	3c 01       	movw	r6, r24
    20ba:	f6 01       	movw	r30, r12
    20bc:	93 81       	ldd	r25, Z+3	; 0x03
    20be:	f7 01       	movw	r30, r14
    20c0:	93 fd       	sbrc	r25, 3
    20c2:	85 91       	lpm	r24, Z+
    20c4:	93 ff       	sbrs	r25, 3
    20c6:	81 91       	ld	r24, Z+
    20c8:	7f 01       	movw	r14, r30
    20ca:	88 23       	and	r24, r24
    20cc:	09 f4       	brne	.+2      	; 0x20d0 <vfprintf+0x3a>
    20ce:	ba c1       	rjmp	.+884    	; 0x2444 <vfprintf+0x3ae>
    20d0:	85 32       	cpi	r24, 0x25	; 37
    20d2:	39 f4       	brne	.+14     	; 0x20e2 <vfprintf+0x4c>
    20d4:	93 fd       	sbrc	r25, 3
    20d6:	85 91       	lpm	r24, Z+
    20d8:	93 ff       	sbrs	r25, 3
    20da:	81 91       	ld	r24, Z+
    20dc:	7f 01       	movw	r14, r30
    20de:	85 32       	cpi	r24, 0x25	; 37
    20e0:	29 f4       	brne	.+10     	; 0x20ec <vfprintf+0x56>
    20e2:	b6 01       	movw	r22, r12
    20e4:	90 e0       	ldi	r25, 0x00	; 0
    20e6:	0e 94 42 12 	call	0x2484	; 0x2484 <fputc>
    20ea:	e7 cf       	rjmp	.-50     	; 0x20ba <vfprintf+0x24>
    20ec:	91 2c       	mov	r9, r1
    20ee:	21 2c       	mov	r2, r1
    20f0:	31 2c       	mov	r3, r1
    20f2:	ff e1       	ldi	r31, 0x1F	; 31
    20f4:	f3 15       	cp	r31, r3
    20f6:	d8 f0       	brcs	.+54     	; 0x212e <vfprintf+0x98>
    20f8:	8b 32       	cpi	r24, 0x2B	; 43
    20fa:	79 f0       	breq	.+30     	; 0x211a <vfprintf+0x84>
    20fc:	38 f4       	brcc	.+14     	; 0x210c <vfprintf+0x76>
    20fe:	80 32       	cpi	r24, 0x20	; 32
    2100:	79 f0       	breq	.+30     	; 0x2120 <vfprintf+0x8a>
    2102:	83 32       	cpi	r24, 0x23	; 35
    2104:	a1 f4       	brne	.+40     	; 0x212e <vfprintf+0x98>
    2106:	23 2d       	mov	r18, r3
    2108:	20 61       	ori	r18, 0x10	; 16
    210a:	1d c0       	rjmp	.+58     	; 0x2146 <vfprintf+0xb0>
    210c:	8d 32       	cpi	r24, 0x2D	; 45
    210e:	61 f0       	breq	.+24     	; 0x2128 <vfprintf+0x92>
    2110:	80 33       	cpi	r24, 0x30	; 48
    2112:	69 f4       	brne	.+26     	; 0x212e <vfprintf+0x98>
    2114:	23 2d       	mov	r18, r3
    2116:	21 60       	ori	r18, 0x01	; 1
    2118:	16 c0       	rjmp	.+44     	; 0x2146 <vfprintf+0xb0>
    211a:	83 2d       	mov	r24, r3
    211c:	82 60       	ori	r24, 0x02	; 2
    211e:	38 2e       	mov	r3, r24
    2120:	e3 2d       	mov	r30, r3
    2122:	e4 60       	ori	r30, 0x04	; 4
    2124:	3e 2e       	mov	r3, r30
    2126:	2a c0       	rjmp	.+84     	; 0x217c <vfprintf+0xe6>
    2128:	f3 2d       	mov	r31, r3
    212a:	f8 60       	ori	r31, 0x08	; 8
    212c:	1d c0       	rjmp	.+58     	; 0x2168 <vfprintf+0xd2>
    212e:	37 fc       	sbrc	r3, 7
    2130:	2d c0       	rjmp	.+90     	; 0x218c <vfprintf+0xf6>
    2132:	20 ed       	ldi	r18, 0xD0	; 208
    2134:	28 0f       	add	r18, r24
    2136:	2a 30       	cpi	r18, 0x0A	; 10
    2138:	40 f0       	brcs	.+16     	; 0x214a <vfprintf+0xb4>
    213a:	8e 32       	cpi	r24, 0x2E	; 46
    213c:	b9 f4       	brne	.+46     	; 0x216c <vfprintf+0xd6>
    213e:	36 fc       	sbrc	r3, 6
    2140:	81 c1       	rjmp	.+770    	; 0x2444 <vfprintf+0x3ae>
    2142:	23 2d       	mov	r18, r3
    2144:	20 64       	ori	r18, 0x40	; 64
    2146:	32 2e       	mov	r3, r18
    2148:	19 c0       	rjmp	.+50     	; 0x217c <vfprintf+0xe6>
    214a:	36 fe       	sbrs	r3, 6
    214c:	06 c0       	rjmp	.+12     	; 0x215a <vfprintf+0xc4>
    214e:	8a e0       	ldi	r24, 0x0A	; 10
    2150:	98 9e       	mul	r9, r24
    2152:	20 0d       	add	r18, r0
    2154:	11 24       	eor	r1, r1
    2156:	92 2e       	mov	r9, r18
    2158:	11 c0       	rjmp	.+34     	; 0x217c <vfprintf+0xe6>
    215a:	ea e0       	ldi	r30, 0x0A	; 10
    215c:	2e 9e       	mul	r2, r30
    215e:	20 0d       	add	r18, r0
    2160:	11 24       	eor	r1, r1
    2162:	22 2e       	mov	r2, r18
    2164:	f3 2d       	mov	r31, r3
    2166:	f0 62       	ori	r31, 0x20	; 32
    2168:	3f 2e       	mov	r3, r31
    216a:	08 c0       	rjmp	.+16     	; 0x217c <vfprintf+0xe6>
    216c:	8c 36       	cpi	r24, 0x6C	; 108
    216e:	21 f4       	brne	.+8      	; 0x2178 <vfprintf+0xe2>
    2170:	83 2d       	mov	r24, r3
    2172:	80 68       	ori	r24, 0x80	; 128
    2174:	38 2e       	mov	r3, r24
    2176:	02 c0       	rjmp	.+4      	; 0x217c <vfprintf+0xe6>
    2178:	88 36       	cpi	r24, 0x68	; 104
    217a:	41 f4       	brne	.+16     	; 0x218c <vfprintf+0xf6>
    217c:	f7 01       	movw	r30, r14
    217e:	93 fd       	sbrc	r25, 3
    2180:	85 91       	lpm	r24, Z+
    2182:	93 ff       	sbrs	r25, 3
    2184:	81 91       	ld	r24, Z+
    2186:	7f 01       	movw	r14, r30
    2188:	81 11       	cpse	r24, r1
    218a:	b3 cf       	rjmp	.-154    	; 0x20f2 <vfprintf+0x5c>
    218c:	98 2f       	mov	r25, r24
    218e:	9f 7d       	andi	r25, 0xDF	; 223
    2190:	95 54       	subi	r25, 0x45	; 69
    2192:	93 30       	cpi	r25, 0x03	; 3
    2194:	28 f4       	brcc	.+10     	; 0x21a0 <vfprintf+0x10a>
    2196:	0c 5f       	subi	r16, 0xFC	; 252
    2198:	1f 4f       	sbci	r17, 0xFF	; 255
    219a:	9f e3       	ldi	r25, 0x3F	; 63
    219c:	99 83       	std	Y+1, r25	; 0x01
    219e:	0d c0       	rjmp	.+26     	; 0x21ba <vfprintf+0x124>
    21a0:	83 36       	cpi	r24, 0x63	; 99
    21a2:	31 f0       	breq	.+12     	; 0x21b0 <vfprintf+0x11a>
    21a4:	83 37       	cpi	r24, 0x73	; 115
    21a6:	71 f0       	breq	.+28     	; 0x21c4 <vfprintf+0x12e>
    21a8:	83 35       	cpi	r24, 0x53	; 83
    21aa:	09 f0       	breq	.+2      	; 0x21ae <vfprintf+0x118>
    21ac:	59 c0       	rjmp	.+178    	; 0x2260 <vfprintf+0x1ca>
    21ae:	21 c0       	rjmp	.+66     	; 0x21f2 <vfprintf+0x15c>
    21b0:	f8 01       	movw	r30, r16
    21b2:	80 81       	ld	r24, Z
    21b4:	89 83       	std	Y+1, r24	; 0x01
    21b6:	0e 5f       	subi	r16, 0xFE	; 254
    21b8:	1f 4f       	sbci	r17, 0xFF	; 255
    21ba:	88 24       	eor	r8, r8
    21bc:	83 94       	inc	r8
    21be:	91 2c       	mov	r9, r1
    21c0:	53 01       	movw	r10, r6
    21c2:	13 c0       	rjmp	.+38     	; 0x21ea <vfprintf+0x154>
    21c4:	28 01       	movw	r4, r16
    21c6:	f2 e0       	ldi	r31, 0x02	; 2
    21c8:	4f 0e       	add	r4, r31
    21ca:	51 1c       	adc	r5, r1
    21cc:	f8 01       	movw	r30, r16
    21ce:	a0 80       	ld	r10, Z
    21d0:	b1 80       	ldd	r11, Z+1	; 0x01
    21d2:	36 fe       	sbrs	r3, 6
    21d4:	03 c0       	rjmp	.+6      	; 0x21dc <vfprintf+0x146>
    21d6:	69 2d       	mov	r22, r9
    21d8:	70 e0       	ldi	r23, 0x00	; 0
    21da:	02 c0       	rjmp	.+4      	; 0x21e0 <vfprintf+0x14a>
    21dc:	6f ef       	ldi	r22, 0xFF	; 255
    21de:	7f ef       	ldi	r23, 0xFF	; 255
    21e0:	c5 01       	movw	r24, r10
    21e2:	0e 94 37 12 	call	0x246e	; 0x246e <strnlen>
    21e6:	4c 01       	movw	r8, r24
    21e8:	82 01       	movw	r16, r4
    21ea:	f3 2d       	mov	r31, r3
    21ec:	ff 77       	andi	r31, 0x7F	; 127
    21ee:	3f 2e       	mov	r3, r31
    21f0:	16 c0       	rjmp	.+44     	; 0x221e <vfprintf+0x188>
    21f2:	28 01       	movw	r4, r16
    21f4:	22 e0       	ldi	r18, 0x02	; 2
    21f6:	42 0e       	add	r4, r18
    21f8:	51 1c       	adc	r5, r1
    21fa:	f8 01       	movw	r30, r16
    21fc:	a0 80       	ld	r10, Z
    21fe:	b1 80       	ldd	r11, Z+1	; 0x01
    2200:	36 fe       	sbrs	r3, 6
    2202:	03 c0       	rjmp	.+6      	; 0x220a <vfprintf+0x174>
    2204:	69 2d       	mov	r22, r9
    2206:	70 e0       	ldi	r23, 0x00	; 0
    2208:	02 c0       	rjmp	.+4      	; 0x220e <vfprintf+0x178>
    220a:	6f ef       	ldi	r22, 0xFF	; 255
    220c:	7f ef       	ldi	r23, 0xFF	; 255
    220e:	c5 01       	movw	r24, r10
    2210:	0e 94 2c 12 	call	0x2458	; 0x2458 <strnlen_P>
    2214:	4c 01       	movw	r8, r24
    2216:	f3 2d       	mov	r31, r3
    2218:	f0 68       	ori	r31, 0x80	; 128
    221a:	3f 2e       	mov	r3, r31
    221c:	82 01       	movw	r16, r4
    221e:	33 fc       	sbrc	r3, 3
    2220:	1b c0       	rjmp	.+54     	; 0x2258 <vfprintf+0x1c2>
    2222:	82 2d       	mov	r24, r2
    2224:	90 e0       	ldi	r25, 0x00	; 0
    2226:	88 16       	cp	r8, r24
    2228:	99 06       	cpc	r9, r25
    222a:	b0 f4       	brcc	.+44     	; 0x2258 <vfprintf+0x1c2>
    222c:	b6 01       	movw	r22, r12
    222e:	80 e2       	ldi	r24, 0x20	; 32
    2230:	90 e0       	ldi	r25, 0x00	; 0
    2232:	0e 94 42 12 	call	0x2484	; 0x2484 <fputc>
    2236:	2a 94       	dec	r2
    2238:	f4 cf       	rjmp	.-24     	; 0x2222 <vfprintf+0x18c>
    223a:	f5 01       	movw	r30, r10
    223c:	37 fc       	sbrc	r3, 7
    223e:	85 91       	lpm	r24, Z+
    2240:	37 fe       	sbrs	r3, 7
    2242:	81 91       	ld	r24, Z+
    2244:	5f 01       	movw	r10, r30
    2246:	b6 01       	movw	r22, r12
    2248:	90 e0       	ldi	r25, 0x00	; 0
    224a:	0e 94 42 12 	call	0x2484	; 0x2484 <fputc>
    224e:	21 10       	cpse	r2, r1
    2250:	2a 94       	dec	r2
    2252:	21 e0       	ldi	r18, 0x01	; 1
    2254:	82 1a       	sub	r8, r18
    2256:	91 08       	sbc	r9, r1
    2258:	81 14       	cp	r8, r1
    225a:	91 04       	cpc	r9, r1
    225c:	71 f7       	brne	.-36     	; 0x223a <vfprintf+0x1a4>
    225e:	e8 c0       	rjmp	.+464    	; 0x2430 <vfprintf+0x39a>
    2260:	84 36       	cpi	r24, 0x64	; 100
    2262:	11 f0       	breq	.+4      	; 0x2268 <vfprintf+0x1d2>
    2264:	89 36       	cpi	r24, 0x69	; 105
    2266:	41 f5       	brne	.+80     	; 0x22b8 <vfprintf+0x222>
    2268:	f8 01       	movw	r30, r16
    226a:	37 fe       	sbrs	r3, 7
    226c:	07 c0       	rjmp	.+14     	; 0x227c <vfprintf+0x1e6>
    226e:	60 81       	ld	r22, Z
    2270:	71 81       	ldd	r23, Z+1	; 0x01
    2272:	82 81       	ldd	r24, Z+2	; 0x02
    2274:	93 81       	ldd	r25, Z+3	; 0x03
    2276:	0c 5f       	subi	r16, 0xFC	; 252
    2278:	1f 4f       	sbci	r17, 0xFF	; 255
    227a:	08 c0       	rjmp	.+16     	; 0x228c <vfprintf+0x1f6>
    227c:	60 81       	ld	r22, Z
    227e:	71 81       	ldd	r23, Z+1	; 0x01
    2280:	07 2e       	mov	r0, r23
    2282:	00 0c       	add	r0, r0
    2284:	88 0b       	sbc	r24, r24
    2286:	99 0b       	sbc	r25, r25
    2288:	0e 5f       	subi	r16, 0xFE	; 254
    228a:	1f 4f       	sbci	r17, 0xFF	; 255
    228c:	f3 2d       	mov	r31, r3
    228e:	ff 76       	andi	r31, 0x6F	; 111
    2290:	3f 2e       	mov	r3, r31
    2292:	97 ff       	sbrs	r25, 7
    2294:	09 c0       	rjmp	.+18     	; 0x22a8 <vfprintf+0x212>
    2296:	90 95       	com	r25
    2298:	80 95       	com	r24
    229a:	70 95       	com	r23
    229c:	61 95       	neg	r22
    229e:	7f 4f       	sbci	r23, 0xFF	; 255
    22a0:	8f 4f       	sbci	r24, 0xFF	; 255
    22a2:	9f 4f       	sbci	r25, 0xFF	; 255
    22a4:	f0 68       	ori	r31, 0x80	; 128
    22a6:	3f 2e       	mov	r3, r31
    22a8:	2a e0       	ldi	r18, 0x0A	; 10
    22aa:	30 e0       	ldi	r19, 0x00	; 0
    22ac:	a3 01       	movw	r20, r6
    22ae:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__ultoa_invert>
    22b2:	88 2e       	mov	r8, r24
    22b4:	86 18       	sub	r8, r6
    22b6:	45 c0       	rjmp	.+138    	; 0x2342 <vfprintf+0x2ac>
    22b8:	85 37       	cpi	r24, 0x75	; 117
    22ba:	31 f4       	brne	.+12     	; 0x22c8 <vfprintf+0x232>
    22bc:	23 2d       	mov	r18, r3
    22be:	2f 7e       	andi	r18, 0xEF	; 239
    22c0:	b2 2e       	mov	r11, r18
    22c2:	2a e0       	ldi	r18, 0x0A	; 10
    22c4:	30 e0       	ldi	r19, 0x00	; 0
    22c6:	25 c0       	rjmp	.+74     	; 0x2312 <vfprintf+0x27c>
    22c8:	93 2d       	mov	r25, r3
    22ca:	99 7f       	andi	r25, 0xF9	; 249
    22cc:	b9 2e       	mov	r11, r25
    22ce:	8f 36       	cpi	r24, 0x6F	; 111
    22d0:	c1 f0       	breq	.+48     	; 0x2302 <vfprintf+0x26c>
    22d2:	18 f4       	brcc	.+6      	; 0x22da <vfprintf+0x244>
    22d4:	88 35       	cpi	r24, 0x58	; 88
    22d6:	79 f0       	breq	.+30     	; 0x22f6 <vfprintf+0x260>
    22d8:	b5 c0       	rjmp	.+362    	; 0x2444 <vfprintf+0x3ae>
    22da:	80 37       	cpi	r24, 0x70	; 112
    22dc:	19 f0       	breq	.+6      	; 0x22e4 <vfprintf+0x24e>
    22de:	88 37       	cpi	r24, 0x78	; 120
    22e0:	21 f0       	breq	.+8      	; 0x22ea <vfprintf+0x254>
    22e2:	b0 c0       	rjmp	.+352    	; 0x2444 <vfprintf+0x3ae>
    22e4:	e9 2f       	mov	r30, r25
    22e6:	e0 61       	ori	r30, 0x10	; 16
    22e8:	be 2e       	mov	r11, r30
    22ea:	b4 fe       	sbrs	r11, 4
    22ec:	0d c0       	rjmp	.+26     	; 0x2308 <vfprintf+0x272>
    22ee:	fb 2d       	mov	r31, r11
    22f0:	f4 60       	ori	r31, 0x04	; 4
    22f2:	bf 2e       	mov	r11, r31
    22f4:	09 c0       	rjmp	.+18     	; 0x2308 <vfprintf+0x272>
    22f6:	34 fe       	sbrs	r3, 4
    22f8:	0a c0       	rjmp	.+20     	; 0x230e <vfprintf+0x278>
    22fa:	29 2f       	mov	r18, r25
    22fc:	26 60       	ori	r18, 0x06	; 6
    22fe:	b2 2e       	mov	r11, r18
    2300:	06 c0       	rjmp	.+12     	; 0x230e <vfprintf+0x278>
    2302:	28 e0       	ldi	r18, 0x08	; 8
    2304:	30 e0       	ldi	r19, 0x00	; 0
    2306:	05 c0       	rjmp	.+10     	; 0x2312 <vfprintf+0x27c>
    2308:	20 e1       	ldi	r18, 0x10	; 16
    230a:	30 e0       	ldi	r19, 0x00	; 0
    230c:	02 c0       	rjmp	.+4      	; 0x2312 <vfprintf+0x27c>
    230e:	20 e1       	ldi	r18, 0x10	; 16
    2310:	32 e0       	ldi	r19, 0x02	; 2
    2312:	f8 01       	movw	r30, r16
    2314:	b7 fe       	sbrs	r11, 7
    2316:	07 c0       	rjmp	.+14     	; 0x2326 <vfprintf+0x290>
    2318:	60 81       	ld	r22, Z
    231a:	71 81       	ldd	r23, Z+1	; 0x01
    231c:	82 81       	ldd	r24, Z+2	; 0x02
    231e:	93 81       	ldd	r25, Z+3	; 0x03
    2320:	0c 5f       	subi	r16, 0xFC	; 252
    2322:	1f 4f       	sbci	r17, 0xFF	; 255
    2324:	06 c0       	rjmp	.+12     	; 0x2332 <vfprintf+0x29c>
    2326:	60 81       	ld	r22, Z
    2328:	71 81       	ldd	r23, Z+1	; 0x01
    232a:	80 e0       	ldi	r24, 0x00	; 0
    232c:	90 e0       	ldi	r25, 0x00	; 0
    232e:	0e 5f       	subi	r16, 0xFE	; 254
    2330:	1f 4f       	sbci	r17, 0xFF	; 255
    2332:	a3 01       	movw	r20, r6
    2334:	0e 94 7e 12 	call	0x24fc	; 0x24fc <__ultoa_invert>
    2338:	88 2e       	mov	r8, r24
    233a:	86 18       	sub	r8, r6
    233c:	fb 2d       	mov	r31, r11
    233e:	ff 77       	andi	r31, 0x7F	; 127
    2340:	3f 2e       	mov	r3, r31
    2342:	36 fe       	sbrs	r3, 6
    2344:	0d c0       	rjmp	.+26     	; 0x2360 <vfprintf+0x2ca>
    2346:	23 2d       	mov	r18, r3
    2348:	2e 7f       	andi	r18, 0xFE	; 254
    234a:	a2 2e       	mov	r10, r18
    234c:	89 14       	cp	r8, r9
    234e:	58 f4       	brcc	.+22     	; 0x2366 <vfprintf+0x2d0>
    2350:	34 fe       	sbrs	r3, 4
    2352:	0b c0       	rjmp	.+22     	; 0x236a <vfprintf+0x2d4>
    2354:	32 fc       	sbrc	r3, 2
    2356:	09 c0       	rjmp	.+18     	; 0x236a <vfprintf+0x2d4>
    2358:	83 2d       	mov	r24, r3
    235a:	8e 7e       	andi	r24, 0xEE	; 238
    235c:	a8 2e       	mov	r10, r24
    235e:	05 c0       	rjmp	.+10     	; 0x236a <vfprintf+0x2d4>
    2360:	b8 2c       	mov	r11, r8
    2362:	a3 2c       	mov	r10, r3
    2364:	03 c0       	rjmp	.+6      	; 0x236c <vfprintf+0x2d6>
    2366:	b8 2c       	mov	r11, r8
    2368:	01 c0       	rjmp	.+2      	; 0x236c <vfprintf+0x2d6>
    236a:	b9 2c       	mov	r11, r9
    236c:	a4 fe       	sbrs	r10, 4
    236e:	0f c0       	rjmp	.+30     	; 0x238e <vfprintf+0x2f8>
    2370:	fe 01       	movw	r30, r28
    2372:	e8 0d       	add	r30, r8
    2374:	f1 1d       	adc	r31, r1
    2376:	80 81       	ld	r24, Z
    2378:	80 33       	cpi	r24, 0x30	; 48
    237a:	21 f4       	brne	.+8      	; 0x2384 <vfprintf+0x2ee>
    237c:	9a 2d       	mov	r25, r10
    237e:	99 7e       	andi	r25, 0xE9	; 233
    2380:	a9 2e       	mov	r10, r25
    2382:	09 c0       	rjmp	.+18     	; 0x2396 <vfprintf+0x300>
    2384:	a2 fe       	sbrs	r10, 2
    2386:	06 c0       	rjmp	.+12     	; 0x2394 <vfprintf+0x2fe>
    2388:	b3 94       	inc	r11
    238a:	b3 94       	inc	r11
    238c:	04 c0       	rjmp	.+8      	; 0x2396 <vfprintf+0x300>
    238e:	8a 2d       	mov	r24, r10
    2390:	86 78       	andi	r24, 0x86	; 134
    2392:	09 f0       	breq	.+2      	; 0x2396 <vfprintf+0x300>
    2394:	b3 94       	inc	r11
    2396:	a3 fc       	sbrc	r10, 3
    2398:	11 c0       	rjmp	.+34     	; 0x23bc <vfprintf+0x326>
    239a:	a0 fe       	sbrs	r10, 0
    239c:	06 c0       	rjmp	.+12     	; 0x23aa <vfprintf+0x314>
    239e:	b2 14       	cp	r11, r2
    23a0:	88 f4       	brcc	.+34     	; 0x23c4 <vfprintf+0x32e>
    23a2:	28 0c       	add	r2, r8
    23a4:	92 2c       	mov	r9, r2
    23a6:	9b 18       	sub	r9, r11
    23a8:	0e c0       	rjmp	.+28     	; 0x23c6 <vfprintf+0x330>
    23aa:	b2 14       	cp	r11, r2
    23ac:	60 f4       	brcc	.+24     	; 0x23c6 <vfprintf+0x330>
    23ae:	b6 01       	movw	r22, r12
    23b0:	80 e2       	ldi	r24, 0x20	; 32
    23b2:	90 e0       	ldi	r25, 0x00	; 0
    23b4:	0e 94 42 12 	call	0x2484	; 0x2484 <fputc>
    23b8:	b3 94       	inc	r11
    23ba:	f7 cf       	rjmp	.-18     	; 0x23aa <vfprintf+0x314>
    23bc:	b2 14       	cp	r11, r2
    23be:	18 f4       	brcc	.+6      	; 0x23c6 <vfprintf+0x330>
    23c0:	2b 18       	sub	r2, r11
    23c2:	02 c0       	rjmp	.+4      	; 0x23c8 <vfprintf+0x332>
    23c4:	98 2c       	mov	r9, r8
    23c6:	21 2c       	mov	r2, r1
    23c8:	a4 fe       	sbrs	r10, 4
    23ca:	10 c0       	rjmp	.+32     	; 0x23ec <vfprintf+0x356>
    23cc:	b6 01       	movw	r22, r12
    23ce:	80 e3       	ldi	r24, 0x30	; 48
    23d0:	90 e0       	ldi	r25, 0x00	; 0
    23d2:	0e 94 42 12 	call	0x2484	; 0x2484 <fputc>
    23d6:	a2 fe       	sbrs	r10, 2
    23d8:	17 c0       	rjmp	.+46     	; 0x2408 <vfprintf+0x372>
    23da:	a1 fc       	sbrc	r10, 1
    23dc:	03 c0       	rjmp	.+6      	; 0x23e4 <vfprintf+0x34e>
    23de:	88 e7       	ldi	r24, 0x78	; 120
    23e0:	90 e0       	ldi	r25, 0x00	; 0
    23e2:	02 c0       	rjmp	.+4      	; 0x23e8 <vfprintf+0x352>
    23e4:	88 e5       	ldi	r24, 0x58	; 88
    23e6:	90 e0       	ldi	r25, 0x00	; 0
    23e8:	b6 01       	movw	r22, r12
    23ea:	0c c0       	rjmp	.+24     	; 0x2404 <vfprintf+0x36e>
    23ec:	8a 2d       	mov	r24, r10
    23ee:	86 78       	andi	r24, 0x86	; 134
    23f0:	59 f0       	breq	.+22     	; 0x2408 <vfprintf+0x372>
    23f2:	a1 fe       	sbrs	r10, 1
    23f4:	02 c0       	rjmp	.+4      	; 0x23fa <vfprintf+0x364>
    23f6:	8b e2       	ldi	r24, 0x2B	; 43
    23f8:	01 c0       	rjmp	.+2      	; 0x23fc <vfprintf+0x366>
    23fa:	80 e2       	ldi	r24, 0x20	; 32
    23fc:	a7 fc       	sbrc	r10, 7
    23fe:	8d e2       	ldi	r24, 0x2D	; 45
    2400:	b6 01       	movw	r22, r12
    2402:	90 e0       	ldi	r25, 0x00	; 0
    2404:	0e 94 42 12 	call	0x2484	; 0x2484 <fputc>
    2408:	89 14       	cp	r8, r9
    240a:	38 f4       	brcc	.+14     	; 0x241a <vfprintf+0x384>
    240c:	b6 01       	movw	r22, r12
    240e:	80 e3       	ldi	r24, 0x30	; 48
    2410:	90 e0       	ldi	r25, 0x00	; 0
    2412:	0e 94 42 12 	call	0x2484	; 0x2484 <fputc>
    2416:	9a 94       	dec	r9
    2418:	f7 cf       	rjmp	.-18     	; 0x2408 <vfprintf+0x372>
    241a:	8a 94       	dec	r8
    241c:	f3 01       	movw	r30, r6
    241e:	e8 0d       	add	r30, r8
    2420:	f1 1d       	adc	r31, r1
    2422:	80 81       	ld	r24, Z
    2424:	b6 01       	movw	r22, r12
    2426:	90 e0       	ldi	r25, 0x00	; 0
    2428:	0e 94 42 12 	call	0x2484	; 0x2484 <fputc>
    242c:	81 10       	cpse	r8, r1
    242e:	f5 cf       	rjmp	.-22     	; 0x241a <vfprintf+0x384>
    2430:	22 20       	and	r2, r2
    2432:	09 f4       	brne	.+2      	; 0x2436 <vfprintf+0x3a0>
    2434:	42 ce       	rjmp	.-892    	; 0x20ba <vfprintf+0x24>
    2436:	b6 01       	movw	r22, r12
    2438:	80 e2       	ldi	r24, 0x20	; 32
    243a:	90 e0       	ldi	r25, 0x00	; 0
    243c:	0e 94 42 12 	call	0x2484	; 0x2484 <fputc>
    2440:	2a 94       	dec	r2
    2442:	f6 cf       	rjmp	.-20     	; 0x2430 <vfprintf+0x39a>
    2444:	f6 01       	movw	r30, r12
    2446:	86 81       	ldd	r24, Z+6	; 0x06
    2448:	97 81       	ldd	r25, Z+7	; 0x07
    244a:	02 c0       	rjmp	.+4      	; 0x2450 <vfprintf+0x3ba>
    244c:	8f ef       	ldi	r24, 0xFF	; 255
    244e:	9f ef       	ldi	r25, 0xFF	; 255
    2450:	2b 96       	adiw	r28, 0x0b	; 11
    2452:	e2 e1       	ldi	r30, 0x12	; 18
    2454:	0c 94 f8 12 	jmp	0x25f0	; 0x25f0 <__epilogue_restores__>

00002458 <strnlen_P>:
    2458:	fc 01       	movw	r30, r24
    245a:	05 90       	lpm	r0, Z+
    245c:	61 50       	subi	r22, 0x01	; 1
    245e:	70 40       	sbci	r23, 0x00	; 0
    2460:	01 10       	cpse	r0, r1
    2462:	d8 f7       	brcc	.-10     	; 0x245a <strnlen_P+0x2>
    2464:	80 95       	com	r24
    2466:	90 95       	com	r25
    2468:	8e 0f       	add	r24, r30
    246a:	9f 1f       	adc	r25, r31
    246c:	08 95       	ret

0000246e <strnlen>:
    246e:	fc 01       	movw	r30, r24
    2470:	61 50       	subi	r22, 0x01	; 1
    2472:	70 40       	sbci	r23, 0x00	; 0
    2474:	01 90       	ld	r0, Z+
    2476:	01 10       	cpse	r0, r1
    2478:	d8 f7       	brcc	.-10     	; 0x2470 <strnlen+0x2>
    247a:	80 95       	com	r24
    247c:	90 95       	com	r25
    247e:	8e 0f       	add	r24, r30
    2480:	9f 1f       	adc	r25, r31
    2482:	08 95       	ret

00002484 <fputc>:
    2484:	0f 93       	push	r16
    2486:	1f 93       	push	r17
    2488:	cf 93       	push	r28
    248a:	df 93       	push	r29
    248c:	fb 01       	movw	r30, r22
    248e:	23 81       	ldd	r18, Z+3	; 0x03
    2490:	21 fd       	sbrc	r18, 1
    2492:	03 c0       	rjmp	.+6      	; 0x249a <fputc+0x16>
    2494:	8f ef       	ldi	r24, 0xFF	; 255
    2496:	9f ef       	ldi	r25, 0xFF	; 255
    2498:	2c c0       	rjmp	.+88     	; 0x24f2 <fputc+0x6e>
    249a:	22 ff       	sbrs	r18, 2
    249c:	16 c0       	rjmp	.+44     	; 0x24ca <fputc+0x46>
    249e:	46 81       	ldd	r20, Z+6	; 0x06
    24a0:	57 81       	ldd	r21, Z+7	; 0x07
    24a2:	24 81       	ldd	r18, Z+4	; 0x04
    24a4:	35 81       	ldd	r19, Z+5	; 0x05
    24a6:	42 17       	cp	r20, r18
    24a8:	53 07       	cpc	r21, r19
    24aa:	44 f4       	brge	.+16     	; 0x24bc <fputc+0x38>
    24ac:	a0 81       	ld	r26, Z
    24ae:	b1 81       	ldd	r27, Z+1	; 0x01
    24b0:	9d 01       	movw	r18, r26
    24b2:	2f 5f       	subi	r18, 0xFF	; 255
    24b4:	3f 4f       	sbci	r19, 0xFF	; 255
    24b6:	31 83       	std	Z+1, r19	; 0x01
    24b8:	20 83       	st	Z, r18
    24ba:	8c 93       	st	X, r24
    24bc:	26 81       	ldd	r18, Z+6	; 0x06
    24be:	37 81       	ldd	r19, Z+7	; 0x07
    24c0:	2f 5f       	subi	r18, 0xFF	; 255
    24c2:	3f 4f       	sbci	r19, 0xFF	; 255
    24c4:	37 83       	std	Z+7, r19	; 0x07
    24c6:	26 83       	std	Z+6, r18	; 0x06
    24c8:	14 c0       	rjmp	.+40     	; 0x24f2 <fputc+0x6e>
    24ca:	8b 01       	movw	r16, r22
    24cc:	ec 01       	movw	r28, r24
    24ce:	fb 01       	movw	r30, r22
    24d0:	00 84       	ldd	r0, Z+8	; 0x08
    24d2:	f1 85       	ldd	r31, Z+9	; 0x09
    24d4:	e0 2d       	mov	r30, r0
    24d6:	09 95       	icall
    24d8:	89 2b       	or	r24, r25
    24da:	e1 f6       	brne	.-72     	; 0x2494 <fputc+0x10>
    24dc:	d8 01       	movw	r26, r16
    24de:	16 96       	adiw	r26, 0x06	; 6
    24e0:	8d 91       	ld	r24, X+
    24e2:	9c 91       	ld	r25, X
    24e4:	17 97       	sbiw	r26, 0x07	; 7
    24e6:	01 96       	adiw	r24, 0x01	; 1
    24e8:	17 96       	adiw	r26, 0x07	; 7
    24ea:	9c 93       	st	X, r25
    24ec:	8e 93       	st	-X, r24
    24ee:	16 97       	sbiw	r26, 0x06	; 6
    24f0:	ce 01       	movw	r24, r28
    24f2:	df 91       	pop	r29
    24f4:	cf 91       	pop	r28
    24f6:	1f 91       	pop	r17
    24f8:	0f 91       	pop	r16
    24fa:	08 95       	ret

000024fc <__ultoa_invert>:
    24fc:	fa 01       	movw	r30, r20
    24fe:	aa 27       	eor	r26, r26
    2500:	28 30       	cpi	r18, 0x08	; 8
    2502:	51 f1       	breq	.+84     	; 0x2558 <__ultoa_invert+0x5c>
    2504:	20 31       	cpi	r18, 0x10	; 16
    2506:	81 f1       	breq	.+96     	; 0x2568 <__ultoa_invert+0x6c>
    2508:	e8 94       	clt
    250a:	6f 93       	push	r22
    250c:	6e 7f       	andi	r22, 0xFE	; 254
    250e:	6e 5f       	subi	r22, 0xFE	; 254
    2510:	7f 4f       	sbci	r23, 0xFF	; 255
    2512:	8f 4f       	sbci	r24, 0xFF	; 255
    2514:	9f 4f       	sbci	r25, 0xFF	; 255
    2516:	af 4f       	sbci	r26, 0xFF	; 255
    2518:	b1 e0       	ldi	r27, 0x01	; 1
    251a:	3e d0       	rcall	.+124    	; 0x2598 <__ultoa_invert+0x9c>
    251c:	b4 e0       	ldi	r27, 0x04	; 4
    251e:	3c d0       	rcall	.+120    	; 0x2598 <__ultoa_invert+0x9c>
    2520:	67 0f       	add	r22, r23
    2522:	78 1f       	adc	r23, r24
    2524:	89 1f       	adc	r24, r25
    2526:	9a 1f       	adc	r25, r26
    2528:	a1 1d       	adc	r26, r1
    252a:	68 0f       	add	r22, r24
    252c:	79 1f       	adc	r23, r25
    252e:	8a 1f       	adc	r24, r26
    2530:	91 1d       	adc	r25, r1
    2532:	a1 1d       	adc	r26, r1
    2534:	6a 0f       	add	r22, r26
    2536:	71 1d       	adc	r23, r1
    2538:	81 1d       	adc	r24, r1
    253a:	91 1d       	adc	r25, r1
    253c:	a1 1d       	adc	r26, r1
    253e:	20 d0       	rcall	.+64     	; 0x2580 <__ultoa_invert+0x84>
    2540:	09 f4       	brne	.+2      	; 0x2544 <__ultoa_invert+0x48>
    2542:	68 94       	set
    2544:	3f 91       	pop	r19
    2546:	2a e0       	ldi	r18, 0x0A	; 10
    2548:	26 9f       	mul	r18, r22
    254a:	11 24       	eor	r1, r1
    254c:	30 19       	sub	r19, r0
    254e:	30 5d       	subi	r19, 0xD0	; 208
    2550:	31 93       	st	Z+, r19
    2552:	de f6       	brtc	.-74     	; 0x250a <__ultoa_invert+0xe>
    2554:	cf 01       	movw	r24, r30
    2556:	08 95       	ret
    2558:	46 2f       	mov	r20, r22
    255a:	47 70       	andi	r20, 0x07	; 7
    255c:	40 5d       	subi	r20, 0xD0	; 208
    255e:	41 93       	st	Z+, r20
    2560:	b3 e0       	ldi	r27, 0x03	; 3
    2562:	0f d0       	rcall	.+30     	; 0x2582 <__ultoa_invert+0x86>
    2564:	c9 f7       	brne	.-14     	; 0x2558 <__ultoa_invert+0x5c>
    2566:	f6 cf       	rjmp	.-20     	; 0x2554 <__ultoa_invert+0x58>
    2568:	46 2f       	mov	r20, r22
    256a:	4f 70       	andi	r20, 0x0F	; 15
    256c:	40 5d       	subi	r20, 0xD0	; 208
    256e:	4a 33       	cpi	r20, 0x3A	; 58
    2570:	18 f0       	brcs	.+6      	; 0x2578 <__ultoa_invert+0x7c>
    2572:	49 5d       	subi	r20, 0xD9	; 217
    2574:	31 fd       	sbrc	r19, 1
    2576:	40 52       	subi	r20, 0x20	; 32
    2578:	41 93       	st	Z+, r20
    257a:	02 d0       	rcall	.+4      	; 0x2580 <__ultoa_invert+0x84>
    257c:	a9 f7       	brne	.-22     	; 0x2568 <__ultoa_invert+0x6c>
    257e:	ea cf       	rjmp	.-44     	; 0x2554 <__ultoa_invert+0x58>
    2580:	b4 e0       	ldi	r27, 0x04	; 4
    2582:	a6 95       	lsr	r26
    2584:	97 95       	ror	r25
    2586:	87 95       	ror	r24
    2588:	77 95       	ror	r23
    258a:	67 95       	ror	r22
    258c:	ba 95       	dec	r27
    258e:	c9 f7       	brne	.-14     	; 0x2582 <__ultoa_invert+0x86>
    2590:	00 97       	sbiw	r24, 0x00	; 0
    2592:	61 05       	cpc	r22, r1
    2594:	71 05       	cpc	r23, r1
    2596:	08 95       	ret
    2598:	9b 01       	movw	r18, r22
    259a:	ac 01       	movw	r20, r24
    259c:	0a 2e       	mov	r0, r26
    259e:	06 94       	lsr	r0
    25a0:	57 95       	ror	r21
    25a2:	47 95       	ror	r20
    25a4:	37 95       	ror	r19
    25a6:	27 95       	ror	r18
    25a8:	ba 95       	dec	r27
    25aa:	c9 f7       	brne	.-14     	; 0x259e <__ultoa_invert+0xa2>
    25ac:	62 0f       	add	r22, r18
    25ae:	73 1f       	adc	r23, r19
    25b0:	84 1f       	adc	r24, r20
    25b2:	95 1f       	adc	r25, r21
    25b4:	a0 1d       	adc	r26, r0
    25b6:	08 95       	ret

000025b8 <__prologue_saves__>:
    25b8:	2f 92       	push	r2
    25ba:	3f 92       	push	r3
    25bc:	4f 92       	push	r4
    25be:	5f 92       	push	r5
    25c0:	6f 92       	push	r6
    25c2:	7f 92       	push	r7
    25c4:	8f 92       	push	r8
    25c6:	9f 92       	push	r9
    25c8:	af 92       	push	r10
    25ca:	bf 92       	push	r11
    25cc:	cf 92       	push	r12
    25ce:	df 92       	push	r13
    25d0:	ef 92       	push	r14
    25d2:	ff 92       	push	r15
    25d4:	0f 93       	push	r16
    25d6:	1f 93       	push	r17
    25d8:	cf 93       	push	r28
    25da:	df 93       	push	r29
    25dc:	cd b7       	in	r28, 0x3d	; 61
    25de:	de b7       	in	r29, 0x3e	; 62
    25e0:	ca 1b       	sub	r28, r26
    25e2:	db 0b       	sbc	r29, r27
    25e4:	0f b6       	in	r0, 0x3f	; 63
    25e6:	f8 94       	cli
    25e8:	de bf       	out	0x3e, r29	; 62
    25ea:	0f be       	out	0x3f, r0	; 63
    25ec:	cd bf       	out	0x3d, r28	; 61
    25ee:	09 94       	ijmp

000025f0 <__epilogue_restores__>:
    25f0:	2a 88       	ldd	r2, Y+18	; 0x12
    25f2:	39 88       	ldd	r3, Y+17	; 0x11
    25f4:	48 88       	ldd	r4, Y+16	; 0x10
    25f6:	5f 84       	ldd	r5, Y+15	; 0x0f
    25f8:	6e 84       	ldd	r6, Y+14	; 0x0e
    25fa:	7d 84       	ldd	r7, Y+13	; 0x0d
    25fc:	8c 84       	ldd	r8, Y+12	; 0x0c
    25fe:	9b 84       	ldd	r9, Y+11	; 0x0b
    2600:	aa 84       	ldd	r10, Y+10	; 0x0a
    2602:	b9 84       	ldd	r11, Y+9	; 0x09
    2604:	c8 84       	ldd	r12, Y+8	; 0x08
    2606:	df 80       	ldd	r13, Y+7	; 0x07
    2608:	ee 80       	ldd	r14, Y+6	; 0x06
    260a:	fd 80       	ldd	r15, Y+5	; 0x05
    260c:	0c 81       	ldd	r16, Y+4	; 0x04
    260e:	1b 81       	ldd	r17, Y+3	; 0x03
    2610:	aa 81       	ldd	r26, Y+2	; 0x02
    2612:	b9 81       	ldd	r27, Y+1	; 0x01
    2614:	ce 0f       	add	r28, r30
    2616:	d1 1d       	adc	r29, r1
    2618:	0f b6       	in	r0, 0x3f	; 63
    261a:	f8 94       	cli
    261c:	de bf       	out	0x3e, r29	; 62
    261e:	0f be       	out	0x3f, r0	; 63
    2620:	cd bf       	out	0x3d, r28	; 61
    2622:	ed 01       	movw	r28, r26
    2624:	08 95       	ret

00002626 <_exit>:
    2626:	f8 94       	cli

00002628 <__stop_program>:
    2628:	ff cf       	rjmp	.-2      	; 0x2628 <__stop_program>
